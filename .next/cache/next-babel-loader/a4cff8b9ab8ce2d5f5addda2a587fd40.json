{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/preload.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Player from './Player';\nimport { YouTube } from './players/YouTube';\nimport { SoundCloud } from './players/SoundCloud';\nimport { Vimeo } from './players/Vimeo';\nimport { DailyMotion } from './players/DailyMotion';\nconst PRELOAD_PLAYERS = [{\n  Player: YouTube,\n  configKey: 'youtube',\n  url: 'https://www.youtube.com/watch?v=GlCmAC4MHek'\n}, {\n  Player: SoundCloud,\n  configKey: 'soundcloud',\n  url: 'https://soundcloud.com/seucheu/john-cage-433-8-bit-version'\n}, {\n  Player: Vimeo,\n  configKey: 'vimeo',\n  url: 'https://vimeo.com/300970506'\n}, {\n  Player: DailyMotion,\n  configKey: 'dailymotion',\n  url: 'http://www.dailymotion.com/video/xqdpyk'\n}];\nexport default function renderPreloadPlayers(url, controls, config) {\n  const players = [];\n\n  for (let player of PRELOAD_PLAYERS) {\n    if (!player.Player.canPlay(url) && config[player.configKey].preload) {\n      players.push(__jsx(Player, {\n        key: player.Player.displayName,\n        activePlayer: player.Player,\n        url: player.url,\n        controls: controls,\n        playing: true,\n        muted: true,\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  return players;\n}","map":{"version":3,"sources":["/Users/braflow/loomradio/src/preload.js"],"names":["React","Player","YouTube","SoundCloud","Vimeo","DailyMotion","PRELOAD_PLAYERS","configKey","url","renderPreloadPlayers","controls","config","players","player","canPlay","preload","push","displayName","display"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,MAAMC,eAAe,GAAG,CACtB;AACEL,EAAAA,MAAM,EAAEC,OADV;AAEEK,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CADsB,EAMtB;AACEP,EAAAA,MAAM,EAAEE,UADV;AAEEI,EAAAA,SAAS,EAAE,YAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CANsB,EAWtB;AACEP,EAAAA,MAAM,EAAEG,KADV;AAEEG,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAXsB,EAgBtB;AACEP,EAAAA,MAAM,EAAEI,WADV;AAEEE,EAAAA,SAAS,EAAE,aAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAhBsB,CAAxB;AAuBA,eAAe,SAASC,oBAAT,CAA+BD,GAA/B,EAAoCE,QAApC,EAA8CC,MAA9C,EAAsD;AACnE,QAAMC,OAAO,GAAG,EAAhB;;AAEA,OAAK,IAAIC,MAAT,IAAmBP,eAAnB,EAAoC;AAClC,QAAI,CAACO,MAAM,CAACZ,MAAP,CAAca,OAAd,CAAsBN,GAAtB,CAAD,IAA+BG,MAAM,CAACE,MAAM,CAACN,SAAR,CAAN,CAAyBQ,OAA5D,EAAqE;AACnEH,MAAAA,OAAO,CAACI,IAAR,CACE,MAAC,MAAD;AACE,QAAA,GAAG,EAAEH,MAAM,CAACZ,MAAP,CAAcgB,WADrB;AAEE,QAAA,YAAY,EAAEJ,MAAM,CAACZ,MAFvB;AAGE,QAAA,GAAG,EAAEY,MAAM,CAACL,GAHd;AAIE,QAAA,QAAQ,EAAEE,QAJZ;AAKE,QAAA,OAAO,MALT;AAME,QAAA,KAAK,MANP;AAOE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,OAAO,EAAE;AAAX,SAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;AACF;;AAED,SAAON,OAAP;AACD","sourcesContent":["import React from 'react'\n\nimport Player from './Player'\nimport { YouTube } from './players/YouTube'\nimport { SoundCloud } from './players/SoundCloud'\nimport { Vimeo } from './players/Vimeo'\nimport { DailyMotion } from './players/DailyMotion'\n\nconst PRELOAD_PLAYERS = [\n  {\n    Player: YouTube,\n    configKey: 'youtube',\n    url: 'https://www.youtube.com/watch?v=GlCmAC4MHek'\n  },\n  {\n    Player: SoundCloud,\n    configKey: 'soundcloud',\n    url: 'https://soundcloud.com/seucheu/john-cage-433-8-bit-version'\n  },\n  {\n    Player: Vimeo,\n    configKey: 'vimeo',\n    url: 'https://vimeo.com/300970506'\n  },\n  {\n    Player: DailyMotion,\n    configKey: 'dailymotion',\n    url: 'http://www.dailymotion.com/video/xqdpyk'\n  }\n]\n\nexport default function renderPreloadPlayers (url, controls, config) {\n  const players = []\n\n  for (let player of PRELOAD_PLAYERS) {\n    if (!player.Player.canPlay(url) && config[player.configKey].preload) {\n      players.push(\n        <Player\n          key={player.Player.displayName}\n          activePlayer={player.Player}\n          url={player.url}\n          controls={controls}\n          playing\n          muted\n          style={{ display: 'none' }}\n        />\n      )\n    }\n  }\n\n  return players\n}\n"]},"metadata":{},"sourceType":"module"}