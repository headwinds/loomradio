{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/braflow/loomradio/src/players/FilePlayer.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { Component } from \"react\";\nimport { getSDK, isMediaStream } from \"../utils\";\nimport createSinglePlayer from \"../singlePlayer\";\nvar IOS = typeof navigator !== \"undefined\" && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nvar AUDIO_EXTENSIONS = /\\.(m4a|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\\?)/i;\nvar VIDEO_EXTENSIONS = /\\.(mp4|og[gv]|webm|mov|m4v)($|\\?)/i;\nvar HLS_EXTENSIONS = /\\.(m3u8)($|\\?)/i;\nvar HLS_SDK_URL = \"https://cdnjs.cloudflare.com/ajax/libs/hls.js/VERSION/hls.min.js\";\nvar HLS_GLOBAL = \"Hls\";\nvar DASH_EXTENSIONS = /\\.(mpd)($|\\?)/i;\nvar DASH_SDK_URL = \"https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js\";\nvar DASH_GLOBAL = \"dashjs\";\nvar MATCH_DROPBOX_URL = /www\\.dropbox\\.com\\/.+/;\n\nfunction canPlay(url) {\n  if (url instanceof Array) {\n    var _iterator = _createForOfIteratorHelper(url),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n\n        if (typeof item === \"string\" && canPlay(item)) {\n          return true;\n        }\n\n        if (canPlay(item.src)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return false;\n  }\n\n  if (isMediaStream(url)) {\n    return true;\n  }\n\n  return AUDIO_EXTENSIONS.test(url) || VIDEO_EXTENSIONS.test(url) || HLS_EXTENSIONS.test(url) || DASH_EXTENSIONS.test(url);\n}\n\nfunction canEnablePIP(url) {\n  return canPlay(url) && !!document.pictureInPictureEnabled && !AUDIO_EXTENSIONS.test(url);\n}\n\nexport var FilePlayer = /*#__PURE__*/function (_Component) {\n  _inherits(FilePlayer, _Component);\n\n  var _super = _createSuper(FilePlayer);\n\n  function FilePlayer() {\n    var _this;\n\n    _classCallCheck(this, FilePlayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onDisablePIP\", function (e) {\n      var _this$props = _this.props,\n          onDisablePIP = _this$props.onDisablePIP,\n          playing = _this$props.playing;\n      onDisablePIP(e);\n\n      if (playing) {\n        _this.play();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSeek\", function (e) {\n      _this.props.onSeek(e.target.currentTime);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mute\", function () {\n      _this.player.muted = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unmute\", function () {\n      _this.player.muted = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSourceElement\", function (source, index) {\n      if (typeof source === \"string\") {\n        return __jsx(\"source\", {\n          key: index,\n          src: source,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return __jsx(\"source\", _extends({\n        key: index\n      }, source, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 12\n        }\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTrack\", function (track, index) {\n      return __jsx(\"track\", _extends({\n        key: index\n      }, track, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 12\n        }\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", function (player) {\n      _this.player = player;\n    });\n\n    return _this;\n  }\n\n  _createClass(FilePlayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"mounted \", this.props);\n      this.addListeners();\n\n      if (IOS) {\n        this.player.load();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(nextProps)) {\n        this.removeListeners();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {\n        this.addListeners();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"addListeners\",\n    value: function addListeners() {\n      var _this$props2 = this.props,\n          onReady = _this$props2.onReady,\n          onPlay = _this$props2.onPlay,\n          onBuffer = _this$props2.onBuffer,\n          onBufferEnd = _this$props2.onBufferEnd,\n          onPause = _this$props2.onPause,\n          onEnded = _this$props2.onEnded,\n          onError = _this$props2.onError,\n          playsinline = _this$props2.playsinline,\n          onEnablePIP = _this$props2.onEnablePIP;\n      this.player.addEventListener(\"canplay\", onReady);\n      this.player.addEventListener(\"play\", onPlay);\n      this.player.addEventListener(\"waiting\", onBuffer);\n      this.player.addEventListener(\"playing\", onBufferEnd);\n      this.player.addEventListener(\"pause\", onPause);\n      this.player.addEventListener(\"seeked\", this.onSeek);\n      this.player.addEventListener(\"ended\", onEnded);\n      this.player.addEventListener(\"error\", onError);\n      this.player.addEventListener(\"enterpictureinpicture\", onEnablePIP);\n      this.player.addEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n\n      if (playsinline) {\n        this.player.setAttribute(\"playsinline\", \"\");\n        this.player.setAttribute(\"webkit-playsinline\", \"\");\n        this.player.setAttribute(\"x5-playsinline\", \"\");\n      }\n    }\n  }, {\n    key: \"removeListeners\",\n    value: function removeListeners() {\n      var _this$props3 = this.props,\n          onReady = _this$props3.onReady,\n          onPlay = _this$props3.onPlay,\n          onBuffer = _this$props3.onBuffer,\n          onBufferEnd = _this$props3.onBufferEnd,\n          onPause = _this$props3.onPause,\n          onEnded = _this$props3.onEnded,\n          onError = _this$props3.onError,\n          onEnablePIP = _this$props3.onEnablePIP;\n      this.player.removeEventListener(\"canplay\", onReady);\n      this.player.removeEventListener(\"play\", onPlay);\n      this.player.removeEventListener(\"waiting\", onBuffer);\n      this.player.removeEventListener(\"playing\", onBufferEnd);\n      this.player.removeEventListener(\"pause\", onPause);\n      this.player.removeEventListener(\"seeked\", this.onSeek);\n      this.player.removeEventListener(\"ended\", onEnded);\n      this.player.removeEventListener(\"error\", onError);\n      this.player.removeEventListener(\"enterpictureinpicture\", onEnablePIP);\n      this.player.removeEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n    }\n  }, {\n    key: \"shouldUseAudio\",\n    value: function shouldUseAudio(props) {\n      if (props.config.file.forceVideo) {\n        return false;\n      }\n\n      if (props.config.file.attributes.poster) {\n        return false; // Use <video> so that poster is shown\n      }\n\n      return AUDIO_EXTENSIONS.test(props.url) || props.config.file.forceAudio;\n    }\n  }, {\n    key: \"shouldUseHLS\",\n    value: function shouldUseHLS(url) {\n      return HLS_EXTENSIONS.test(url) && !IOS || this.props.config.file.forceHLS;\n    }\n  }, {\n    key: \"shouldUseDASH\",\n    value: function shouldUseDASH(url) {\n      return DASH_EXTENSIONS.test(url) || this.props.config.file.forceDASH;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url) {\n      var _this2 = this;\n\n      var _this$props$config$fi = this.props.config.file,\n          hlsVersion = _this$props$config$fi.hlsVersion,\n          dashVersion = _this$props$config$fi.dashVersion;\n\n      if (this.shouldUseHLS(url)) {\n        getSDK(HLS_SDK_URL.replace(\"VERSION\", hlsVersion), HLS_GLOBAL).then(function (Hls) {\n          _this2.hls = new Hls(_this2.props.config.file.hlsOptions);\n\n          _this2.hls.on(Hls.Events.ERROR, function (e, data) {\n            _this2.props.onError(e, data, _this2.hls, Hls);\n          });\n\n          _this2.hls.loadSource(url);\n\n          _this2.hls.attachMedia(_this2.player);\n        });\n      }\n\n      if (this.shouldUseDASH(url)) {\n        getSDK(DASH_SDK_URL.replace(\"VERSION\", dashVersion), DASH_GLOBAL).then(function (dashjs) {\n          _this2.dash = dashjs.MediaPlayer().create();\n\n          _this2.dash.initialize(_this2.player, url, _this2.props.playing);\n\n          _this2.dash.getDebug().setLogToBrowserConsole(false);\n        });\n      }\n\n      if (url instanceof Array) {\n        // When setting new urls (<source>) on an already loaded video,\n        // HTMLMediaElement.load() is needed to reset the media element\n        // and restart the media resource. Just replacing children source\n        // dom nodes is not enough\n        this.player.load();\n      } else if (isMediaStream(url)) {\n        try {\n          this.player.srcObject = url;\n        } catch (e) {\n          this.player.src = window.URL.createObjectURL(url);\n        }\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var promise = this.player.play();\n\n      if (promise) {\n        promise.then(function (success) {\n          console.log(\"FilePlayer -> play -> success\", success);\n        }, function (err) {\n          console.log(\"FilePlayer -> play -> err\", err); //this.props.onError;\n        })[\"catch\"](this.props.onError);\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.player.pause();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.player.removeAttribute(\"src\");\n\n      if (this.hls) {\n        this.hls.destroy();\n      }\n\n      if (this.dash) {\n        this.dash.reset();\n      }\n    }\n  }, {\n    key: \"seekTo\",\n    value: function seekTo(seconds) {\n      this.player.currentTime = seconds;\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(fraction) {\n      this.player.volume = fraction;\n    }\n  }, {\n    key: \"enablePIP\",\n    value: function enablePIP() {\n      if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\n        this.player.requestPictureInPicture();\n      }\n    }\n  }, {\n    key: \"disablePIP\",\n    value: function disablePIP() {\n      if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\n        document.exitPictureInPicture();\n      }\n    }\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(rate) {\n      this.player.playbackRate = rate;\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      if (!this.player) return null;\n      var _this$player = this.player,\n          duration = _this$player.duration,\n          seekable = _this$player.seekable; // on iOS, live streams return Infinity for the duration\n      // so instead we use the end of the seekable timerange\n\n      if (duration === Infinity && seekable.length > 0) {\n        return seekable.end(seekable.length - 1);\n      }\n\n      return duration;\n    }\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      if (!this.player) return null;\n      return this.player.currentTime;\n    }\n  }, {\n    key: \"getSecondsLoaded\",\n    value: function getSecondsLoaded() {\n      if (!this.player) return null;\n      var buffered = this.player.buffered;\n\n      if (buffered.length === 0) {\n        return 0;\n      }\n\n      var end = buffered.end(buffered.length - 1);\n      var duration = this.getDuration();\n\n      if (end > duration) {\n        return duration;\n      }\n\n      return end;\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource(url) {\n      var useHLS = this.shouldUseHLS(url);\n      var useDASH = this.shouldUseDASH(url);\n\n      if (url instanceof Array || isMediaStream(url) || useHLS || useDASH) {\n        return undefined;\n      }\n\n      if (MATCH_DROPBOX_URL.test(url)) {\n        return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\n      }\n\n      return url;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          url = _this$props4.url,\n          playing = _this$props4.playing,\n          loop = _this$props4.loop,\n          controls = _this$props4.controls,\n          muted = _this$props4.muted,\n          config = _this$props4.config,\n          width = _this$props4.width,\n          height = _this$props4.height;\n      var useAudio = this.shouldUseAudio(this.props);\n      var Element = useAudio ? \"audio\" : \"video\";\n      var style = {\n        width: width === \"auto\" ? width : \"100%\",\n        height: height === \"auto\" ? height : \"100%\"\n      };\n      return __jsx(Element, _extends({\n        ref: this.ref,\n        src: this.getSource(url),\n        style: style,\n        preload: \"auto\",\n        autoPlay: playing || undefined,\n        controls: controls,\n        muted: muted,\n        loop: loop\n      }, config.file.attributes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 7\n        }\n      }), url instanceof Array && url.map(this.renderSourceElement), config.file.tracks.map(this.renderTrack));\n    }\n  }]);\n\n  return FilePlayer;\n}(Component);\n\n_defineProperty(FilePlayer, \"displayName\", \"FilePlayer\");\n\n_defineProperty(FilePlayer, \"canPlay\", canPlay);\n\n_defineProperty(FilePlayer, \"canEnablePIP\", canEnablePIP);\n\nexport default _c = createSinglePlayer(FilePlayer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/braflow/loomradio/src/players/FilePlayer.js"],"names":["React","Component","getSDK","isMediaStream","createSinglePlayer","IOS","navigator","test","userAgent","window","MSStream","AUDIO_EXTENSIONS","VIDEO_EXTENSIONS","HLS_EXTENSIONS","HLS_SDK_URL","HLS_GLOBAL","DASH_EXTENSIONS","DASH_SDK_URL","DASH_GLOBAL","MATCH_DROPBOX_URL","canPlay","url","Array","item","src","canEnablePIP","document","pictureInPictureEnabled","FilePlayer","e","props","onDisablePIP","playing","play","onSeek","target","currentTime","player","muted","source","index","track","console","log","addListeners","load","nextProps","shouldUseAudio","removeListeners","prevProps","onReady","onPlay","onBuffer","onBufferEnd","onPause","onEnded","onError","playsinline","onEnablePIP","addEventListener","setAttribute","removeEventListener","config","file","forceVideo","attributes","poster","forceAudio","forceHLS","forceDASH","hlsVersion","dashVersion","shouldUseHLS","replace","then","Hls","hls","hlsOptions","on","Events","ERROR","data","loadSource","attachMedia","shouldUseDASH","dashjs","dash","MediaPlayer","create","initialize","getDebug","setLogToBrowserConsole","srcObject","URL","createObjectURL","promise","success","err","pause","removeAttribute","destroy","reset","seconds","fraction","volume","requestPictureInPicture","pictureInPictureElement","exitPictureInPicture","rate","playbackRate","duration","seekable","Infinity","length","end","buffered","getDuration","useHLS","useDASH","undefined","loop","controls","width","height","useAudio","Element","style","ref","getSource","map","renderSourceElement","tracks","renderTrack"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,UAAtC;AACA,OAAOC,kBAAP,MAA+B,iBAA/B;AAEA,IAAMC,GAAG,GACP,OAAOC,SAAP,KAAqB,WAArB,IACA,mBAAmBC,IAAnB,CAAwBD,SAAS,CAACE,SAAlC,CADA,IAEA,CAACC,MAAM,CAACC,QAHV;AAIA,IAAMC,gBAAgB,GAAG,oEAAzB;AACA,IAAMC,gBAAgB,GAAG,oCAAzB;AACA,IAAMC,cAAc,GAAG,iBAAvB;AACA,IAAMC,WAAW,GACf,kEADF;AAEA,IAAMC,UAAU,GAAG,KAAnB;AACA,IAAMC,eAAe,GAAG,gBAAxB;AACA,IAAMC,YAAY,GAChB,uEADF;AAEA,IAAMC,WAAW,GAAG,QAApB;AACA,IAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAIA,GAAG,YAAYC,KAAnB,EAA0B;AAAA,+CACPD,GADO;AAAA;;AAAA;AACxB,0DAAsB;AAAA,YAAbE,IAAa;;AACpB,YAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BH,OAAO,CAACG,IAAD,CAAvC,EAA+C;AAC7C,iBAAO,IAAP;AACD;;AACD,YAAIH,OAAO,CAACG,IAAI,CAACC,GAAN,CAAX,EAAuB;AACrB,iBAAO,IAAP;AACD;AACF;AARuB;AAAA;AAAA;AAAA;AAAA;;AASxB,WAAO,KAAP;AACD;;AACD,MAAIrB,aAAa,CAACkB,GAAD,CAAjB,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,SACEV,gBAAgB,CAACJ,IAAjB,CAAsBc,GAAtB,KACAT,gBAAgB,CAACL,IAAjB,CAAsBc,GAAtB,CADA,IAEAR,cAAc,CAACN,IAAf,CAAoBc,GAApB,CAFA,IAGAL,eAAe,CAACT,IAAhB,CAAqBc,GAArB,CAJF;AAMD;;AAED,SAASI,YAAT,CAAsBJ,GAAtB,EAA2B;AACzB,SACED,OAAO,CAACC,GAAD,CAAP,IACA,CAAC,CAACK,QAAQ,CAACC,uBADX,IAEA,CAAChB,gBAAgB,CAACJ,IAAjB,CAAsBc,GAAtB,CAHH;AAKD;;AAED,WAAaO,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,mEA2EiB,UAACC,CAAD,EAAO;AAAA,wBACc,MAAKC,KADnB;AAAA,UACZC,YADY,eACZA,YADY;AAAA,UACEC,OADF,eACEA,OADF;AAEpBD,MAAAA,YAAY,CAACF,CAAD,CAAZ;;AACA,UAAIG,OAAJ,EAAa;AACX,cAAKC,IAAL;AACD;AACF,KAjFH;;AAAA,6DAkFW,UAACJ,CAAD,EAAO;AACd,YAAKC,KAAL,CAAWI,MAAX,CAAkBL,CAAC,CAACM,MAAF,CAASC,WAA3B;AACD,KApFH;;AAAA,2DA8KS,YAAM;AACX,YAAKC,MAAL,CAAYC,KAAZ,GAAoB,IAApB;AACD,KAhLH;;AAAA,6DAiLW,YAAM;AACb,YAAKD,MAAL,CAAYC,KAAZ,GAAoB,KAApB;AACD,KAnLH;;AAAA,0EA6OwB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACvC,UAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,eAAO;AAAQ,UAAA,GAAG,EAAEC,KAAb;AAAoB,UAAA,GAAG,EAAED,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aAAO;AAAQ,QAAA,GAAG,EAAEC;AAAb,SAAwBD,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAlPH;;AAAA,kEAmPgB,UAACE,KAAD,EAAQD,KAAR,EAAkB;AAC9B,aAAO;AAAO,QAAA,GAAG,EAAEA;AAAZ,SAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KArPH;;AAAA,0DAsPQ,UAACJ,MAAD,EAAY;AAChB,YAAKA,MAAL,GAAcA,MAAd;AACD,KAxPH;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAKsB;AAClBK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKb,KAA7B;AACA,WAAKc,YAAL;;AACA,UAAIvC,GAAJ,EAAS;AACP,aAAKgC,MAAL,CAAYQ,IAAZ;AACD;AACF;AAXH;AAAA;AAAA,8CAY4BC,SAZ5B,EAYuC;AACnC,UAAI,KAAKC,cAAL,CAAoB,KAAKjB,KAAzB,MAAoC,KAAKiB,cAAL,CAAoBD,SAApB,CAAxC,EAAwE;AACtE,aAAKE,eAAL;AACD;AACF;AAhBH;AAAA;AAAA,uCAiBqBC,SAjBrB,EAiBgC;AAC5B,UAAI,KAAKF,cAAL,CAAoB,KAAKjB,KAAzB,MAAoC,KAAKiB,cAAL,CAAoBE,SAApB,CAAxC,EAAwE;AACtE,aAAKL,YAAL;AACD;AACF;AArBH;AAAA;AAAA,2CAsByB;AACrB,WAAKI,eAAL;AACD;AAxBH;AAAA;AAAA,mCAyBiB;AAAA,yBAWT,KAAKlB,KAXI;AAAA,UAEXoB,OAFW,gBAEXA,OAFW;AAAA,UAGXC,MAHW,gBAGXA,MAHW;AAAA,UAIXC,QAJW,gBAIXA,QAJW;AAAA,UAKXC,WALW,gBAKXA,WALW;AAAA,UAMXC,OANW,gBAMXA,OANW;AAAA,UAOXC,OAPW,gBAOXA,OAPW;AAAA,UAQXC,OARW,gBAQXA,OARW;AAAA,UASXC,WATW,gBASXA,WATW;AAAA,UAUXC,WAVW,gBAUXA,WAVW;AAYb,WAAKrB,MAAL,CAAYsB,gBAAZ,CAA6B,SAA7B,EAAwCT,OAAxC;AACA,WAAKb,MAAL,CAAYsB,gBAAZ,CAA6B,MAA7B,EAAqCR,MAArC;AACA,WAAKd,MAAL,CAAYsB,gBAAZ,CAA6B,SAA7B,EAAwCP,QAAxC;AACA,WAAKf,MAAL,CAAYsB,gBAAZ,CAA6B,SAA7B,EAAwCN,WAAxC;AACA,WAAKhB,MAAL,CAAYsB,gBAAZ,CAA6B,OAA7B,EAAsCL,OAAtC;AACA,WAAKjB,MAAL,CAAYsB,gBAAZ,CAA6B,QAA7B,EAAuC,KAAKzB,MAA5C;AACA,WAAKG,MAAL,CAAYsB,gBAAZ,CAA6B,OAA7B,EAAsCJ,OAAtC;AACA,WAAKlB,MAAL,CAAYsB,gBAAZ,CAA6B,OAA7B,EAAsCH,OAAtC;AACA,WAAKnB,MAAL,CAAYsB,gBAAZ,CAA6B,uBAA7B,EAAsDD,WAAtD;AACA,WAAKrB,MAAL,CAAYsB,gBAAZ,CAA6B,uBAA7B,EAAsD,KAAK5B,YAA3D;;AACA,UAAI0B,WAAJ,EAAiB;AACf,aAAKpB,MAAL,CAAYuB,YAAZ,CAAyB,aAAzB,EAAwC,EAAxC;AACA,aAAKvB,MAAL,CAAYuB,YAAZ,CAAyB,oBAAzB,EAA+C,EAA/C;AACA,aAAKvB,MAAL,CAAYuB,YAAZ,CAAyB,gBAAzB,EAA2C,EAA3C;AACD;AACF;AApDH;AAAA;AAAA,sCAqDoB;AAAA,yBAUZ,KAAK9B,KAVO;AAAA,UAEdoB,OAFc,gBAEdA,OAFc;AAAA,UAGdC,MAHc,gBAGdA,MAHc;AAAA,UAIdC,QAJc,gBAIdA,QAJc;AAAA,UAKdC,WALc,gBAKdA,WALc;AAAA,UAMdC,OANc,gBAMdA,OANc;AAAA,UAOdC,OAPc,gBAOdA,OAPc;AAAA,UAQdC,OARc,gBAQdA,OARc;AAAA,UASdE,WATc,gBASdA,WATc;AAWhB,WAAKrB,MAAL,CAAYwB,mBAAZ,CAAgC,SAAhC,EAA2CX,OAA3C;AACA,WAAKb,MAAL,CAAYwB,mBAAZ,CAAgC,MAAhC,EAAwCV,MAAxC;AACA,WAAKd,MAAL,CAAYwB,mBAAZ,CAAgC,SAAhC,EAA2CT,QAA3C;AACA,WAAKf,MAAL,CAAYwB,mBAAZ,CAAgC,SAAhC,EAA2CR,WAA3C;AACA,WAAKhB,MAAL,CAAYwB,mBAAZ,CAAgC,OAAhC,EAAyCP,OAAzC;AACA,WAAKjB,MAAL,CAAYwB,mBAAZ,CAAgC,QAAhC,EAA0C,KAAK3B,MAA/C;AACA,WAAKG,MAAL,CAAYwB,mBAAZ,CAAgC,OAAhC,EAAyCN,OAAzC;AACA,WAAKlB,MAAL,CAAYwB,mBAAZ,CAAgC,OAAhC,EAAyCL,OAAzC;AACA,WAAKnB,MAAL,CAAYwB,mBAAZ,CAAgC,uBAAhC,EAAyDH,WAAzD;AACA,WAAKrB,MAAL,CAAYwB,mBAAZ,CAAgC,uBAAhC,EAAyD,KAAK9B,YAA9D;AACD;AA1EH;AAAA;AAAA,mCAqFiBD,KArFjB,EAqFwB;AACpB,UAAIA,KAAK,CAACgC,MAAN,CAAaC,IAAb,CAAkBC,UAAtB,EAAkC;AAChC,eAAO,KAAP;AACD;;AACD,UAAIlC,KAAK,CAACgC,MAAN,CAAaC,IAAb,CAAkBE,UAAlB,CAA6BC,MAAjC,EAAyC;AACvC,eAAO,KAAP,CADuC,CACzB;AACf;;AACD,aAAOvD,gBAAgB,CAACJ,IAAjB,CAAsBuB,KAAK,CAACT,GAA5B,KAAoCS,KAAK,CAACgC,MAAN,CAAaC,IAAb,CAAkBI,UAA7D;AACD;AA7FH;AAAA;AAAA,iCA8Fe9C,GA9Ff,EA8FoB;AAChB,aACGR,cAAc,CAACN,IAAf,CAAoBc,GAApB,KAA4B,CAAChB,GAA9B,IAAsC,KAAKyB,KAAL,CAAWgC,MAAX,CAAkBC,IAAlB,CAAuBK,QAD/D;AAGD;AAlGH;AAAA;AAAA,kCAmGgB/C,GAnGhB,EAmGqB;AACjB,aAAOL,eAAe,CAACT,IAAhB,CAAqBc,GAArB,KAA6B,KAAKS,KAAL,CAAWgC,MAAX,CAAkBC,IAAlB,CAAuBM,SAA3D;AACD;AArGH;AAAA;AAAA,yBAsGOhD,GAtGP,EAsGY;AAAA;;AAAA,kCAC4B,KAAKS,KAAL,CAAWgC,MAAX,CAAkBC,IAD9C;AAAA,UACAO,UADA,yBACAA,UADA;AAAA,UACYC,WADZ,yBACYA,WADZ;;AAER,UAAI,KAAKC,YAAL,CAAkBnD,GAAlB,CAAJ,EAA4B;AAC1BnB,QAAAA,MAAM,CAACY,WAAW,CAAC2D,OAAZ,CAAoB,SAApB,EAA+BH,UAA/B,CAAD,EAA6CvD,UAA7C,CAAN,CAA+D2D,IAA/D,CACE,UAACC,GAAD,EAAS;AACP,UAAA,MAAI,CAACC,GAAL,GAAW,IAAID,GAAJ,CAAQ,MAAI,CAAC7C,KAAL,CAAWgC,MAAX,CAAkBC,IAAlB,CAAuBc,UAA/B,CAAX;;AACA,UAAA,MAAI,CAACD,GAAL,CAASE,EAAT,CAAYH,GAAG,CAACI,MAAJ,CAAWC,KAAvB,EAA8B,UAACnD,CAAD,EAAIoD,IAAJ,EAAa;AACzC,YAAA,MAAI,CAACnD,KAAL,CAAW0B,OAAX,CAAmB3B,CAAnB,EAAsBoD,IAAtB,EAA4B,MAAI,CAACL,GAAjC,EAAsCD,GAAtC;AACD,WAFD;;AAGA,UAAA,MAAI,CAACC,GAAL,CAASM,UAAT,CAAoB7D,GAApB;;AACA,UAAA,MAAI,CAACuD,GAAL,CAASO,WAAT,CAAqB,MAAI,CAAC9C,MAA1B;AACD,SARH;AAUD;;AACD,UAAI,KAAK+C,aAAL,CAAmB/D,GAAnB,CAAJ,EAA6B;AAC3BnB,QAAAA,MAAM,CAACe,YAAY,CAACwD,OAAb,CAAqB,SAArB,EAAgCF,WAAhC,CAAD,EAA+CrD,WAA/C,CAAN,CAAkEwD,IAAlE,CACE,UAACW,MAAD,EAAY;AACV,UAAA,MAAI,CAACC,IAAL,GAAYD,MAAM,CAACE,WAAP,GAAqBC,MAArB,EAAZ;;AACA,UAAA,MAAI,CAACF,IAAL,CAAUG,UAAV,CAAqB,MAAI,CAACpD,MAA1B,EAAkChB,GAAlC,EAAuC,MAAI,CAACS,KAAL,CAAWE,OAAlD;;AACA,UAAA,MAAI,CAACsD,IAAL,CAAUI,QAAV,GAAqBC,sBAArB,CAA4C,KAA5C;AACD,SALH;AAOD;;AAED,UAAItE,GAAG,YAAYC,KAAnB,EAA0B;AACxB;AACA;AACA;AACA;AACA,aAAKe,MAAL,CAAYQ,IAAZ;AACD,OAND,MAMO,IAAI1C,aAAa,CAACkB,GAAD,CAAjB,EAAwB;AAC7B,YAAI;AACF,eAAKgB,MAAL,CAAYuD,SAAZ,GAAwBvE,GAAxB;AACD,SAFD,CAEE,OAAOQ,CAAP,EAAU;AACV,eAAKQ,MAAL,CAAYb,GAAZ,GAAkBf,MAAM,CAACoF,GAAP,CAAWC,eAAX,CAA2BzE,GAA3B,CAAlB;AACD;AACF;AACF;AA3IH;AAAA;AAAA,2BA4IS;AACL,UAAM0E,OAAO,GAAG,KAAK1D,MAAL,CAAYJ,IAAZ,EAAhB;;AACA,UAAI8D,OAAJ,EAAa;AACXA,QAAAA,OAAO,CACJrB,IADH,CAEI,UAACsB,OAAD,EAAa;AACXtD,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CqD,OAA7C;AACD,SAJL,EAKI,UAACC,GAAD,EAAS;AACPvD,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCsD,GAAzC,EADO,CAEP;AACD,SARL,WAUS,KAAKnE,KAAL,CAAW0B,OAVpB;AAWD;AACF;AA3JH;AAAA;AAAA,4BA4JU;AACN,WAAKnB,MAAL,CAAY6D,KAAZ;AACD;AA9JH;AAAA;AAAA,2BA+JS;AACL,WAAK7D,MAAL,CAAY8D,eAAZ,CAA4B,KAA5B;;AACA,UAAI,KAAKvB,GAAT,EAAc;AACZ,aAAKA,GAAL,CAASwB,OAAT;AACD;;AACD,UAAI,KAAKd,IAAT,EAAe;AACb,aAAKA,IAAL,CAAUe,KAAV;AACD;AACF;AAvKH;AAAA;AAAA,2BAwKSC,OAxKT,EAwKkB;AACd,WAAKjE,MAAL,CAAYD,WAAZ,GAA0BkE,OAA1B;AACD;AA1KH;AAAA;AAAA,8BA2KYC,QA3KZ,EA2KsB;AAClB,WAAKlE,MAAL,CAAYmE,MAAZ,GAAqBD,QAArB;AACD;AA7KH;AAAA;AAAA,gCAoLc;AACV,UACE,KAAKlE,MAAL,CAAYoE,uBAAZ,IACA/E,QAAQ,CAACgF,uBAAT,KAAqC,KAAKrE,MAF5C,EAGE;AACA,aAAKA,MAAL,CAAYoE,uBAAZ;AACD;AACF;AA3LH;AAAA;AAAA,iCA4Le;AACX,UACE/E,QAAQ,CAACiF,oBAAT,IACAjF,QAAQ,CAACgF,uBAAT,KAAqC,KAAKrE,MAF5C,EAGE;AACAX,QAAAA,QAAQ,CAACiF,oBAAT;AACD;AACF;AAnMH;AAAA;AAAA,oCAoMkBC,IApMlB,EAoMwB;AACpB,WAAKvE,MAAL,CAAYwE,YAAZ,GAA2BD,IAA3B;AACD;AAtMH;AAAA;AAAA,kCAuMgB;AACZ,UAAI,CAAC,KAAKvE,MAAV,EAAkB,OAAO,IAAP;AADN,yBAEmB,KAAKA,MAFxB;AAAA,UAEJyE,QAFI,gBAEJA,QAFI;AAAA,UAEMC,QAFN,gBAEMA,QAFN,EAGZ;AACA;;AACA,UAAID,QAAQ,KAAKE,QAAb,IAAyBD,QAAQ,CAACE,MAAT,GAAkB,CAA/C,EAAkD;AAChD,eAAOF,QAAQ,CAACG,GAAT,CAAaH,QAAQ,CAACE,MAAT,GAAkB,CAA/B,CAAP;AACD;;AACD,aAAOH,QAAP;AACD;AAhNH;AAAA;AAAA,qCAiNmB;AACf,UAAI,CAAC,KAAKzE,MAAV,EAAkB,OAAO,IAAP;AAClB,aAAO,KAAKA,MAAL,CAAYD,WAAnB;AACD;AApNH;AAAA;AAAA,uCAqNqB;AACjB,UAAI,CAAC,KAAKC,MAAV,EAAkB,OAAO,IAAP;AADD,UAET8E,QAFS,GAEI,KAAK9E,MAFT,CAET8E,QAFS;;AAGjB,UAAIA,QAAQ,CAACF,MAAT,KAAoB,CAAxB,EAA2B;AACzB,eAAO,CAAP;AACD;;AACD,UAAMC,GAAG,GAAGC,QAAQ,CAACD,GAAT,CAAaC,QAAQ,CAACF,MAAT,GAAkB,CAA/B,CAAZ;AACA,UAAMH,QAAQ,GAAG,KAAKM,WAAL,EAAjB;;AACA,UAAIF,GAAG,GAAGJ,QAAV,EAAoB;AAClB,eAAOA,QAAP;AACD;;AACD,aAAOI,GAAP;AACD;AAjOH;AAAA;AAAA,8BAkOY7F,GAlOZ,EAkOiB;AACb,UAAMgG,MAAM,GAAG,KAAK7C,YAAL,CAAkBnD,GAAlB,CAAf;AACA,UAAMiG,OAAO,GAAG,KAAKlC,aAAL,CAAmB/D,GAAnB,CAAhB;;AACA,UAAIA,GAAG,YAAYC,KAAf,IAAwBnB,aAAa,CAACkB,GAAD,CAArC,IAA8CgG,MAA9C,IAAwDC,OAA5D,EAAqE;AACnE,eAAOC,SAAP;AACD;;AACD,UAAIpG,iBAAiB,CAACZ,IAAlB,CAAuBc,GAAvB,CAAJ,EAAiC;AAC/B,eAAOA,GAAG,CAACoD,OAAJ,CAAY,iBAAZ,EAA+B,2BAA/B,CAAP;AACD;;AACD,aAAOpD,GAAP;AACD;AA5OH;AAAA;AAAA,6BAyPW;AAAA,yBAUH,KAAKS,KAVF;AAAA,UAELT,GAFK,gBAELA,GAFK;AAAA,UAGLW,OAHK,gBAGLA,OAHK;AAAA,UAILwF,IAJK,gBAILA,IAJK;AAAA,UAKLC,QALK,gBAKLA,QALK;AAAA,UAMLnF,KANK,gBAMLA,KANK;AAAA,UAOLwB,MAPK,gBAOLA,MAPK;AAAA,UAQL4D,KARK,gBAQLA,KARK;AAAA,UASLC,MATK,gBASLA,MATK;AAWP,UAAMC,QAAQ,GAAG,KAAK7E,cAAL,CAAoB,KAAKjB,KAAzB,CAAjB;AACA,UAAM+F,OAAO,GAAGD,QAAQ,GAAG,OAAH,GAAa,OAArC;AACA,UAAME,KAAK,GAAG;AACZJ,QAAAA,KAAK,EAAEA,KAAK,KAAK,MAAV,GAAmBA,KAAnB,GAA2B,MADtB;AAEZC,QAAAA,MAAM,EAAEA,MAAM,KAAK,MAAX,GAAoBA,MAApB,GAA6B;AAFzB,OAAd;AAIA,aACE,MAAC,OAAD;AACE,QAAA,GAAG,EAAE,KAAKI,GADZ;AAEE,QAAA,GAAG,EAAE,KAAKC,SAAL,CAAe3G,GAAf,CAFP;AAGE,QAAA,KAAK,EAAEyG,KAHT;AAIE,QAAA,OAAO,EAAC,MAJV;AAKE,QAAA,QAAQ,EAAE9F,OAAO,IAAIuF,SALvB;AAME,QAAA,QAAQ,EAAEE,QANZ;AAOE,QAAA,KAAK,EAAEnF,KAPT;AAQE,QAAA,IAAI,EAAEkF;AARR,SASM1D,MAAM,CAACC,IAAP,CAAYE,UATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWG5C,GAAG,YAAYC,KAAf,IAAwBD,GAAG,CAAC4G,GAAJ,CAAQ,KAAKC,mBAAb,CAX3B,EAYGpE,MAAM,CAACC,IAAP,CAAYoE,MAAZ,CAAmBF,GAAnB,CAAuB,KAAKG,WAA5B,CAZH,CADF;AAgBD;AA1RH;;AAAA;AAAA,EAAgCnI,SAAhC;;gBAAa2B,U,iBACU,Y;;gBADVA,U,aAEMR,O;;gBAFNQ,U,kBAGWH,Y;;AA0RxB,oBAAerB,kBAAkB,CAACwB,UAAD,CAAjC","sourcesContent":["import React, { Component } from \"react\";\n\nimport { getSDK, isMediaStream } from \"../utils\";\nimport createSinglePlayer from \"../singlePlayer\";\n\nconst IOS =\n  typeof navigator !== \"undefined\" &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream;\nconst AUDIO_EXTENSIONS = /\\.(m4a|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\\?)/i;\nconst VIDEO_EXTENSIONS = /\\.(mp4|og[gv]|webm|mov|m4v)($|\\?)/i;\nconst HLS_EXTENSIONS = /\\.(m3u8)($|\\?)/i;\nconst HLS_SDK_URL =\n  \"https://cdnjs.cloudflare.com/ajax/libs/hls.js/VERSION/hls.min.js\";\nconst HLS_GLOBAL = \"Hls\";\nconst DASH_EXTENSIONS = /\\.(mpd)($|\\?)/i;\nconst DASH_SDK_URL =\n  \"https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js\";\nconst DASH_GLOBAL = \"dashjs\";\nconst MATCH_DROPBOX_URL = /www\\.dropbox\\.com\\/.+/;\n\nfunction canPlay(url) {\n  if (url instanceof Array) {\n    for (let item of url) {\n      if (typeof item === \"string\" && canPlay(item)) {\n        return true;\n      }\n      if (canPlay(item.src)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (isMediaStream(url)) {\n    return true;\n  }\n  return (\n    AUDIO_EXTENSIONS.test(url) ||\n    VIDEO_EXTENSIONS.test(url) ||\n    HLS_EXTENSIONS.test(url) ||\n    DASH_EXTENSIONS.test(url)\n  );\n}\n\nfunction canEnablePIP(url) {\n  return (\n    canPlay(url) &&\n    !!document.pictureInPictureEnabled &&\n    !AUDIO_EXTENSIONS.test(url)\n  );\n}\n\nexport class FilePlayer extends Component {\n  static displayName = \"FilePlayer\";\n  static canPlay = canPlay;\n  static canEnablePIP = canEnablePIP;\n\n  componentDidMount() {\n    console.log(\"mounted \", this.props);\n    this.addListeners();\n    if (IOS) {\n      this.player.load();\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(nextProps)) {\n      this.removeListeners();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {\n      this.addListeners();\n    }\n  }\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n  addListeners() {\n    const {\n      onReady,\n      onPlay,\n      onBuffer,\n      onBufferEnd,\n      onPause,\n      onEnded,\n      onError,\n      playsinline,\n      onEnablePIP,\n    } = this.props;\n    this.player.addEventListener(\"canplay\", onReady);\n    this.player.addEventListener(\"play\", onPlay);\n    this.player.addEventListener(\"waiting\", onBuffer);\n    this.player.addEventListener(\"playing\", onBufferEnd);\n    this.player.addEventListener(\"pause\", onPause);\n    this.player.addEventListener(\"seeked\", this.onSeek);\n    this.player.addEventListener(\"ended\", onEnded);\n    this.player.addEventListener(\"error\", onError);\n    this.player.addEventListener(\"enterpictureinpicture\", onEnablePIP);\n    this.player.addEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n    if (playsinline) {\n      this.player.setAttribute(\"playsinline\", \"\");\n      this.player.setAttribute(\"webkit-playsinline\", \"\");\n      this.player.setAttribute(\"x5-playsinline\", \"\");\n    }\n  }\n  removeListeners() {\n    const {\n      onReady,\n      onPlay,\n      onBuffer,\n      onBufferEnd,\n      onPause,\n      onEnded,\n      onError,\n      onEnablePIP,\n    } = this.props;\n    this.player.removeEventListener(\"canplay\", onReady);\n    this.player.removeEventListener(\"play\", onPlay);\n    this.player.removeEventListener(\"waiting\", onBuffer);\n    this.player.removeEventListener(\"playing\", onBufferEnd);\n    this.player.removeEventListener(\"pause\", onPause);\n    this.player.removeEventListener(\"seeked\", this.onSeek);\n    this.player.removeEventListener(\"ended\", onEnded);\n    this.player.removeEventListener(\"error\", onError);\n    this.player.removeEventListener(\"enterpictureinpicture\", onEnablePIP);\n    this.player.removeEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n  }\n  onDisablePIP = (e) => {\n    const { onDisablePIP, playing } = this.props;\n    onDisablePIP(e);\n    if (playing) {\n      this.play();\n    }\n  };\n  onSeek = (e) => {\n    this.props.onSeek(e.target.currentTime);\n  };\n  shouldUseAudio(props) {\n    if (props.config.file.forceVideo) {\n      return false;\n    }\n    if (props.config.file.attributes.poster) {\n      return false; // Use <video> so that poster is shown\n    }\n    return AUDIO_EXTENSIONS.test(props.url) || props.config.file.forceAudio;\n  }\n  shouldUseHLS(url) {\n    return (\n      (HLS_EXTENSIONS.test(url) && !IOS) || this.props.config.file.forceHLS\n    );\n  }\n  shouldUseDASH(url) {\n    return DASH_EXTENSIONS.test(url) || this.props.config.file.forceDASH;\n  }\n  load(url) {\n    const { hlsVersion, dashVersion } = this.props.config.file;\n    if (this.shouldUseHLS(url)) {\n      getSDK(HLS_SDK_URL.replace(\"VERSION\", hlsVersion), HLS_GLOBAL).then(\n        (Hls) => {\n          this.hls = new Hls(this.props.config.file.hlsOptions);\n          this.hls.on(Hls.Events.ERROR, (e, data) => {\n            this.props.onError(e, data, this.hls, Hls);\n          });\n          this.hls.loadSource(url);\n          this.hls.attachMedia(this.player);\n        }\n      );\n    }\n    if (this.shouldUseDASH(url)) {\n      getSDK(DASH_SDK_URL.replace(\"VERSION\", dashVersion), DASH_GLOBAL).then(\n        (dashjs) => {\n          this.dash = dashjs.MediaPlayer().create();\n          this.dash.initialize(this.player, url, this.props.playing);\n          this.dash.getDebug().setLogToBrowserConsole(false);\n        }\n      );\n    }\n\n    if (url instanceof Array) {\n      // When setting new urls (<source>) on an already loaded video,\n      // HTMLMediaElement.load() is needed to reset the media element\n      // and restart the media resource. Just replacing children source\n      // dom nodes is not enough\n      this.player.load();\n    } else if (isMediaStream(url)) {\n      try {\n        this.player.srcObject = url;\n      } catch (e) {\n        this.player.src = window.URL.createObjectURL(url);\n      }\n    }\n  }\n  play() {\n    const promise = this.player.play();\n    if (promise) {\n      promise\n        .then(\n          (success) => {\n            console.log(\"FilePlayer -> play -> success\", success);\n          },\n          (err) => {\n            console.log(\"FilePlayer -> play -> err\", err);\n            //this.props.onError;\n          }\n        )\n        .catch(this.props.onError);\n    }\n  }\n  pause() {\n    this.player.pause();\n  }\n  stop() {\n    this.player.removeAttribute(\"src\");\n    if (this.hls) {\n      this.hls.destroy();\n    }\n    if (this.dash) {\n      this.dash.reset();\n    }\n  }\n  seekTo(seconds) {\n    this.player.currentTime = seconds;\n  }\n  setVolume(fraction) {\n    this.player.volume = fraction;\n  }\n  mute = () => {\n    this.player.muted = true;\n  };\n  unmute = () => {\n    this.player.muted = false;\n  };\n  enablePIP() {\n    if (\n      this.player.requestPictureInPicture &&\n      document.pictureInPictureElement !== this.player\n    ) {\n      this.player.requestPictureInPicture();\n    }\n  }\n  disablePIP() {\n    if (\n      document.exitPictureInPicture &&\n      document.pictureInPictureElement === this.player\n    ) {\n      document.exitPictureInPicture();\n    }\n  }\n  setPlaybackRate(rate) {\n    this.player.playbackRate = rate;\n  }\n  getDuration() {\n    if (!this.player) return null;\n    const { duration, seekable } = this.player;\n    // on iOS, live streams return Infinity for the duration\n    // so instead we use the end of the seekable timerange\n    if (duration === Infinity && seekable.length > 0) {\n      return seekable.end(seekable.length - 1);\n    }\n    return duration;\n  }\n  getCurrentTime() {\n    if (!this.player) return null;\n    return this.player.currentTime;\n  }\n  getSecondsLoaded() {\n    if (!this.player) return null;\n    const { buffered } = this.player;\n    if (buffered.length === 0) {\n      return 0;\n    }\n    const end = buffered.end(buffered.length - 1);\n    const duration = this.getDuration();\n    if (end > duration) {\n      return duration;\n    }\n    return end;\n  }\n  getSource(url) {\n    const useHLS = this.shouldUseHLS(url);\n    const useDASH = this.shouldUseDASH(url);\n    if (url instanceof Array || isMediaStream(url) || useHLS || useDASH) {\n      return undefined;\n    }\n    if (MATCH_DROPBOX_URL.test(url)) {\n      return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\n    }\n    return url;\n  }\n  renderSourceElement = (source, index) => {\n    if (typeof source === \"string\") {\n      return <source key={index} src={source} />;\n    }\n    return <source key={index} {...source} />;\n  };\n  renderTrack = (track, index) => {\n    return <track key={index} {...track} />;\n  };\n  ref = (player) => {\n    this.player = player;\n  };\n  render() {\n    const {\n      url,\n      playing,\n      loop,\n      controls,\n      muted,\n      config,\n      width,\n      height,\n    } = this.props;\n    const useAudio = this.shouldUseAudio(this.props);\n    const Element = useAudio ? \"audio\" : \"video\";\n    const style = {\n      width: width === \"auto\" ? width : \"100%\",\n      height: height === \"auto\" ? height : \"100%\",\n    };\n    return (\n      <Element\n        ref={this.ref}\n        src={this.getSource(url)}\n        style={style}\n        preload=\"auto\"\n        autoPlay={playing || undefined}\n        controls={controls}\n        muted={muted}\n        loop={loop}\n        {...config.file.attributes}\n      >\n        {url instanceof Array && url.map(this.renderSourceElement)}\n        {config.file.tracks.map(this.renderTrack)}\n      </Element>\n    );\n  }\n}\n\nexport default createSinglePlayer(FilePlayer);\n"]},"metadata":{},"sourceType":"module"}