{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/players/DailyMotion.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { callPlayer, getSDK, parseStartTime } from '../utils';\nimport createSinglePlayer from '../singlePlayer';\nconst SDK_URL = 'https://api.dmcdn.net/all.js';\nconst SDK_GLOBAL = 'DM';\nconst SDK_GLOBAL_READY = 'dmAsyncInit';\nconst MATCH_URL = /^(?:(?:https?):)?(?:\\/\\/)?(?:www\\.)?(?:(?:dailymotion\\.com(?:\\/embed)?\\/video)|dai\\.ly)\\/([a-zA-Z0-9]+)(?:_[\\w_-]+)?$/;\nexport class DailyMotion extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"callPlayer\", callPlayer);\n\n    _defineProperty(this, \"onDurationChange\", () => {\n      const duration = this.getDuration();\n      this.props.onDuration(duration);\n    });\n\n    _defineProperty(this, \"mute\", () => {\n      this.callPlayer('setMuted', true);\n    });\n\n    _defineProperty(this, \"unmute\", () => {\n      this.callPlayer('setMuted', false);\n    });\n\n    _defineProperty(this, \"ref\", container => {\n      this.container = container;\n    });\n  }\n\n  load(url) {\n    const {\n      controls,\n      config,\n      onError,\n      playing\n    } = this.props;\n    const [, id] = url.match(MATCH_URL);\n\n    if (this.player) {\n      this.player.load(id, {\n        start: parseStartTime(url),\n        autoplay: playing\n      });\n      return;\n    }\n\n    getSDK(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, DM => DM.player).then(DM => {\n      if (!this.container) return;\n      const Player = DM.player;\n      this.player = new Player(this.container, {\n        width: '100%',\n        height: '100%',\n        video: id,\n        params: _objectSpread({\n          controls: controls,\n          autoplay: this.props.playing,\n          mute: this.props.muted,\n          start: parseStartTime(url),\n          origin: window.location.origin\n        }, config.dailymotion.params),\n        events: {\n          apiready: this.props.onReady,\n          seeked: () => this.props.onSeek(this.player.currentTime),\n          video_end: this.props.onEnded,\n          durationchange: this.onDurationChange,\n          pause: this.props.onPause,\n          playing: this.props.onPlay,\n          waiting: this.props.onBuffer,\n          error: event => onError(event)\n        }\n      });\n    }, onError);\n  }\n\n  play() {\n    this.callPlayer('play');\n  }\n\n  pause() {\n    this.callPlayer('pause');\n  }\n\n  stop() {// Nothing to do\n  }\n\n  seekTo(seconds) {\n    this.callPlayer('seek', seconds);\n  }\n\n  setVolume(fraction) {\n    this.callPlayer('setVolume', fraction);\n  }\n\n  getDuration() {\n    return this.player.duration || null;\n  }\n\n  getCurrentTime() {\n    return this.player.currentTime;\n  }\n\n  getSecondsLoaded() {\n    return this.player.bufferedTime;\n  }\n\n  render() {\n    const style = _objectSpread({\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'black'\n    }, this.props.style);\n\n    return __jsx(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      ref: this.ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n_defineProperty(DailyMotion, \"displayName\", 'DailyMotion');\n\n_defineProperty(DailyMotion, \"canPlay\", url => MATCH_URL.test(url));\n\n_defineProperty(DailyMotion, \"loopOnEnded\", true);\n\nexport default createSinglePlayer(DailyMotion);","map":{"version":3,"sources":["/Users/braflow/loomradio/src/players/DailyMotion.js"],"names":["React","Component","callPlayer","getSDK","parseStartTime","createSinglePlayer","SDK_URL","SDK_GLOBAL","SDK_GLOBAL_READY","MATCH_URL","DailyMotion","duration","getDuration","props","onDuration","container","load","url","controls","config","onError","playing","id","match","player","start","autoplay","DM","then","Player","width","height","video","params","mute","muted","origin","window","location","dailymotion","events","apiready","onReady","seeked","onSeek","currentTime","video_end","onEnded","durationchange","onDurationChange","pause","onPause","onPlay","waiting","onBuffer","error","event","play","stop","seekTo","seconds","setVolume","fraction","getCurrentTime","getSecondsLoaded","bufferedTime","render","style","backgroundColor","ref","test"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK, parseStartTime } from '../utils'\nimport createSinglePlayer from '../singlePlayer'\n\nconst SDK_URL = 'https://api.dmcdn.net/all.js'\nconst SDK_GLOBAL = 'DM'\nconst SDK_GLOBAL_READY = 'dmAsyncInit'\nconst MATCH_URL = /^(?:(?:https?):)?(?:\\/\\/)?(?:www\\.)?(?:(?:dailymotion\\.com(?:\\/embed)?\\/video)|dai\\.ly)\\/([a-zA-Z0-9]+)(?:_[\\w_-]+)?$/\n\nexport class DailyMotion extends Component {\n  static displayName = 'DailyMotion'\n  static canPlay = url => MATCH_URL.test(url)\n  static loopOnEnded = true\n\n  callPlayer = callPlayer\n  load (url) {\n    const { controls, config, onError, playing } = this.props\n    const [, id] = url.match(MATCH_URL)\n    if (this.player) {\n      this.player.load(id, {\n        start: parseStartTime(url),\n        autoplay: playing\n      })\n      return\n    }\n    getSDK(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, DM => DM.player).then(DM => {\n      if (!this.container) return\n      const Player = DM.player\n      this.player = new Player(this.container, {\n        width: '100%',\n        height: '100%',\n        video: id,\n        params: {\n          controls: controls,\n          autoplay: this.props.playing,\n          mute: this.props.muted,\n          start: parseStartTime(url),\n          origin: window.location.origin,\n          ...config.dailymotion.params\n        },\n        events: {\n          apiready: this.props.onReady,\n          seeked: () => this.props.onSeek(this.player.currentTime),\n          video_end: this.props.onEnded,\n          durationchange: this.onDurationChange,\n          pause: this.props.onPause,\n          playing: this.props.onPlay,\n          waiting: this.props.onBuffer,\n          error: event => onError(event)\n        }\n      })\n    }, onError)\n  }\n  onDurationChange = () => {\n    const duration = this.getDuration()\n    this.props.onDuration(duration)\n  }\n  play () {\n    this.callPlayer('play')\n  }\n  pause () {\n    this.callPlayer('pause')\n  }\n  stop () {\n    // Nothing to do\n  }\n  seekTo (seconds) {\n    this.callPlayer('seek', seconds)\n  }\n  setVolume (fraction) {\n    this.callPlayer('setVolume', fraction)\n  }\n  mute = () => {\n    this.callPlayer('setMuted', true)\n  }\n  unmute = () => {\n    this.callPlayer('setMuted', false)\n  }\n  getDuration () {\n    return this.player.duration || null\n  }\n  getCurrentTime () {\n    return this.player.currentTime\n  }\n  getSecondsLoaded () {\n    return this.player.bufferedTime\n  }\n  ref = container => {\n    this.container = container\n  }\n  render () {\n    const style = {\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'black',\n      ...this.props.style\n    }\n    return (\n      <div style={style}>\n        <div ref={this.ref} />\n      </div>\n    )\n  }\n}\n\nexport default createSinglePlayer(DailyMotion)\n"]},"metadata":{},"sourceType":"module"}