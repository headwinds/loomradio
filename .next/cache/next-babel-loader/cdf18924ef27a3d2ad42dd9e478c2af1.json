{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/players/Streamable.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { callPlayer, getSDK } from '../utils';\nimport createSinglePlayer from '../singlePlayer';\nconst SDK_URL = '//cdn.embed.ly/player-0.1.0.min.js';\nconst SDK_GLOBAL = 'playerjs';\nconst MATCH_URL = /streamable\\.com\\/([a-z0-9]+)$/;\nexport class Streamable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"callPlayer\", callPlayer);\n\n    _defineProperty(this, \"duration\", null);\n\n    _defineProperty(this, \"currentTime\", null);\n\n    _defineProperty(this, \"secondsLoaded\", null);\n\n    _defineProperty(this, \"mute\", () => {\n      this.callPlayer('mute');\n    });\n\n    _defineProperty(this, \"unmute\", () => {\n      this.callPlayer('unmute');\n    });\n\n    _defineProperty(this, \"ref\", iframe => {\n      this.iframe = iframe;\n    });\n  }\n\n  load(url) {\n    getSDK(SDK_URL, SDK_GLOBAL).then(playerjs => {\n      if (!this.iframe) return;\n      this.player = new playerjs.Player(this.iframe);\n      this.player.setLoop(this.props.loop);\n      this.player.on('ready', this.props.onReady);\n      this.player.on('play', this.props.onPlay);\n      this.player.on('pause', this.props.onPause);\n      this.player.on('seeked', this.props.onSeek);\n      this.player.on('ended', this.props.onEnded);\n      this.player.on('error', this.props.onError);\n      this.player.on('timeupdate', ({\n        duration,\n        seconds\n      }) => {\n        this.duration = duration;\n        this.currentTime = seconds;\n      });\n      this.player.on('buffered', ({\n        percent\n      }) => {\n        if (this.duration) {\n          this.secondsLoaded = this.duration * percent;\n        }\n      });\n\n      if (this.props.muted) {\n        this.player.mute();\n      }\n    }, this.props.onError);\n  }\n\n  play() {\n    this.callPlayer('play');\n  }\n\n  pause() {\n    this.callPlayer('pause');\n  }\n\n  stop() {// Nothing to do\n  }\n\n  seekTo(seconds) {\n    this.callPlayer('setCurrentTime', seconds);\n  }\n\n  setVolume(fraction) {\n    this.callPlayer('setVolume', fraction * 100);\n  }\n\n  setLoop(loop) {\n    this.callPlayer('setLoop', loop);\n  }\n\n  getDuration() {\n    return this.duration;\n  }\n\n  getCurrentTime() {\n    return this.currentTime;\n  }\n\n  getSecondsLoaded() {\n    return this.secondsLoaded;\n  }\n\n  render() {\n    const id = this.props.url.match(MATCH_URL)[1];\n    const style = {\n      width: '100%',\n      height: '100%'\n    };\n    return __jsx(\"iframe\", {\n      ref: this.ref,\n      src: `https://streamable.com/o/${id}`,\n      frameBorder: \"0\",\n      scrolling: \"no\",\n      style: style,\n      allowFullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\n_defineProperty(Streamable, \"displayName\", 'Streamable');\n\n_defineProperty(Streamable, \"canPlay\", url => MATCH_URL.test(url));\n\nexport default createSinglePlayer(Streamable);","map":{"version":3,"sources":["/Users/braflow/loomradio/src/players/Streamable.js"],"names":["React","Component","callPlayer","getSDK","createSinglePlayer","SDK_URL","SDK_GLOBAL","MATCH_URL","Streamable","iframe","load","url","then","playerjs","player","Player","setLoop","props","loop","on","onReady","onPlay","onPause","onSeek","onEnded","onError","duration","seconds","currentTime","percent","secondsLoaded","muted","mute","play","pause","stop","seekTo","setVolume","fraction","getDuration","getCurrentTime","getSecondsLoaded","render","id","match","style","width","height","ref","test"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK } from '../utils'\nimport createSinglePlayer from '../singlePlayer'\n\nconst SDK_URL = '//cdn.embed.ly/player-0.1.0.min.js'\nconst SDK_GLOBAL = 'playerjs'\nconst MATCH_URL = /streamable\\.com\\/([a-z0-9]+)$/\n\nexport class Streamable extends Component {\n  static displayName = 'Streamable'\n  static canPlay = url => MATCH_URL.test(url)\n\n  callPlayer = callPlayer\n  duration = null\n  currentTime = null\n  secondsLoaded = null\n  load (url) {\n    getSDK(SDK_URL, SDK_GLOBAL).then(playerjs => {\n      if (!this.iframe) return\n      this.player = new playerjs.Player(this.iframe)\n      this.player.setLoop(this.props.loop)\n      this.player.on('ready', this.props.onReady)\n      this.player.on('play', this.props.onPlay)\n      this.player.on('pause', this.props.onPause)\n      this.player.on('seeked', this.props.onSeek)\n      this.player.on('ended', this.props.onEnded)\n      this.player.on('error', this.props.onError)\n      this.player.on('timeupdate', ({ duration, seconds }) => {\n        this.duration = duration\n        this.currentTime = seconds\n      })\n      this.player.on('buffered', ({ percent }) => {\n        if (this.duration) {\n          this.secondsLoaded = this.duration * percent\n        }\n      })\n      if (this.props.muted) {\n        this.player.mute()\n      }\n    }, this.props.onError)\n  }\n  play () {\n    this.callPlayer('play')\n  }\n  pause () {\n    this.callPlayer('pause')\n  }\n  stop () {\n    // Nothing to do\n  }\n  seekTo (seconds) {\n    this.callPlayer('setCurrentTime', seconds)\n  }\n  setVolume (fraction) {\n    this.callPlayer('setVolume', fraction * 100)\n  }\n  setLoop (loop) {\n    this.callPlayer('setLoop', loop)\n  }\n  mute = () => {\n    this.callPlayer('mute')\n  }\n  unmute = () => {\n    this.callPlayer('unmute')\n  }\n  getDuration () {\n    return this.duration\n  }\n  getCurrentTime () {\n    return this.currentTime\n  }\n  getSecondsLoaded () {\n    return this.secondsLoaded\n  }\n  ref = iframe => {\n    this.iframe = iframe\n  }\n  render () {\n    const id = this.props.url.match(MATCH_URL)[1]\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n    return (\n      <iframe\n        ref={this.ref}\n        src={`https://streamable.com/o/${id}`}\n        frameBorder='0'\n        scrolling='no'\n        style={style}\n        allowFullScreen\n      />\n    )\n  }\n}\n\nexport default createSinglePlayer(Streamable)\n"]},"metadata":{},"sourceType":"module"}