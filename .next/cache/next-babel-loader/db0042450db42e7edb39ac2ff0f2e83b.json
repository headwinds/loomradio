{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/Preview.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nconst ICON_SIZE = '64px';\nexport default class Preview extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      image: null\n    });\n  }\n\n  componentDidMount() {\n    this.fetchImage(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.url !== nextProps.url) {\n      this.fetchImage(nextProps);\n    }\n  }\n\n  fetchImage({\n    url,\n    light\n  }) {\n    if (typeof light === 'string') {\n      this.setState({\n        image: light\n      });\n      return;\n    }\n\n    this.setState({\n      image: null\n    });\n    return window.fetch(`https://noembed.com/embed?url=${url}`).then(response => response.json()).then(data => {\n      if (data.thumbnail_url) {\n        const image = data.thumbnail_url.replace('height=100', 'height=480');\n        this.setState({\n          image\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      onClick\n    } = this.props;\n    const {\n      image\n    } = this.state;\n    const flexCenter = {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    };\n    const styles = {\n      preview: _objectSpread({\n        width: '100%',\n        height: '100%',\n        backgroundImage: image ? `url(${image})` : undefined,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        cursor: 'pointer'\n      }, flexCenter),\n      shadow: _objectSpread({\n        background: 'radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)',\n        borderRadius: ICON_SIZE,\n        width: ICON_SIZE,\n        height: ICON_SIZE\n      }, flexCenter),\n      playIcon: {\n        borderStyle: 'solid',\n        borderWidth: '16px 0 16px 26px',\n        borderColor: 'transparent transparent transparent white',\n        marginLeft: '7px'\n      }\n    };\n    return __jsx(\"div\", {\n      style: styles.preview,\n      className: \"react-player__preview\",\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: styles.shadow,\n      className: \"react-player__shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      style: styles.playIcon,\n      className: \"react-player__play-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/braflow/loomradio/src/Preview.js"],"names":["React","Component","ICON_SIZE","Preview","image","componentDidMount","fetchImage","props","componentWillReceiveProps","nextProps","url","light","setState","window","fetch","then","response","json","data","thumbnail_url","replace","render","onClick","state","flexCenter","display","alignItems","justifyContent","styles","preview","width","height","backgroundImage","undefined","backgroundSize","backgroundPosition","cursor","shadow","background","borderRadius","playIcon","borderStyle","borderWidth","borderColor","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nconst ICON_SIZE = '64px'\n\nexport default class Preview extends Component {\n  state = {\n    image: null\n  }\n  componentDidMount () {\n    this.fetchImage(this.props)\n  }\n  componentWillReceiveProps (nextProps) {\n    if (this.props.url !== nextProps.url) {\n      this.fetchImage(nextProps)\n    }\n  }\n  fetchImage ({ url, light }) {\n    if (typeof light === 'string') {\n      this.setState({ image: light })\n      return\n    }\n    this.setState({ image: null })\n    return window.fetch(`https://noembed.com/embed?url=${url}`)\n      .then(response => response.json())\n      .then(data => {\n        if (data.thumbnail_url) {\n          const image = data.thumbnail_url.replace('height=100', 'height=480')\n          this.setState({ image })\n        }\n      })\n  }\n  render () {\n    const { onClick } = this.props\n    const { image } = this.state\n    const flexCenter = {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n    const styles = {\n      preview: {\n        width: '100%',\n        height: '100%',\n        backgroundImage: image ? `url(${image})` : undefined,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        cursor: 'pointer',\n        ...flexCenter\n      },\n      shadow: {\n        background: 'radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)',\n        borderRadius: ICON_SIZE,\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n        ...flexCenter\n      },\n      playIcon: {\n        borderStyle: 'solid',\n        borderWidth: '16px 0 16px 26px',\n        borderColor: 'transparent transparent transparent white',\n        marginLeft: '7px'\n      }\n    }\n    return (\n      <div style={styles.preview} className='react-player__preview' onClick={onClick}>\n        <div style={styles.shadow} className='react-player__shadow'>\n          <div style={styles.playIcon} className='react-player__play-icon' />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}