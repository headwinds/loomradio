{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/App.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\"; // import { findDOMNode } from \"react-dom\";\n// import screenfull from \"screenfull\";\n// import config from \"./config\";\n\nimport DanceFloor from \"./channel/DanceFloor\";\nimport loomradioMark from \"./loomradio_mark.svg\";\nimport { version } from \"../package.json\";\nimport ReactPlayer from \"./ReactPlayer\";\nimport { stations } from \"./stations/stations\";\nconst bassdrive = stations.find(station => station.name === \"bassdrive\").url;\nconst torontoRadio1 = bassdrive;\nconst torontoRadio2 = bassdrive;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      url: torontoRadio2,\n      //\n      pip: false,\n      playing: false,\n      controls: false,\n      light: false,\n      volume: 0.8,\n      muted: false,\n      played: 0,\n      loaded: 0,\n      duration: 0,\n      playbackRate: 1.0,\n      loop: false,\n      meta: null,\n      currentShow: \"Loom Radio\"\n    });\n\n    _defineProperty(this, \"load\", url => {\n      this.setState({\n        url,\n        played: 0,\n        loaded: 0,\n        pip: false\n      });\n    });\n\n    _defineProperty(this, \"playPause\", event => {\n      this.setState({\n        playing: !this.state.playing\n      });\n    });\n\n    _defineProperty(this, \"stop\", () => {\n      this.setState({\n        url: null,\n        playing: false\n      });\n    });\n\n    _defineProperty(this, \"toggleControls\", () => {\n      const url = this.state.url;\n      this.setState({\n        controls: !this.state.controls,\n        url: null\n      }, () => this.load(url));\n    });\n\n    _defineProperty(this, \"toggleLight\", () => {\n      this.setState({\n        light: !this.state.light\n      });\n    });\n\n    _defineProperty(this, \"toggleLoop\", () => {\n      this.setState({\n        loop: !this.state.loop\n      });\n    });\n\n    _defineProperty(this, \"setVolume\", e => {\n      this.setState({\n        volume: parseFloat(e.target.value)\n      });\n    });\n\n    _defineProperty(this, \"toggleMuted\", () => {\n      this.setState({\n        muted: !this.state.muted\n      });\n    });\n\n    _defineProperty(this, \"setPlaybackRate\", e => {\n      this.setState({\n        playbackRate: parseFloat(e.target.value)\n      });\n    });\n\n    _defineProperty(this, \"togglePIP\", () => {\n      this.setState({\n        pip: !this.state.pip\n      });\n    });\n\n    _defineProperty(this, \"onSearch\", () => {\n      /*\n       Need to get googleAPI key and store config on dropbox\n       const { meta } = this.state;\n      const cx = \"001416230067881723525:aixpfy93ova\";\n      const query = `${meta.host} drum and bass`;\n      const apiKey = config.googleAPI;\n      const url = `https://www.googleapis.com/customsearch/v1?key=${apiKey}&cx=${cx}&q=${query}`;\n      fetch(url).then(\n        success => {\n          console.log(\"TCL: App -> onSearch -> success\", success);\n        },\n        fail => {}\n      );\n      */\n    });\n\n    _defineProperty(this, \"onPlay\", () => {\n      console.log(\"onPlay\");\n      const self = this;\n      const url = this.state.url;\n\n      const Parser = require(\"icecast-parser\");\n\n      const radioStation = new Parser(url); // \"http://bassdrive.radioca.st/;stream/1\"\n\n      radioStation.on(\"metadata\", function (metadata) {\n        //Live from NY hosted by Overfiend - special guest SOHLMAN\n        //The Prague Connection June 17th 2019 - hosted by Blofeld\n        const host = metadata.StreamTitle.split(\"by\")[1];\n        const show = metadata.StreamTitle.split(\"hosted\")[0]; // need parse out date\n\n        self.setState({\n          meta: metadata,\n          host,\n          show\n        });\n      });\n      this.setState({\n        playing: true\n      });\n    });\n\n    _defineProperty(this, \"onEnablePIP\", () => {\n      console.log(\"onEnablePIP\");\n      this.setState({\n        pip: true\n      });\n    });\n\n    _defineProperty(this, \"onDisablePIP\", () => {\n      console.log(\"onDisablePIP\");\n      this.setState({\n        pip: false\n      });\n    });\n\n    _defineProperty(this, \"onPause\", () => {\n      console.log(\"onPause\");\n      this.setState({\n        playing: false\n      });\n    });\n\n    _defineProperty(this, \"onSeekMouseDown\", e => {\n      this.setState({\n        seeking: true\n      });\n    });\n\n    _defineProperty(this, \"onSeekChange\", e => {\n      this.setState({\n        played: parseFloat(e.target.value)\n      });\n    });\n\n    _defineProperty(this, \"onSeekMouseUp\", e => {\n      this.setState({\n        seeking: false\n      });\n      this.player.seekTo(parseFloat(e.target.value));\n    });\n\n    _defineProperty(this, \"onProgress\", state => {\n      console.log(\"onProgress\", state); // We only want to update time slider if we are not currently seeking\n\n      if (!this.state.seeking) {\n        this.setState(state);\n      }\n    });\n\n    _defineProperty(this, \"onEnded\", () => {\n      console.log(\"onEnded\");\n      this.setState({\n        playing: this.state.loop\n      });\n    });\n\n    _defineProperty(this, \"onDuration\", duration => {\n      console.log(\"onDuration\", duration);\n      this.setState({\n        duration\n      });\n    });\n\n    _defineProperty(this, \"onClickFullscreen\", () => {// screenfull.request(findDOMNode(this.player));\n    });\n\n    _defineProperty(this, \"renderLoadButton\", (url, label) => {\n      return __jsx(\"button\", {\n        onClick: () => this.load(url),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 12\n        }\n      }, label);\n    });\n\n    _defineProperty(this, \"ref\", player => {\n      this.player = player;\n    });\n\n    _defineProperty(this, \"renderMeta\", meta => {\n      if (this.state.playing && this.state.meta && this.state.currentShow === \"Bassdrive Radio\") {\n        return __jsx(\"div\", {\n          className: \"meta\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }\n        }, __jsx(\"button\", {\n          onClick: this.onSearch,\n          className: \"meta-show\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }\n        }, __jsx(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }\n        }, this.state.meta.StreamTitle)));\n      } else if (this.state.currentShow !== \"Loom Radio\") {\n        return __jsx(\"div\", {\n          className: \"meta\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 14\n          }\n        }, \"no stream details available\");\n      }\n    });\n\n    _defineProperty(this, \"selectShow\", currentShow => e => {\n      const url = stations.find(station => station.name === currentShow).url;\n      this.setState({\n        currentShow,\n        url,\n        meta: null\n      });\n    });\n\n    _defineProperty(this, \"onErrorHandler\", e => {\n      console.log(\"App handling error from FilePlayer\");\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      url,\n      playing,\n      controls,\n      light,\n      volume,\n      muted,\n      loop,\n      played,\n      loaded,\n      duration,\n      playbackRate,\n      pip,\n      currentShow\n    } = this.state;\n    const SEPARATOR = \" Â· \";\n    const min = 0;\n    const max = 1;\n\n    const renderStationButtons = () => {\n      return stations.map(station => {\n        const {\n          name\n        } = station;\n        return __jsx(\"button\", {\n          className: \"select-show\",\n          onClick: this.selectShow(name),\n          key: name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }\n        }, name);\n      });\n    };\n\n    return __jsx(\"div\", {\n      className: \"loomradio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }\n    }, __jsx(\"section\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: loomradioMark,\n      alt: \"loomradio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    })), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, currentShow), __jsx(\"div\", {\n      className: \"player-wrapper\",\n      style: {\n        display: \"none\",\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, __jsx(ReactPlayer, {\n      ref: this.ref,\n      className: \"react-player\",\n      width: \"100%\",\n      height: \"100%\",\n      url: url,\n      pip: pip,\n      playing: playing,\n      controls: controls,\n      light: light,\n      loop: loop,\n      playbackRate: playbackRate,\n      volume: volume,\n      muted: muted,\n      onReady: () => console.log(\"onReady\"),\n      onStart: () => console.log(\"onStart\"),\n      onPlay: this.onPlay,\n      onEnablePIP: this.onEnablePIP,\n      onDisablePIP: this.onDisablePIP,\n      onPause: this.onPause,\n      onBuffer: () => console.log(\"onBuffer\"),\n      onSeek: e => console.log(\"onSeek\", e),\n      onEnded: this.onEnded,\n      onError: this.onErrorHandler,\n      onProgress: this.onProgress,\n      onDuration: this.onDuration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    })), this.renderMeta(), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }\n    }, currentShow !== \"Loom Radio\" && __jsx(\"button\", {\n      className: \"playBtn animate-in\",\n      onClick: this.playPause,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, playing ? \"Pause\" : \"Play\"), currentShow !== \"Loom Radio\" && __jsx(\"input\", {\n      className: \"InputRange animate-in\",\n      type: \"range\",\n      min: min,\n      max: max,\n      step: \"any\",\n      value: volume,\n      onChange: this.setVolume,\n      style: {\n        backgroundSize: `${(volume - min) / (max - min) * 100}% 100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }, renderStationButtons()), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      style: {\n        fontSize: 10,\n        color: \"#ddd\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }, version))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/braflow/loomradio/src/App.js"],"names":["React","Component","DanceFloor","loomradioMark","version","ReactPlayer","stations","bassdrive","find","station","name","url","torontoRadio1","torontoRadio2","App","pip","playing","controls","light","volume","muted","played","loaded","duration","playbackRate","loop","meta","currentShow","setState","event","state","load","e","parseFloat","target","value","console","log","self","Parser","require","radioStation","on","metadata","host","StreamTitle","split","show","seeking","player","seekTo","label","onSearch","componentDidMount","render","SEPARATOR","min","max","renderStationButtons","map","selectShow","display","marginBottom","ref","onPlay","onEnablePIP","onDisablePIP","onPause","onEnded","onErrorHandler","onProgress","onDuration","renderMeta","flexDirection","alignItems","justifyContent","playPause","setVolume","backgroundSize","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import { findDOMNode } from \"react-dom\";\n// import screenfull from \"screenfull\";\n// import config from \"./config\";\nimport DanceFloor from \"./channel/DanceFloor\";\nimport loomradioMark from \"./loomradio_mark.svg\";\nimport { version } from \"../package.json\";\nimport ReactPlayer from \"./ReactPlayer\";\nimport { stations } from \"./stations/stations\";\n\nconst bassdrive = stations.find((station) => station.name === \"bassdrive\").url;\nconst torontoRadio1 = bassdrive;\nconst torontoRadio2 = bassdrive;\n\nclass App extends Component {\n  state = {\n    url: torontoRadio2, //\n    pip: false,\n    playing: false,\n    controls: false,\n    light: false,\n    volume: 0.8,\n    muted: false,\n    played: 0,\n    loaded: 0,\n    duration: 0,\n    playbackRate: 1.0,\n    loop: false,\n    meta: null,\n    currentShow: \"Loom Radio\",\n  };\n  componentDidMount() {}\n  load = (url) => {\n    this.setState({\n      url,\n      played: 0,\n      loaded: 0,\n      pip: false,\n    });\n  };\n  playPause = (event) => {\n    this.setState({ playing: !this.state.playing });\n  };\n  stop = () => {\n    this.setState({ url: null, playing: false });\n  };\n  toggleControls = () => {\n    const url = this.state.url;\n    this.setState(\n      {\n        controls: !this.state.controls,\n        url: null,\n      },\n      () => this.load(url)\n    );\n  };\n  toggleLight = () => {\n    this.setState({ light: !this.state.light });\n  };\n  toggleLoop = () => {\n    this.setState({ loop: !this.state.loop });\n  };\n  setVolume = (e) => {\n    this.setState({ volume: parseFloat(e.target.value) });\n  };\n  toggleMuted = () => {\n    this.setState({ muted: !this.state.muted });\n  };\n  setPlaybackRate = (e) => {\n    this.setState({ playbackRate: parseFloat(e.target.value) });\n  };\n  togglePIP = () => {\n    this.setState({ pip: !this.state.pip });\n  };\n  onSearch = () => {\n    /*\n\n    Need to get googleAPI key and store config on dropbox\n\n    const { meta } = this.state;\n    const cx = \"001416230067881723525:aixpfy93ova\";\n    const query = `${meta.host} drum and bass`;\n    const apiKey = config.googleAPI;\n    const url = `https://www.googleapis.com/customsearch/v1?key=${apiKey}&cx=${cx}&q=${query}`;\n    fetch(url).then(\n      success => {\n        console.log(\"TCL: App -> onSearch -> success\", success);\n      },\n      fail => {}\n    );\n    */\n  };\n  onPlay = () => {\n    console.log(\"onPlay\");\n    const self = this;\n\n    const url = this.state.url;\n\n    const Parser = require(\"icecast-parser\");\n    const radioStation = new Parser(url);\n\n    // \"http://bassdrive.radioca.st/;stream/1\"\n\n    radioStation.on(\"metadata\", function (metadata) {\n      //Live from NY hosted by Overfiend - special guest SOHLMAN\n      //The Prague Connection June 17th 2019 - hosted by Blofeld\n      const host = metadata.StreamTitle.split(\"by\")[1];\n      const show = metadata.StreamTitle.split(\"hosted\")[0]; // need parse out date\n\n      self.setState({ meta: metadata, host, show });\n    });\n\n    this.setState({ playing: true });\n  };\n  onEnablePIP = () => {\n    console.log(\"onEnablePIP\");\n    this.setState({ pip: true });\n  };\n  onDisablePIP = () => {\n    console.log(\"onDisablePIP\");\n    this.setState({ pip: false });\n  };\n  onPause = () => {\n    console.log(\"onPause\");\n    this.setState({ playing: false });\n  };\n  onSeekMouseDown = (e) => {\n    this.setState({ seeking: true });\n  };\n  onSeekChange = (e) => {\n    this.setState({ played: parseFloat(e.target.value) });\n  };\n  onSeekMouseUp = (e) => {\n    this.setState({ seeking: false });\n    this.player.seekTo(parseFloat(e.target.value));\n  };\n  onProgress = (state) => {\n    console.log(\"onProgress\", state);\n    // We only want to update time slider if we are not currently seeking\n    if (!this.state.seeking) {\n      this.setState(state);\n    }\n  };\n  onEnded = () => {\n    console.log(\"onEnded\");\n    this.setState({ playing: this.state.loop });\n  };\n  onDuration = (duration) => {\n    console.log(\"onDuration\", duration);\n    this.setState({ duration });\n  };\n  onClickFullscreen = () => {\n    // screenfull.request(findDOMNode(this.player));\n  };\n  renderLoadButton = (url, label) => {\n    return <button onClick={() => this.load(url)}>{label}</button>;\n  };\n  ref = (player) => {\n    this.player = player;\n  };\n  renderMeta = (meta) => {\n    if (\n      this.state.playing &&\n      this.state.meta &&\n      this.state.currentShow === \"Bassdrive Radio\"\n    ) {\n      return (\n        <div className=\"meta\">\n          <button onClick={this.onSearch} className=\"meta-show\">\n            <h2>{this.state.meta.StreamTitle}</h2>\n          </button>\n        </div>\n      );\n    } else if (this.state.currentShow !== \"Loom Radio\") {\n      return <div className=\"meta\">no stream details available</div>;\n    }\n  };\n\n  selectShow = (currentShow) => (e) => {\n    const url = stations.find((station) => station.name === currentShow).url;\n\n    this.setState({ currentShow, url, meta: null });\n  };\n\n  onErrorHandler = (e) => {\n    console.log(\"App handling error from FilePlayer\");\n  };\n\n  render() {\n    const {\n      url,\n      playing,\n      controls,\n      light,\n      volume,\n      muted,\n      loop,\n      played,\n      loaded,\n      duration,\n      playbackRate,\n      pip,\n      currentShow,\n    } = this.state;\n    const SEPARATOR = \" Â· \";\n\n    const min = 0;\n    const max = 1;\n\n    const renderStationButtons = () => {\n      return stations.map((station) => {\n        const { name } = station;\n        return (\n          <button\n            className=\"select-show\"\n            onClick={this.selectShow(name)}\n            key={name}\n          >\n            {name}\n          </button>\n        );\n      });\n    };\n\n    return (\n      <div className=\"loomradio\">\n        <section className=\"section\">\n          {/* <DanceFloor /> */}\n          <div>\n            <img src={loomradioMark} alt=\"loomradio\" />\n          </div>\n          <h1>{currentShow}</h1>\n          <div\n            className=\"player-wrapper\"\n            style={{ display: \"none\", marginBottom: 20 }}\n          >\n            <ReactPlayer\n              ref={this.ref}\n              className=\"react-player\"\n              width=\"100%\"\n              height=\"100%\"\n              url={url}\n              pip={pip}\n              playing={playing}\n              controls={controls}\n              light={light}\n              loop={loop}\n              playbackRate={playbackRate}\n              volume={volume}\n              muted={muted}\n              onReady={() => console.log(\"onReady\")}\n              onStart={() => console.log(\"onStart\")}\n              onPlay={this.onPlay}\n              onEnablePIP={this.onEnablePIP}\n              onDisablePIP={this.onDisablePIP}\n              onPause={this.onPause}\n              onBuffer={() => console.log(\"onBuffer\")}\n              onSeek={(e) => console.log(\"onSeek\", e)}\n              onEnded={this.onEnded}\n              onError={this.onErrorHandler}\n              onProgress={this.onProgress}\n              onDuration={this.onDuration}\n            />\n          </div>\n          {this.renderMeta()}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginBottom: 20,\n            }}\n          >\n            {currentShow !== \"Loom Radio\" && (\n              <button className=\"playBtn animate-in\" onClick={this.playPause}>\n                {playing ? \"Pause\" : \"Play\"}\n              </button>\n            )}\n\n            {currentShow !== \"Loom Radio\" && (\n              <input\n                className=\"InputRange animate-in\"\n                type=\"range\"\n                min={min}\n                max={max}\n                step=\"any\"\n                value={volume}\n                onChange={this.setVolume}\n                style={{\n                  backgroundSize: `${\n                    ((volume - min) / (max - min)) * 100\n                  }% 100%`,\n                }}\n              />\n            )}\n          </div>\n          <div>\n            {renderStationButtons()}\n            {/*\n            <button\n              className=\"select-show\"\n              onClick={this.selectShow(\"CBC Radio 1\")}\n            >\n              CBC Radio 1\n            </button>\n            <button\n              className=\"select-show\"\n              onClick={this.selectShow(\"CBC Radio 2\")}\n            >\n              CBC Radio 2\n            </button>*/}\n          </div>\n          <div>\n            <span style={{ fontSize: 10, color: \"#ddd\" }}>{version}</span>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}