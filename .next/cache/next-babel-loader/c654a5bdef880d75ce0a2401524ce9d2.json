{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/singlePlayer.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { propTypes, defaultProps, DEPRECATED_CONFIG_PROPS } from './props';\nimport { getConfig, omit, isEqual } from './utils';\nimport Player from './Player';\nconst SUPPORTED_PROPS = Object.keys(propTypes);\nexport default function createSinglePlayer(activePlayer) {\n  var _class, _temp;\n\n  return _temp = _class = class SinglePlayer extends Component {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"config\", getConfig(this.props, defaultProps, true));\n\n      _defineProperty(this, \"getDuration\", () => {\n        if (!this.player) return null;\n        return this.player.getDuration();\n      });\n\n      _defineProperty(this, \"getCurrentTime\", () => {\n        if (!this.player) return null;\n        return this.player.getCurrentTime();\n      });\n\n      _defineProperty(this, \"getSecondsLoaded\", () => {\n        if (!this.player) return null;\n        return this.player.getSecondsLoaded();\n      });\n\n      _defineProperty(this, \"getInternalPlayer\", (key = 'player') => {\n        if (!this.player) return null;\n        return this.player.getInternalPlayer(key);\n      });\n\n      _defineProperty(this, \"seekTo\", (fraction, type) => {\n        if (!this.player) return null;\n        this.player.seekTo(fraction, type);\n      });\n\n      _defineProperty(this, \"ref\", player => {\n        this.player = player;\n      });\n    }\n\n    shouldComponentUpdate(nextProps) {\n      return !isEqual(this.props, nextProps);\n    }\n\n    componentWillUpdate(nextProps) {\n      this.config = getConfig(nextProps, defaultProps);\n    }\n\n    render() {\n      const {\n        forceVideo,\n        forceAudio,\n        forceHLS,\n        forceDASH\n      } = this.config.file;\n      const skipCanPlay = forceVideo || forceAudio || forceHLS || forceDASH;\n\n      if (!activePlayer.canPlay(this.props.url) && !skipCanPlay) {\n        return null;\n      }\n\n      const {\n        style,\n        width,\n        height,\n        wrapper: Wrapper\n      } = this.props;\n      const otherProps = omit(this.props, SUPPORTED_PROPS, DEPRECATED_CONFIG_PROPS);\n      return __jsx(Wrapper, _extends({\n        style: _objectSpread(_objectSpread({}, style), {}, {\n          width,\n          height\n        })\n      }, otherProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }), __jsx(Player, _extends({}, this.props, {\n        ref: this.ref,\n        activePlayer: activePlayer,\n        config: this.config,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      })));\n    }\n\n  }, _defineProperty(_class, \"displayName\", `${activePlayer.displayName}Player`), _defineProperty(_class, \"propTypes\", propTypes), _defineProperty(_class, \"defaultProps\", defaultProps), _defineProperty(_class, \"canPlay\", activePlayer.canPlay), _temp;\n}","map":{"version":3,"sources":["/Users/braflow/loomradio/src/singlePlayer.js"],"names":["React","Component","propTypes","defaultProps","DEPRECATED_CONFIG_PROPS","getConfig","omit","isEqual","Player","SUPPORTED_PROPS","Object","keys","createSinglePlayer","activePlayer","SinglePlayer","props","player","getDuration","getCurrentTime","getSecondsLoaded","key","getInternalPlayer","fraction","type","seekTo","shouldComponentUpdate","nextProps","componentWillUpdate","config","render","forceVideo","forceAudio","forceHLS","forceDASH","file","skipCanPlay","canPlay","url","style","width","height","wrapper","Wrapper","otherProps","ref","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { propTypes, defaultProps, DEPRECATED_CONFIG_PROPS } from './props'\nimport { getConfig, omit, isEqual } from './utils'\nimport Player from './Player'\n\nconst SUPPORTED_PROPS = Object.keys(propTypes)\n\nexport default function createSinglePlayer (activePlayer) {\n  return class SinglePlayer extends Component {\n    static displayName = `${activePlayer.displayName}Player`\n    static propTypes = propTypes\n    static defaultProps = defaultProps\n    static canPlay = activePlayer.canPlay\n\n    config = getConfig(this.props, defaultProps, true)\n    shouldComponentUpdate (nextProps) {\n      return !isEqual(this.props, nextProps)\n    }\n    componentWillUpdate (nextProps) {\n      this.config = getConfig(nextProps, defaultProps)\n    }\n    getDuration = () => {\n      if (!this.player) return null\n      return this.player.getDuration()\n    }\n    getCurrentTime = () => {\n      if (!this.player) return null\n      return this.player.getCurrentTime()\n    }\n    getSecondsLoaded = () => {\n      if (!this.player) return null\n      return this.player.getSecondsLoaded()\n    }\n    getInternalPlayer = (key = 'player') => {\n      if (!this.player) return null\n      return this.player.getInternalPlayer(key)\n    }\n    seekTo = (fraction, type) => {\n      if (!this.player) return null\n      this.player.seekTo(fraction, type)\n    }\n    ref = player => {\n      this.player = player\n    }\n    render () {\n      const { forceVideo, forceAudio, forceHLS, forceDASH } = this.config.file\n      const skipCanPlay = forceVideo || forceAudio || forceHLS || forceDASH\n      if (!activePlayer.canPlay(this.props.url) && !skipCanPlay) {\n        return null\n      }\n      const { style, width, height, wrapper: Wrapper } = this.props\n      const otherProps = omit(this.props, SUPPORTED_PROPS, DEPRECATED_CONFIG_PROPS)\n      return (\n        <Wrapper style={{ ...style, width, height }} {...otherProps}>\n          <Player\n            {...this.props}\n            ref={this.ref}\n            activePlayer={activePlayer}\n            config={this.config}\n          />\n        </Wrapper>\n      )\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}