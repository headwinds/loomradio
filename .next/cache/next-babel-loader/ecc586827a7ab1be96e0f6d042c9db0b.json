{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/App.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\"; // import { findDOMNode } from \"react-dom\";\n// import screenfull from \"screenfull\";\n// import config from \"./config\";\n\nimport DanceFloor from \"./channel/DanceFloor\";\nimport loomradioMark from \"./loomradio_mark.svg\";\nimport { version } from \"../package.json\";\nimport ReactPlayer from \"./ReactPlayer\";\nimport { stations } from \"./stations/stations\";\nconst station = stations.find(station => station.name === \"bassdrive\");\nconst bassdrive = station.url;\nconst torontoRadio1 = bassdrive;\nconst torontoRadio2 = bassdrive;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      station,\n      url: bassdrive,\n      //\n      pip: false,\n      playing: false,\n      controls: false,\n      light: false,\n      volume: 0.5,\n      muted: false,\n      played: 0,\n      loaded: 0,\n      duration: 0,\n      playbackRate: 1.0,\n      loop: false,\n      meta: null,\n      currentShow: \"Loom Radio\"\n    });\n\n    _defineProperty(this, \"load\", url => {\n      this.setState({\n        url,\n        played: 0,\n        loaded: 0,\n        pip: false\n      });\n    });\n\n    _defineProperty(this, \"playPause\", event => {\n      this.setState({\n        playing: !this.state.playing\n      });\n    });\n\n    _defineProperty(this, \"stop\", () => {\n      this.setState({\n        url: null,\n        playing: false\n      });\n    });\n\n    _defineProperty(this, \"toggleControls\", () => {\n      const url = this.state.url;\n      this.setState({\n        controls: !this.state.controls,\n        url: null\n      }, () => this.load(url));\n    });\n\n    _defineProperty(this, \"toggleLight\", () => {\n      this.setState({\n        light: !this.state.light\n      });\n    });\n\n    _defineProperty(this, \"toggleLoop\", () => {\n      this.setState({\n        loop: !this.state.loop\n      });\n    });\n\n    _defineProperty(this, \"setVolume\", e => {\n      this.setState({\n        volume: parseFloat(e.target.value)\n      });\n    });\n\n    _defineProperty(this, \"toggleMuted\", () => {\n      this.setState({\n        muted: !this.state.muted\n      });\n    });\n\n    _defineProperty(this, \"setPlaybackRate\", e => {\n      this.setState({\n        playbackRate: parseFloat(e.target.value)\n      });\n    });\n\n    _defineProperty(this, \"togglePIP\", () => {\n      this.setState({\n        pip: !this.state.pip\n      });\n    });\n\n    _defineProperty(this, \"onSearch\", () => {\n      /*\n       Need to get googleAPI key and store config on dropbox\n       const { meta } = this.state;\n      const cx = \"001416230067881723525:aixpfy93ova\";\n      const query = `${meta.host} drum and bass`;\n      const apiKey = config.googleAPI;\n      const url = `https://www.googleapis.com/customsearch/v1?key=${apiKey}&cx=${cx}&q=${query}`;\n      fetch(url).then(\n        success => {\n          console.log(\"TCL: App -> onSearch -> success\", success);\n        },\n        fail => {}\n      );\n      */\n    });\n\n    _defineProperty(this, \"fetchMeta\", async station => {\n      const {\n        ownmetadataurl\n      } = station; //const url = `https://cors-anywhere.herokuapp.com/${ownmetadataurl}`;\n\n      const config = {\n        method: \"GET\",\n        // *GET, POST, PUT, DELETE, etc.\n        mode: \"no-cors\",\n        // no-cors, *cors, same-origin\n        cache: \"no-cache\",\n        // *default, no-cache, reload, force-cache, only-if-cached\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n          \"X-Requested-With\": \"XMLHttpRequest\"\n        },\n        redirect: \"follow\",\n        // manual, *follow, error\n        referrerPolicy: \"no-referrer\" // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\n      };\n      const res = await fetch(ownmetadataurl, config);\n      const reader = res.clone().text();\n      console.log(\"yes response: \", reader); //const json = await response.json();\n      //console.log(\"yes json: \", json);\n      //return json;\n    });\n\n    _defineProperty(this, \"onPlay\", () => {\n      console.log(\"App onPlay\");\n      const self = this;\n      const {\n        station,\n        url\n      } = this.state;\n\n      const Parser = require(\"icecast-parser\");\n\n      const radioStation = new Parser(url); // \"http://bassdrive.radioca.st/;stream/1\"\n\n      if (station.ownmetadataurl) {\n        this.fetchMeta(station);\n      }\n\n      radioStation.on(\"metadata\", function (metadata) {\n        //Live from NY hosted by Overfiend - special guest SOHLMAN\n        //The Prague Connection June 17th 2019 - hosted by Blofeld\n        const host = metadata.StreamTitle.split(\"by\")[1];\n        const show = metadata.StreamTitle.split(\"hosted\")[0]; // need parse out date\n\n        console.log(\"App onPlay metadata: \", metadata);\n        self.setState({\n          meta: metadata,\n          host,\n          show\n        });\n      });\n      radioStation.on(\"end\", function (error) {\n        console.log(\"radioStation ended\");\n      });\n      radioStation.on(\"error\", function (error) {\n        console.log(\"radioStation error\", error);\n      });\n      radioStation.on(\"empty\", function () {\n        console.log(\"radioStation empty\");\n      });\n      radioStation.on(\"stream\", function (stream) {\n        //stream.pipe(process.stdout);\n        console.log(\"radioStation stream \", stream);\n      });\n      radioStation.on(\"error\", error => {\n        console.log(\"radioStation error \", error);\n      });\n      this.setState({\n        playing: true\n      });\n    });\n\n    _defineProperty(this, \"onEnablePIP\", () => {\n      console.log(\"onEnablePIP\");\n      this.setState({\n        pip: true\n      });\n    });\n\n    _defineProperty(this, \"onDisablePIP\", () => {\n      console.log(\"onDisablePIP\");\n      this.setState({\n        pip: false\n      });\n    });\n\n    _defineProperty(this, \"onPause\", () => {\n      console.log(\"onPause\");\n      this.setState({\n        playing: false\n      });\n    });\n\n    _defineProperty(this, \"onSeekMouseDown\", e => {\n      this.setState({\n        seeking: true\n      });\n    });\n\n    _defineProperty(this, \"onSeekChange\", e => {\n      this.setState({\n        played: parseFloat(e.target.value)\n      });\n    });\n\n    _defineProperty(this, \"onSeekMouseUp\", e => {\n      this.setState({\n        seeking: false\n      });\n      this.player.seekTo(parseFloat(e.target.value));\n    });\n\n    _defineProperty(this, \"onProgress\", state => {\n      console.log(\"onProgress\", state); // We only want to update time slider if we are not currently seeking\n\n      if (!this.state.seeking) {\n        this.setState(state);\n      }\n    });\n\n    _defineProperty(this, \"onEnded\", () => {\n      console.log(\"onEnded\");\n      this.setState({\n        playing: this.state.loop\n      });\n    });\n\n    _defineProperty(this, \"onDuration\", duration => {\n      console.log(\"onDuration\", duration);\n      this.setState({\n        duration\n      });\n    });\n\n    _defineProperty(this, \"onClickFullscreen\", () => {// screenfull.request(findDOMNode(this.player));\n    });\n\n    _defineProperty(this, \"renderLoadButton\", (url, label) => {\n      return __jsx(\"button\", {\n        onClick: () => this.load(url),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 12\n        }\n      }, label);\n    });\n\n    _defineProperty(this, \"ref\", player => {\n      this.player = player;\n    });\n\n    _defineProperty(this, \"renderMeta\", meta => {\n      if (this.state.playing && this.state.meta) {\n        console.log(\"App meta: \", meta);\n        return __jsx(\"div\", {\n          className: \"meta\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 9\n          }\n        }, __jsx(\"button\", {\n          onClick: this.onSearch,\n          className: \"meta-show\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }\n        }, __jsx(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }\n        }, this.state.meta.StreamTitle)));\n      } else if (this.state.currentShow !== \"Loom Radio\") {\n        return __jsx(\"div\", {\n          className: \"meta\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 14\n          }\n        }, \"no stream details available\");\n      }\n    });\n\n    _defineProperty(this, \"selectShow\", currentShow => e => {\n      const station = stations.find(station => station.name === currentShow);\n      const {\n        url\n      } = station;\n      this.setState({\n        currentShow,\n        station,\n        url,\n        meta: null\n      });\n    });\n\n    _defineProperty(this, \"onErrorHandler\", e => {\n      console.log(e);\n    });\n\n    _defineProperty(this, \"onBufferHandler\", () => {\n      console.log(\"App handling buffer from FilePlayer\");\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      url,\n      playing,\n      controls,\n      light,\n      volume,\n      muted,\n      loop,\n      played,\n      loaded,\n      duration,\n      playbackRate,\n      pip,\n      currentShow\n    } = this.state;\n    const SEPARATOR = \" · \";\n    const min = 0;\n    const max = 1;\n\n    const renderStationButtons = () => {\n      return stations.map(station => {\n        const {\n          name\n        } = station;\n        return __jsx(\"button\", {\n          className: \"select-show\",\n          onClick: this.selectShow(name),\n          key: name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 11\n          }\n        }, name);\n      });\n    };\n\n    return __jsx(\"div\", {\n      className: \"loomradio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 7\n      }\n    }, __jsx(\"section\", {\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: loomradioMark,\n      alt: \"loomradio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    })), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }, currentShow), __jsx(\"div\", {\n      className: \"player-wrapper\",\n      style: {\n        display: \"none\",\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }\n    }, __jsx(ReactPlayer, {\n      ref: this.ref,\n      className: \"react-player\",\n      width: \"100%\",\n      height: \"100%\",\n      url: url,\n      pip: pip,\n      playing: playing,\n      controls: controls,\n      light: light,\n      loop: loop,\n      playbackRate: playbackRate,\n      volume: volume,\n      muted: muted,\n      onReady: () => console.log(\"onReady\"),\n      onStart: () => console.log(\"onStart\"),\n      onPlay: this.onPlay,\n      onEnablePIP: this.onEnablePIP,\n      onDisablePIP: this.onDisablePIP,\n      onPause: this.onPause,\n      onBuffer: this.onBufferHandler,\n      onSeek: e => console.log(\"onSeek\", e),\n      onEnded: this.onEnded,\n      onError: this.onErrorHandler,\n      onProgress: this.onProgress,\n      onDuration: this.onDuration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    })), this.renderMeta(), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, currentShow !== \"Loom Radio\" && __jsx(\"button\", {\n      className: \"playBtn animate-in\",\n      onClick: this.playPause,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }, playing ? \"Pause\" : \"Play\"), currentShow !== \"Loom Radio\" && __jsx(\"input\", {\n      className: \"InputRange animate-in\",\n      type: \"range\",\n      min: min,\n      max: max,\n      step: \"any\",\n      value: volume,\n      onChange: this.setVolume,\n      style: {\n        backgroundSize: `${(volume - min) / (max - min) * 100}% 100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    }, renderStationButtons()), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      style: {\n        fontSize: 10,\n        color: \"#ddd\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }, version))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/braflow/loomradio/src/App.js"],"names":["React","Component","DanceFloor","loomradioMark","version","ReactPlayer","stations","station","find","name","bassdrive","url","torontoRadio1","torontoRadio2","App","pip","playing","controls","light","volume","muted","played","loaded","duration","playbackRate","loop","meta","currentShow","setState","event","state","load","e","parseFloat","target","value","ownmetadataurl","config","method","mode","cache","headers","redirect","referrerPolicy","res","fetch","reader","clone","text","console","log","self","Parser","require","radioStation","fetchMeta","on","metadata","host","StreamTitle","split","show","error","stream","seeking","player","seekTo","label","onSearch","componentDidMount","render","SEPARATOR","min","max","renderStationButtons","map","selectShow","display","marginBottom","ref","onPlay","onEnablePIP","onDisablePIP","onPause","onBufferHandler","onEnded","onErrorHandler","onProgress","onDuration","renderMeta","flexDirection","alignItems","justifyContent","playPause","setVolume","backgroundSize","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import { findDOMNode } from \"react-dom\";\n// import screenfull from \"screenfull\";\n// import config from \"./config\";\nimport DanceFloor from \"./channel/DanceFloor\";\nimport loomradioMark from \"./loomradio_mark.svg\";\nimport { version } from \"../package.json\";\nimport ReactPlayer from \"./ReactPlayer\";\nimport { stations } from \"./stations/stations\";\n\nconst station = stations.find((station) => station.name === \"bassdrive\");\nconst bassdrive = station.url;\nconst torontoRadio1 = bassdrive;\nconst torontoRadio2 = bassdrive;\n\nclass App extends Component {\n  state = {\n    station,\n    url: bassdrive, //\n    pip: false,\n    playing: false,\n    controls: false,\n    light: false,\n    volume: 0.5,\n    muted: false,\n    played: 0,\n    loaded: 0,\n    duration: 0,\n    playbackRate: 1.0,\n    loop: false,\n    meta: null,\n    currentShow: \"Loom Radio\",\n  };\n  componentDidMount() {}\n  load = (url) => {\n    this.setState({\n      url,\n      played: 0,\n      loaded: 0,\n      pip: false,\n    });\n  };\n  playPause = (event) => {\n    this.setState({ playing: !this.state.playing });\n  };\n  stop = () => {\n    this.setState({ url: null, playing: false });\n  };\n  toggleControls = () => {\n    const url = this.state.url;\n    this.setState(\n      {\n        controls: !this.state.controls,\n        url: null,\n      },\n      () => this.load(url)\n    );\n  };\n  toggleLight = () => {\n    this.setState({ light: !this.state.light });\n  };\n  toggleLoop = () => {\n    this.setState({ loop: !this.state.loop });\n  };\n  setVolume = (e) => {\n    this.setState({ volume: parseFloat(e.target.value) });\n  };\n  toggleMuted = () => {\n    this.setState({ muted: !this.state.muted });\n  };\n  setPlaybackRate = (e) => {\n    this.setState({ playbackRate: parseFloat(e.target.value) });\n  };\n  togglePIP = () => {\n    this.setState({ pip: !this.state.pip });\n  };\n  onSearch = () => {\n    /*\n\n    Need to get googleAPI key and store config on dropbox\n\n    const { meta } = this.state;\n    const cx = \"001416230067881723525:aixpfy93ova\";\n    const query = `${meta.host} drum and bass`;\n    const apiKey = config.googleAPI;\n    const url = `https://www.googleapis.com/customsearch/v1?key=${apiKey}&cx=${cx}&q=${query}`;\n    fetch(url).then(\n      success => {\n        console.log(\"TCL: App -> onSearch -> success\", success);\n      },\n      fail => {}\n    );\n    */\n  };\n\n  fetchMeta = async (station) => {\n    const { ownmetadataurl } = station;\n    //const url = `https://cors-anywhere.herokuapp.com/${ownmetadataurl}`;\n    const config = {\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"no-cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    };\n\n    const res = await fetch(ownmetadataurl, config);\n\n    const reader = res.clone().text();\n\n    console.log(\"yes response: \", reader);\n    //const json = await response.json();\n    //console.log(\"yes json: \", json);\n    //return json;\n  };\n\n  onPlay = () => {\n    console.log(\"App onPlay\");\n    const self = this;\n    const { station, url } = this.state;\n\n    const Parser = require(\"icecast-parser\");\n    const radioStation = new Parser(url);\n\n    // \"http://bassdrive.radioca.st/;stream/1\"\n\n    if (station.ownmetadataurl) {\n      this.fetchMeta(station);\n    }\n\n    radioStation.on(\"metadata\", function (metadata) {\n      //Live from NY hosted by Overfiend - special guest SOHLMAN\n      //The Prague Connection June 17th 2019 - hosted by Blofeld\n      const host = metadata.StreamTitle.split(\"by\")[1];\n      const show = metadata.StreamTitle.split(\"hosted\")[0]; // need parse out date\n\n      console.log(\"App onPlay metadata: \", metadata);\n\n      self.setState({ meta: metadata, host, show });\n    });\n\n    radioStation.on(\"end\", function (error) {\n      console.log(\"radioStation ended\");\n    });\n\n    radioStation.on(\"error\", function (error) {\n      console.log(\"radioStation error\", error);\n    });\n\n    radioStation.on(\"empty\", function () {\n      console.log(\"radioStation empty\");\n    });\n\n    radioStation.on(\"stream\", function (stream) {\n      //stream.pipe(process.stdout);\n      console.log(\"radioStation stream \", stream);\n    });\n\n    radioStation.on(\"error\", (error) => {\n      console.log(\"radioStation error \", error);\n    });\n\n    this.setState({ playing: true });\n  };\n  onEnablePIP = () => {\n    console.log(\"onEnablePIP\");\n    this.setState({ pip: true });\n  };\n  onDisablePIP = () => {\n    console.log(\"onDisablePIP\");\n    this.setState({ pip: false });\n  };\n  onPause = () => {\n    console.log(\"onPause\");\n    this.setState({ playing: false });\n  };\n  onSeekMouseDown = (e) => {\n    this.setState({ seeking: true });\n  };\n  onSeekChange = (e) => {\n    this.setState({ played: parseFloat(e.target.value) });\n  };\n  onSeekMouseUp = (e) => {\n    this.setState({ seeking: false });\n    this.player.seekTo(parseFloat(e.target.value));\n  };\n  onProgress = (state) => {\n    console.log(\"onProgress\", state);\n    // We only want to update time slider if we are not currently seeking\n    if (!this.state.seeking) {\n      this.setState(state);\n    }\n  };\n  onEnded = () => {\n    console.log(\"onEnded\");\n    this.setState({ playing: this.state.loop });\n  };\n  onDuration = (duration) => {\n    console.log(\"onDuration\", duration);\n    this.setState({ duration });\n  };\n  onClickFullscreen = () => {\n    // screenfull.request(findDOMNode(this.player));\n  };\n  renderLoadButton = (url, label) => {\n    return <button onClick={() => this.load(url)}>{label}</button>;\n  };\n  ref = (player) => {\n    this.player = player;\n  };\n  renderMeta = (meta) => {\n    if (this.state.playing && this.state.meta) {\n      console.log(\"App meta: \", meta);\n      return (\n        <div className=\"meta\">\n          <button onClick={this.onSearch} className=\"meta-show\">\n            <h2>{this.state.meta.StreamTitle}</h2>\n          </button>\n        </div>\n      );\n    } else if (this.state.currentShow !== \"Loom Radio\") {\n      return <div className=\"meta\">no stream details available</div>;\n    }\n  };\n\n  selectShow = (currentShow) => (e) => {\n    const station = stations.find((station) => station.name === currentShow);\n    const { url } = station;\n\n    this.setState({ currentShow, station, url, meta: null });\n  };\n\n  onErrorHandler = (e) => {\n    console.log(e);\n  };\n\n  onBufferHandler = () => {\n    console.log(\"App handling buffer from FilePlayer\");\n  };\n\n  render() {\n    const {\n      url,\n      playing,\n      controls,\n      light,\n      volume,\n      muted,\n      loop,\n      played,\n      loaded,\n      duration,\n      playbackRate,\n      pip,\n      currentShow,\n    } = this.state;\n    const SEPARATOR = \" · \";\n\n    const min = 0;\n    const max = 1;\n\n    const renderStationButtons = () => {\n      return stations.map((station) => {\n        const { name } = station;\n        return (\n          <button\n            className=\"select-show\"\n            onClick={this.selectShow(name)}\n            key={name}\n          >\n            {name}\n          </button>\n        );\n      });\n    };\n\n    return (\n      <div className=\"loomradio\">\n        <section className=\"section\">\n          {/* <DanceFloor /> */}\n          <div>\n            <img src={loomradioMark} alt=\"loomradio\" />\n          </div>\n          <h1>{currentShow}</h1>\n          <div\n            className=\"player-wrapper\"\n            style={{ display: \"none\", marginBottom: 20 }}\n          >\n            <ReactPlayer\n              ref={this.ref}\n              className=\"react-player\"\n              width=\"100%\"\n              height=\"100%\"\n              url={url}\n              pip={pip}\n              playing={playing}\n              controls={controls}\n              light={light}\n              loop={loop}\n              playbackRate={playbackRate}\n              volume={volume}\n              muted={muted}\n              onReady={() => console.log(\"onReady\")}\n              onStart={() => console.log(\"onStart\")}\n              onPlay={this.onPlay}\n              onEnablePIP={this.onEnablePIP}\n              onDisablePIP={this.onDisablePIP}\n              onPause={this.onPause}\n              onBuffer={this.onBufferHandler}\n              onSeek={(e) => console.log(\"onSeek\", e)}\n              onEnded={this.onEnded}\n              onError={this.onErrorHandler}\n              onProgress={this.onProgress}\n              onDuration={this.onDuration}\n            />\n          </div>\n          {this.renderMeta()}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginBottom: 20,\n            }}\n          >\n            {currentShow !== \"Loom Radio\" && (\n              <button className=\"playBtn animate-in\" onClick={this.playPause}>\n                {playing ? \"Pause\" : \"Play\"}\n              </button>\n            )}\n\n            {currentShow !== \"Loom Radio\" && (\n              <input\n                className=\"InputRange animate-in\"\n                type=\"range\"\n                min={min}\n                max={max}\n                step=\"any\"\n                value={volume}\n                onChange={this.setVolume}\n                style={{\n                  backgroundSize: `${\n                    ((volume - min) / (max - min)) * 100\n                  }% 100%`,\n                }}\n              />\n            )}\n          </div>\n          <div>\n            {renderStationButtons()}\n            {/*\n            <button\n              className=\"select-show\"\n              onClick={this.selectShow(\"CBC Radio 1\")}\n            >\n              CBC Radio 1\n            </button>\n            <button\n              className=\"select-show\"\n              onClick={this.selectShow(\"CBC Radio 2\")}\n            >\n              CBC Radio 2\n            </button>*/}\n          </div>\n          <div>\n            <span style={{ fontSize: 10, color: \"#ddd\" }}>{version}</span>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}