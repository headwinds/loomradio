{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/players/FilePlayer.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { getSDK, isMediaStream } from \"../utils\";\nimport createSinglePlayer from \"../singlePlayer\";\nconst IOS = typeof navigator !== \"undefined\" && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nconst AUDIO_EXTENSIONS = /\\.(m4a|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\\?)/i;\nconst VIDEO_EXTENSIONS = /\\.(mp4|og[gv]|webm|mov|m4v)($|\\?)/i;\nconst HLS_EXTENSIONS = /\\.(m3u8)($|\\?)/i;\nconst HLS_SDK_URL = \"https://cdnjs.cloudflare.com/ajax/libs/hls.js/VERSION/hls.min.js\";\nconst HLS_GLOBAL = \"Hls\";\nconst DASH_EXTENSIONS = /\\.(mpd)($|\\?)/i;\nconst DASH_SDK_URL = \"https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js\";\nconst DASH_GLOBAL = \"dashjs\";\nconst MATCH_DROPBOX_URL = /www\\.dropbox\\.com\\/.+/;\n\nfunction canPlay(url) {\n  if (url instanceof Array) {\n    for (let item of url) {\n      if (typeof item === \"string\" && canPlay(item)) {\n        return true;\n      }\n\n      if (canPlay(item.src)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (isMediaStream(url)) {\n    return true;\n  }\n\n  return AUDIO_EXTENSIONS.test(url) || VIDEO_EXTENSIONS.test(url) || HLS_EXTENSIONS.test(url) || DASH_EXTENSIONS.test(url);\n}\n\nfunction canEnablePIP(url) {\n  return canPlay(url) && !!document.pictureInPictureEnabled && !AUDIO_EXTENSIONS.test(url);\n}\n\nexport class FilePlayer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onDisablePIP\", e => {\n      const {\n        onDisablePIP,\n        playing\n      } = this.props;\n      onDisablePIP(e);\n\n      if (playing) {\n        this.play();\n      }\n    });\n\n    _defineProperty(this, \"onSeek\", e => {\n      this.props.onSeek(e.target.currentTime);\n    });\n\n    _defineProperty(this, \"mute\", () => {\n      this.player.muted = true;\n    });\n\n    _defineProperty(this, \"unmute\", () => {\n      this.player.muted = false;\n    });\n\n    _defineProperty(this, \"renderSourceElement\", (source, index) => {\n      if (typeof source === \"string\") {\n        return __jsx(\"source\", {\n          key: index,\n          src: source,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return __jsx(\"source\", _extends({\n        key: index\n      }, source, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 12\n        }\n      }));\n    });\n\n    _defineProperty(this, \"renderTrack\", (track, index) => {\n      return __jsx(\"track\", _extends({\n        key: index\n      }, track, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 12\n        }\n      }));\n    });\n\n    _defineProperty(this, \"ref\", player => {\n      this.player = player;\n    });\n  }\n\n  componentDidMount() {\n    this.addListeners();\n\n    if (IOS) {\n      this.player.load();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(nextProps)) {\n      this.removeListeners();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {\n      this.addListeners();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  addListeners() {\n    const {\n      onReady,\n      onPlay,\n      onBuffer,\n      onBufferEnd,\n      onPause,\n      onEnded,\n      onError,\n      playsinline,\n      onEnablePIP\n    } = this.props;\n    this.player.addEventListener(\"canplay\", onReady);\n    this.player.addEventListener(\"play\", onPlay);\n    this.player.addEventListener(\"waiting\", onBuffer);\n    this.player.addEventListener(\"playing\", onBufferEnd);\n    this.player.addEventListener(\"pause\", onPause);\n    this.player.addEventListener(\"seeked\", this.onSeek);\n    this.player.addEventListener(\"ended\", onEnded);\n    this.player.addEventListener(\"error\", onError);\n    this.player.addEventListener(\"enterpictureinpicture\", onEnablePIP);\n    this.player.addEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n\n    if (playsinline) {\n      this.player.setAttribute(\"playsinline\", \"\");\n      this.player.setAttribute(\"webkit-playsinline\", \"\");\n      this.player.setAttribute(\"x5-playsinline\", \"\");\n    }\n  }\n\n  removeListeners() {\n    const {\n      onReady,\n      onPlay,\n      onBuffer,\n      onBufferEnd,\n      onPause,\n      onEnded,\n      onError,\n      onEnablePIP\n    } = this.props;\n    this.player.removeEventListener(\"canplay\", onReady);\n    this.player.removeEventListener(\"play\", onPlay);\n    this.player.removeEventListener(\"waiting\", onBuffer);\n    this.player.removeEventListener(\"playing\", onBufferEnd);\n    this.player.removeEventListener(\"pause\", onPause);\n    this.player.removeEventListener(\"seeked\", this.onSeek);\n    this.player.removeEventListener(\"ended\", onEnded);\n    this.player.removeEventListener(\"error\", onError);\n    this.player.removeEventListener(\"enterpictureinpicture\", onEnablePIP);\n    this.player.removeEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n  }\n\n  shouldUseAudio(props) {\n    if (props.config.file.forceVideo) {\n      return false;\n    }\n\n    if (props.config.file.attributes.poster) {\n      return false; // Use <video> so that poster is shown\n    }\n\n    return AUDIO_EXTENSIONS.test(props.url) || props.config.file.forceAudio;\n  }\n\n  shouldUseHLS(url) {\n    return HLS_EXTENSIONS.test(url) && !IOS || this.props.config.file.forceHLS;\n  }\n\n  shouldUseDASH(url) {\n    return DASH_EXTENSIONS.test(url) || this.props.config.file.forceDASH;\n  }\n\n  load(url) {\n    const {\n      hlsVersion,\n      dashVersion\n    } = this.props.config.file;\n\n    if (this.shouldUseHLS(url)) {\n      getSDK(HLS_SDK_URL.replace(\"VERSION\", hlsVersion), HLS_GLOBAL).then(Hls => {\n        this.hls = new Hls(this.props.config.file.hlsOptions);\n        this.hls.on(Hls.Events.ERROR, (e, data) => {\n          this.props.onError(e, data, this.hls, Hls);\n        });\n        this.hls.loadSource(url);\n        this.hls.attachMedia(this.player);\n      });\n    }\n\n    if (this.shouldUseDASH(url)) {\n      getSDK(DASH_SDK_URL.replace(\"VERSION\", dashVersion), DASH_GLOBAL).then(dashjs => {\n        this.dash = dashjs.MediaPlayer().create();\n        this.dash.initialize(this.player, url, this.props.playing);\n        this.dash.getDebug().setLogToBrowserConsole(false);\n      });\n    }\n\n    if (url instanceof Array) {\n      // When setting new urls (<source>) on an already loaded video,\n      // HTMLMediaElement.load() is needed to reset the media element\n      // and restart the media resource. Just replacing children source\n      // dom nodes is not enough\n      this.player.load();\n    } else if (isMediaStream(url)) {\n      try {\n        this.player.srcObject = url;\n      } catch (e) {\n        this.player.src = window.URL.createObjectURL(url);\n      }\n    }\n  }\n\n  play() {\n    const promise = this.player.play();\n\n    if (promise) {\n      promise.then(success => {\n        console.log(\"FilePlayer -> play -> success\", success);\n      }, err => {\n        console.log(\"FilePlayer -> play -> err\", err); //this.props.onError;\n      }).catch(this.props.onError);\n    }\n  }\n\n  pause() {\n    this.player.pause();\n  }\n\n  stop() {\n    this.player.removeAttribute(\"src\");\n\n    if (this.hls) {\n      this.hls.destroy();\n    }\n\n    if (this.dash) {\n      this.dash.reset();\n    }\n  }\n\n  seekTo(seconds) {\n    this.player.currentTime = seconds;\n  }\n\n  setVolume(fraction) {\n    this.player.volume = fraction;\n  }\n\n  enablePIP() {\n    if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\n      this.player.requestPictureInPicture();\n    }\n  }\n\n  disablePIP() {\n    if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\n      document.exitPictureInPicture();\n    }\n  }\n\n  setPlaybackRate(rate) {\n    this.player.playbackRate = rate;\n  }\n\n  getDuration() {\n    if (!this.player) return null;\n    const {\n      duration,\n      seekable\n    } = this.player; // on iOS, live streams return Infinity for the duration\n    // so instead we use the end of the seekable timerange\n\n    if (duration === Infinity && seekable.length > 0) {\n      return seekable.end(seekable.length - 1);\n    }\n\n    return duration;\n  }\n\n  getCurrentTime() {\n    if (!this.player) return null;\n    return this.player.currentTime;\n  }\n\n  getSecondsLoaded() {\n    if (!this.player) return null;\n    const {\n      buffered\n    } = this.player;\n\n    if (buffered.length === 0) {\n      return 0;\n    }\n\n    const end = buffered.end(buffered.length - 1);\n    const duration = this.getDuration();\n\n    if (end > duration) {\n      return duration;\n    }\n\n    return end;\n  }\n\n  getSource(url) {\n    const useHLS = this.shouldUseHLS(url);\n    const useDASH = this.shouldUseDASH(url);\n\n    if (url instanceof Array || isMediaStream(url) || useHLS || useDASH) {\n      return undefined;\n    }\n\n    if (MATCH_DROPBOX_URL.test(url)) {\n      return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\n    }\n\n    return url;\n  }\n\n  render() {\n    const {\n      url,\n      playing,\n      loop,\n      controls,\n      muted,\n      config,\n      width,\n      height\n    } = this.props;\n    const useAudio = this.shouldUseAudio(this.props);\n    const Element = useAudio ? \"audio\" : \"video\";\n    const style = {\n      width: width === \"auto\" ? width : \"100%\",\n      height: height === \"auto\" ? height : \"100%\"\n    };\n    return __jsx(Element, _extends({\n      ref: this.ref,\n      src: this.getSource(url),\n      style: style,\n      preload: \"auto\",\n      autoPlay: playing || undefined,\n      controls: controls,\n      muted: muted,\n      loop: loop\n    }, config.file.attributes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 7\n      }\n    }), url instanceof Array && url.map(this.renderSourceElement), config.file.tracks.map(this.renderTrack));\n  }\n\n}\n\n_defineProperty(FilePlayer, \"displayName\", \"FilePlayer\");\n\n_defineProperty(FilePlayer, \"canPlay\", canPlay);\n\n_defineProperty(FilePlayer, \"canEnablePIP\", canEnablePIP);\n\nexport default createSinglePlayer(FilePlayer);","map":{"version":3,"sources":["/Users/braflow/loomradio/src/players/FilePlayer.js"],"names":["React","Component","getSDK","isMediaStream","createSinglePlayer","IOS","navigator","test","userAgent","window","MSStream","AUDIO_EXTENSIONS","VIDEO_EXTENSIONS","HLS_EXTENSIONS","HLS_SDK_URL","HLS_GLOBAL","DASH_EXTENSIONS","DASH_SDK_URL","DASH_GLOBAL","MATCH_DROPBOX_URL","canPlay","url","Array","item","src","canEnablePIP","document","pictureInPictureEnabled","FilePlayer","e","onDisablePIP","playing","props","play","onSeek","target","currentTime","player","muted","source","index","track","componentDidMount","addListeners","load","componentWillReceiveProps","nextProps","shouldUseAudio","removeListeners","componentDidUpdate","prevProps","componentWillUnmount","onReady","onPlay","onBuffer","onBufferEnd","onPause","onEnded","onError","playsinline","onEnablePIP","addEventListener","setAttribute","removeEventListener","config","file","forceVideo","attributes","poster","forceAudio","shouldUseHLS","forceHLS","shouldUseDASH","forceDASH","hlsVersion","dashVersion","replace","then","Hls","hls","hlsOptions","on","Events","ERROR","data","loadSource","attachMedia","dashjs","dash","MediaPlayer","create","initialize","getDebug","setLogToBrowserConsole","srcObject","URL","createObjectURL","promise","success","console","log","err","catch","pause","stop","removeAttribute","destroy","reset","seekTo","seconds","setVolume","fraction","volume","enablePIP","requestPictureInPicture","pictureInPictureElement","disablePIP","exitPictureInPicture","setPlaybackRate","rate","playbackRate","getDuration","duration","seekable","Infinity","length","end","getCurrentTime","getSecondsLoaded","buffered","getSource","useHLS","useDASH","undefined","render","loop","controls","width","height","useAudio","Element","style","ref","map","renderSourceElement","tracks","renderTrack"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,UAAtC;AACA,OAAOC,kBAAP,MAA+B,iBAA/B;AAEA,MAAMC,GAAG,GACP,OAAOC,SAAP,KAAqB,WAArB,IACA,mBAAmBC,IAAnB,CAAwBD,SAAS,CAACE,SAAlC,CADA,IAEA,CAACC,MAAM,CAACC,QAHV;AAIA,MAAMC,gBAAgB,GAAG,oEAAzB;AACA,MAAMC,gBAAgB,GAAG,oCAAzB;AACA,MAAMC,cAAc,GAAG,iBAAvB;AACA,MAAMC,WAAW,GACf,kEADF;AAEA,MAAMC,UAAU,GAAG,KAAnB;AACA,MAAMC,eAAe,GAAG,gBAAxB;AACA,MAAMC,YAAY,GAChB,uEADF;AAEA,MAAMC,WAAW,GAAG,QAApB;AACA,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAIA,GAAG,YAAYC,KAAnB,EAA0B;AACxB,SAAK,IAAIC,IAAT,IAAiBF,GAAjB,EAAsB;AACpB,UAAI,OAAOE,IAAP,KAAgB,QAAhB,IAA4BH,OAAO,CAACG,IAAD,CAAvC,EAA+C;AAC7C,eAAO,IAAP;AACD;;AACD,UAAIH,OAAO,CAACG,IAAI,CAACC,GAAN,CAAX,EAAuB;AACrB,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AACD,MAAIrB,aAAa,CAACkB,GAAD,CAAjB,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,SACEV,gBAAgB,CAACJ,IAAjB,CAAsBc,GAAtB,KACAT,gBAAgB,CAACL,IAAjB,CAAsBc,GAAtB,CADA,IAEAR,cAAc,CAACN,IAAf,CAAoBc,GAApB,CAFA,IAGAL,eAAe,CAACT,IAAhB,CAAqBc,GAArB,CAJF;AAMD;;AAED,SAASI,YAAT,CAAsBJ,GAAtB,EAA2B;AACzB,SACED,OAAO,CAACC,GAAD,CAAP,IACA,CAAC,CAACK,QAAQ,CAACC,uBADX,IAEA,CAAChB,gBAAgB,CAACJ,IAAjB,CAAsBc,GAAtB,CAHH;AAKD;;AAED,OAAO,MAAMO,UAAN,SAAyB3B,SAAzB,CAAmC;AAAA;AAAA;;AAAA,0CA0ExB4B,CAAD,IAAO;AACpB,YAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAA4B,KAAKC,KAAvC;AACAF,MAAAA,YAAY,CAACD,CAAD,CAAZ;;AACA,UAAIE,OAAJ,EAAa;AACX,aAAKE,IAAL;AACD;AACF,KAhFuC;;AAAA,oCAiF9BJ,CAAD,IAAO;AACd,WAAKG,KAAL,CAAWE,MAAX,CAAkBL,CAAC,CAACM,MAAF,CAASC,WAA3B;AACD,KAnFuC;;AAAA,kCA6KjC,MAAM;AACX,WAAKC,MAAL,CAAYC,KAAZ,GAAoB,IAApB;AACD,KA/KuC;;AAAA,oCAgL/B,MAAM;AACb,WAAKD,MAAL,CAAYC,KAAZ,GAAoB,KAApB;AACD,KAlLuC;;AAAA,iDA4OlB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACvC,UAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,eAAO;AAAQ,UAAA,GAAG,EAAEC,KAAb;AAAoB,UAAA,GAAG,EAAED,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aAAO;AAAQ,QAAA,GAAG,EAAEC;AAAb,SAAwBD,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAjPuC;;AAAA,yCAkP1B,CAACE,KAAD,EAAQD,KAAR,KAAkB;AAC9B,aAAO;AAAO,QAAA,GAAG,EAAEA;AAAZ,SAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KApPuC;;AAAA,iCAqPjCJ,MAAD,IAAY;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACD,KAvPuC;AAAA;;AAKxCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,YAAL;;AACA,QAAItC,GAAJ,EAAS;AACP,WAAKgC,MAAL,CAAYO,IAAZ;AACD;AACF;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAI,KAAKC,cAAL,CAAoB,KAAKf,KAAzB,MAAoC,KAAKe,cAAL,CAAoBD,SAApB,CAAxC,EAAwE;AACtE,WAAKE,eAAL;AACD;AACF;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKH,cAAL,CAAoB,KAAKf,KAAzB,MAAoC,KAAKe,cAAL,CAAoBG,SAApB,CAAxC,EAAwE;AACtE,WAAKP,YAAL;AACD;AACF;;AACDQ,EAAAA,oBAAoB,GAAG;AACrB,SAAKH,eAAL;AACD;;AACDL,EAAAA,YAAY,GAAG;AACb,UAAM;AACJS,MAAAA,OADI;AAEJC,MAAAA,MAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,WAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA,OANI;AAOJC,MAAAA,OAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA;AATI,QAUF,KAAK5B,KAVT;AAWA,SAAKK,MAAL,CAAYwB,gBAAZ,CAA6B,SAA7B,EAAwCT,OAAxC;AACA,SAAKf,MAAL,CAAYwB,gBAAZ,CAA6B,MAA7B,EAAqCR,MAArC;AACA,SAAKhB,MAAL,CAAYwB,gBAAZ,CAA6B,SAA7B,EAAwCP,QAAxC;AACA,SAAKjB,MAAL,CAAYwB,gBAAZ,CAA6B,SAA7B,EAAwCN,WAAxC;AACA,SAAKlB,MAAL,CAAYwB,gBAAZ,CAA6B,OAA7B,EAAsCL,OAAtC;AACA,SAAKnB,MAAL,CAAYwB,gBAAZ,CAA6B,QAA7B,EAAuC,KAAK3B,MAA5C;AACA,SAAKG,MAAL,CAAYwB,gBAAZ,CAA6B,OAA7B,EAAsCJ,OAAtC;AACA,SAAKpB,MAAL,CAAYwB,gBAAZ,CAA6B,OAA7B,EAAsCH,OAAtC;AACA,SAAKrB,MAAL,CAAYwB,gBAAZ,CAA6B,uBAA7B,EAAsDD,WAAtD;AACA,SAAKvB,MAAL,CAAYwB,gBAAZ,CAA6B,uBAA7B,EAAsD,KAAK/B,YAA3D;;AACA,QAAI6B,WAAJ,EAAiB;AACf,WAAKtB,MAAL,CAAYyB,YAAZ,CAAyB,aAAzB,EAAwC,EAAxC;AACA,WAAKzB,MAAL,CAAYyB,YAAZ,CAAyB,oBAAzB,EAA+C,EAA/C;AACA,WAAKzB,MAAL,CAAYyB,YAAZ,CAAyB,gBAAzB,EAA2C,EAA3C;AACD;AACF;;AACDd,EAAAA,eAAe,GAAG;AAChB,UAAM;AACJI,MAAAA,OADI;AAEJC,MAAAA,MAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,WAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA,OANI;AAOJC,MAAAA,OAPI;AAQJE,MAAAA;AARI,QASF,KAAK5B,KATT;AAUA,SAAKK,MAAL,CAAY0B,mBAAZ,CAAgC,SAAhC,EAA2CX,OAA3C;AACA,SAAKf,MAAL,CAAY0B,mBAAZ,CAAgC,MAAhC,EAAwCV,MAAxC;AACA,SAAKhB,MAAL,CAAY0B,mBAAZ,CAAgC,SAAhC,EAA2CT,QAA3C;AACA,SAAKjB,MAAL,CAAY0B,mBAAZ,CAAgC,SAAhC,EAA2CR,WAA3C;AACA,SAAKlB,MAAL,CAAY0B,mBAAZ,CAAgC,OAAhC,EAAyCP,OAAzC;AACA,SAAKnB,MAAL,CAAY0B,mBAAZ,CAAgC,QAAhC,EAA0C,KAAK7B,MAA/C;AACA,SAAKG,MAAL,CAAY0B,mBAAZ,CAAgC,OAAhC,EAAyCN,OAAzC;AACA,SAAKpB,MAAL,CAAY0B,mBAAZ,CAAgC,OAAhC,EAAyCL,OAAzC;AACA,SAAKrB,MAAL,CAAY0B,mBAAZ,CAAgC,uBAAhC,EAAyDH,WAAzD;AACA,SAAKvB,MAAL,CAAY0B,mBAAZ,CAAgC,uBAAhC,EAAyD,KAAKjC,YAA9D;AACD;;AAWDiB,EAAAA,cAAc,CAACf,KAAD,EAAQ;AACpB,QAAIA,KAAK,CAACgC,MAAN,CAAaC,IAAb,CAAkBC,UAAtB,EAAkC;AAChC,aAAO,KAAP;AACD;;AACD,QAAIlC,KAAK,CAACgC,MAAN,CAAaC,IAAb,CAAkBE,UAAlB,CAA6BC,MAAjC,EAAyC;AACvC,aAAO,KAAP,CADuC,CACzB;AACf;;AACD,WAAOzD,gBAAgB,CAACJ,IAAjB,CAAsByB,KAAK,CAACX,GAA5B,KAAoCW,KAAK,CAACgC,MAAN,CAAaC,IAAb,CAAkBI,UAA7D;AACD;;AACDC,EAAAA,YAAY,CAACjD,GAAD,EAAM;AAChB,WACGR,cAAc,CAACN,IAAf,CAAoBc,GAApB,KAA4B,CAAChB,GAA9B,IAAsC,KAAK2B,KAAL,CAAWgC,MAAX,CAAkBC,IAAlB,CAAuBM,QAD/D;AAGD;;AACDC,EAAAA,aAAa,CAACnD,GAAD,EAAM;AACjB,WAAOL,eAAe,CAACT,IAAhB,CAAqBc,GAArB,KAA6B,KAAKW,KAAL,CAAWgC,MAAX,CAAkBC,IAAlB,CAAuBQ,SAA3D;AACD;;AACD7B,EAAAA,IAAI,CAACvB,GAAD,EAAM;AACR,UAAM;AAAEqD,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA8B,KAAK3C,KAAL,CAAWgC,MAAX,CAAkBC,IAAtD;;AACA,QAAI,KAAKK,YAAL,CAAkBjD,GAAlB,CAAJ,EAA4B;AAC1BnB,MAAAA,MAAM,CAACY,WAAW,CAAC8D,OAAZ,CAAoB,SAApB,EAA+BF,UAA/B,CAAD,EAA6C3D,UAA7C,CAAN,CAA+D8D,IAA/D,CACGC,GAAD,IAAS;AACP,aAAKC,GAAL,GAAW,IAAID,GAAJ,CAAQ,KAAK9C,KAAL,CAAWgC,MAAX,CAAkBC,IAAlB,CAAuBe,UAA/B,CAAX;AACA,aAAKD,GAAL,CAASE,EAAT,CAAYH,GAAG,CAACI,MAAJ,CAAWC,KAAvB,EAA8B,CAACtD,CAAD,EAAIuD,IAAJ,KAAa;AACzC,eAAKpD,KAAL,CAAW0B,OAAX,CAAmB7B,CAAnB,EAAsBuD,IAAtB,EAA4B,KAAKL,GAAjC,EAAsCD,GAAtC;AACD,SAFD;AAGA,aAAKC,GAAL,CAASM,UAAT,CAAoBhE,GAApB;AACA,aAAK0D,GAAL,CAASO,WAAT,CAAqB,KAAKjD,MAA1B;AACD,OARH;AAUD;;AACD,QAAI,KAAKmC,aAAL,CAAmBnD,GAAnB,CAAJ,EAA6B;AAC3BnB,MAAAA,MAAM,CAACe,YAAY,CAAC2D,OAAb,CAAqB,SAArB,EAAgCD,WAAhC,CAAD,EAA+CzD,WAA/C,CAAN,CAAkE2D,IAAlE,CACGU,MAAD,IAAY;AACV,aAAKC,IAAL,GAAYD,MAAM,CAACE,WAAP,GAAqBC,MAArB,EAAZ;AACA,aAAKF,IAAL,CAAUG,UAAV,CAAqB,KAAKtD,MAA1B,EAAkChB,GAAlC,EAAuC,KAAKW,KAAL,CAAWD,OAAlD;AACA,aAAKyD,IAAL,CAAUI,QAAV,GAAqBC,sBAArB,CAA4C,KAA5C;AACD,OALH;AAOD;;AAED,QAAIxE,GAAG,YAAYC,KAAnB,EAA0B;AACxB;AACA;AACA;AACA;AACA,WAAKe,MAAL,CAAYO,IAAZ;AACD,KAND,MAMO,IAAIzC,aAAa,CAACkB,GAAD,CAAjB,EAAwB;AAC7B,UAAI;AACF,aAAKgB,MAAL,CAAYyD,SAAZ,GAAwBzE,GAAxB;AACD,OAFD,CAEE,OAAOQ,CAAP,EAAU;AACV,aAAKQ,MAAL,CAAYb,GAAZ,GAAkBf,MAAM,CAACsF,GAAP,CAAWC,eAAX,CAA2B3E,GAA3B,CAAlB;AACD;AACF;AACF;;AACDY,EAAAA,IAAI,GAAG;AACL,UAAMgE,OAAO,GAAG,KAAK5D,MAAL,CAAYJ,IAAZ,EAAhB;;AACA,QAAIgE,OAAJ,EAAa;AACXA,MAAAA,OAAO,CACJpB,IADH,CAEKqB,OAAD,IAAa;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,OAA7C;AACD,OAJL,EAKKG,GAAD,IAAS;AACPF,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCC,GAAzC,EADO,CAEP;AACD,OARL,EAUGC,KAVH,CAUS,KAAKtE,KAAL,CAAW0B,OAVpB;AAWD;AACF;;AACD6C,EAAAA,KAAK,GAAG;AACN,SAAKlE,MAAL,CAAYkE,KAAZ;AACD;;AACDC,EAAAA,IAAI,GAAG;AACL,SAAKnE,MAAL,CAAYoE,eAAZ,CAA4B,KAA5B;;AACA,QAAI,KAAK1B,GAAT,EAAc;AACZ,WAAKA,GAAL,CAAS2B,OAAT;AACD;;AACD,QAAI,KAAKlB,IAAT,EAAe;AACb,WAAKA,IAAL,CAAUmB,KAAV;AACD;AACF;;AACDC,EAAAA,MAAM,CAACC,OAAD,EAAU;AACd,SAAKxE,MAAL,CAAYD,WAAZ,GAA0ByE,OAA1B;AACD;;AACDC,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,SAAK1E,MAAL,CAAY2E,MAAZ,GAAqBD,QAArB;AACD;;AAODE,EAAAA,SAAS,GAAG;AACV,QACE,KAAK5E,MAAL,CAAY6E,uBAAZ,IACAxF,QAAQ,CAACyF,uBAAT,KAAqC,KAAK9E,MAF5C,EAGE;AACA,WAAKA,MAAL,CAAY6E,uBAAZ;AACD;AACF;;AACDE,EAAAA,UAAU,GAAG;AACX,QACE1F,QAAQ,CAAC2F,oBAAT,IACA3F,QAAQ,CAACyF,uBAAT,KAAqC,KAAK9E,MAF5C,EAGE;AACAX,MAAAA,QAAQ,CAAC2F,oBAAT;AACD;AACF;;AACDC,EAAAA,eAAe,CAACC,IAAD,EAAO;AACpB,SAAKlF,MAAL,CAAYmF,YAAZ,GAA2BD,IAA3B;AACD;;AACDE,EAAAA,WAAW,GAAG;AACZ,QAAI,CAAC,KAAKpF,MAAV,EAAkB,OAAO,IAAP;AAClB,UAAM;AAAEqF,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyB,KAAKtF,MAApC,CAFY,CAGZ;AACA;;AACA,QAAIqF,QAAQ,KAAKE,QAAb,IAAyBD,QAAQ,CAACE,MAAT,GAAkB,CAA/C,EAAkD;AAChD,aAAOF,QAAQ,CAACG,GAAT,CAAaH,QAAQ,CAACE,MAAT,GAAkB,CAA/B,CAAP;AACD;;AACD,WAAOH,QAAP;AACD;;AACDK,EAAAA,cAAc,GAAG;AACf,QAAI,CAAC,KAAK1F,MAAV,EAAkB,OAAO,IAAP;AAClB,WAAO,KAAKA,MAAL,CAAYD,WAAnB;AACD;;AACD4F,EAAAA,gBAAgB,GAAG;AACjB,QAAI,CAAC,KAAK3F,MAAV,EAAkB,OAAO,IAAP;AAClB,UAAM;AAAE4F,MAAAA;AAAF,QAAe,KAAK5F,MAA1B;;AACA,QAAI4F,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzB,aAAO,CAAP;AACD;;AACD,UAAMC,GAAG,GAAGG,QAAQ,CAACH,GAAT,CAAaG,QAAQ,CAACJ,MAAT,GAAkB,CAA/B,CAAZ;AACA,UAAMH,QAAQ,GAAG,KAAKD,WAAL,EAAjB;;AACA,QAAIK,GAAG,GAAGJ,QAAV,EAAoB;AAClB,aAAOA,QAAP;AACD;;AACD,WAAOI,GAAP;AACD;;AACDI,EAAAA,SAAS,CAAC7G,GAAD,EAAM;AACb,UAAM8G,MAAM,GAAG,KAAK7D,YAAL,CAAkBjD,GAAlB,CAAf;AACA,UAAM+G,OAAO,GAAG,KAAK5D,aAAL,CAAmBnD,GAAnB,CAAhB;;AACA,QAAIA,GAAG,YAAYC,KAAf,IAAwBnB,aAAa,CAACkB,GAAD,CAArC,IAA8C8G,MAA9C,IAAwDC,OAA5D,EAAqE;AACnE,aAAOC,SAAP;AACD;;AACD,QAAIlH,iBAAiB,CAACZ,IAAlB,CAAuBc,GAAvB,CAAJ,EAAiC;AAC/B,aAAOA,GAAG,CAACuD,OAAJ,CAAY,iBAAZ,EAA+B,2BAA/B,CAAP;AACD;;AACD,WAAOvD,GAAP;AACD;;AAaDiH,EAAAA,MAAM,GAAG;AACP,UAAM;AACJjH,MAAAA,GADI;AAEJU,MAAAA,OAFI;AAGJwG,MAAAA,IAHI;AAIJC,MAAAA,QAJI;AAKJlG,MAAAA,KALI;AAMJ0B,MAAAA,MANI;AAOJyE,MAAAA,KAPI;AAQJC,MAAAA;AARI,QASF,KAAK1G,KATT;AAUA,UAAM2G,QAAQ,GAAG,KAAK5F,cAAL,CAAoB,KAAKf,KAAzB,CAAjB;AACA,UAAM4G,OAAO,GAAGD,QAAQ,GAAG,OAAH,GAAa,OAArC;AACA,UAAME,KAAK,GAAG;AACZJ,MAAAA,KAAK,EAAEA,KAAK,KAAK,MAAV,GAAmBA,KAAnB,GAA2B,MADtB;AAEZC,MAAAA,MAAM,EAAEA,MAAM,KAAK,MAAX,GAAoBA,MAApB,GAA6B;AAFzB,KAAd;AAIA,WACE,MAAC,OAAD;AACE,MAAA,GAAG,EAAE,KAAKI,GADZ;AAEE,MAAA,GAAG,EAAE,KAAKZ,SAAL,CAAe7G,GAAf,CAFP;AAGE,MAAA,KAAK,EAAEwH,KAHT;AAIE,MAAA,OAAO,EAAC,MAJV;AAKE,MAAA,QAAQ,EAAE9G,OAAO,IAAIsG,SALvB;AAME,MAAA,QAAQ,EAAEG,QANZ;AAOE,MAAA,KAAK,EAAElG,KAPT;AAQE,MAAA,IAAI,EAAEiG;AARR,OASMvE,MAAM,CAACC,IAAP,CAAYE,UATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWG9C,GAAG,YAAYC,KAAf,IAAwBD,GAAG,CAAC0H,GAAJ,CAAQ,KAAKC,mBAAb,CAX3B,EAYGhF,MAAM,CAACC,IAAP,CAAYgF,MAAZ,CAAmBF,GAAnB,CAAuB,KAAKG,WAA5B,CAZH,CADF;AAgBD;;AAzRuC;;gBAA7BtH,U,iBACU,Y;;gBADVA,U,aAEMR,O;;gBAFNQ,U,kBAGWH,Y;;AAyRxB,eAAerB,kBAAkB,CAACwB,UAAD,CAAjC","sourcesContent":["import React, { Component } from \"react\";\n\nimport { getSDK, isMediaStream } from \"../utils\";\nimport createSinglePlayer from \"../singlePlayer\";\n\nconst IOS =\n  typeof navigator !== \"undefined\" &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream;\nconst AUDIO_EXTENSIONS = /\\.(m4a|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\\?)/i;\nconst VIDEO_EXTENSIONS = /\\.(mp4|og[gv]|webm|mov|m4v)($|\\?)/i;\nconst HLS_EXTENSIONS = /\\.(m3u8)($|\\?)/i;\nconst HLS_SDK_URL =\n  \"https://cdnjs.cloudflare.com/ajax/libs/hls.js/VERSION/hls.min.js\";\nconst HLS_GLOBAL = \"Hls\";\nconst DASH_EXTENSIONS = /\\.(mpd)($|\\?)/i;\nconst DASH_SDK_URL =\n  \"https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js\";\nconst DASH_GLOBAL = \"dashjs\";\nconst MATCH_DROPBOX_URL = /www\\.dropbox\\.com\\/.+/;\n\nfunction canPlay(url) {\n  if (url instanceof Array) {\n    for (let item of url) {\n      if (typeof item === \"string\" && canPlay(item)) {\n        return true;\n      }\n      if (canPlay(item.src)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (isMediaStream(url)) {\n    return true;\n  }\n  return (\n    AUDIO_EXTENSIONS.test(url) ||\n    VIDEO_EXTENSIONS.test(url) ||\n    HLS_EXTENSIONS.test(url) ||\n    DASH_EXTENSIONS.test(url)\n  );\n}\n\nfunction canEnablePIP(url) {\n  return (\n    canPlay(url) &&\n    !!document.pictureInPictureEnabled &&\n    !AUDIO_EXTENSIONS.test(url)\n  );\n}\n\nexport class FilePlayer extends Component {\n  static displayName = \"FilePlayer\";\n  static canPlay = canPlay;\n  static canEnablePIP = canEnablePIP;\n\n  componentDidMount() {\n    this.addListeners();\n    if (IOS) {\n      this.player.load();\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(nextProps)) {\n      this.removeListeners();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {\n      this.addListeners();\n    }\n  }\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n  addListeners() {\n    const {\n      onReady,\n      onPlay,\n      onBuffer,\n      onBufferEnd,\n      onPause,\n      onEnded,\n      onError,\n      playsinline,\n      onEnablePIP,\n    } = this.props;\n    this.player.addEventListener(\"canplay\", onReady);\n    this.player.addEventListener(\"play\", onPlay);\n    this.player.addEventListener(\"waiting\", onBuffer);\n    this.player.addEventListener(\"playing\", onBufferEnd);\n    this.player.addEventListener(\"pause\", onPause);\n    this.player.addEventListener(\"seeked\", this.onSeek);\n    this.player.addEventListener(\"ended\", onEnded);\n    this.player.addEventListener(\"error\", onError);\n    this.player.addEventListener(\"enterpictureinpicture\", onEnablePIP);\n    this.player.addEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n    if (playsinline) {\n      this.player.setAttribute(\"playsinline\", \"\");\n      this.player.setAttribute(\"webkit-playsinline\", \"\");\n      this.player.setAttribute(\"x5-playsinline\", \"\");\n    }\n  }\n  removeListeners() {\n    const {\n      onReady,\n      onPlay,\n      onBuffer,\n      onBufferEnd,\n      onPause,\n      onEnded,\n      onError,\n      onEnablePIP,\n    } = this.props;\n    this.player.removeEventListener(\"canplay\", onReady);\n    this.player.removeEventListener(\"play\", onPlay);\n    this.player.removeEventListener(\"waiting\", onBuffer);\n    this.player.removeEventListener(\"playing\", onBufferEnd);\n    this.player.removeEventListener(\"pause\", onPause);\n    this.player.removeEventListener(\"seeked\", this.onSeek);\n    this.player.removeEventListener(\"ended\", onEnded);\n    this.player.removeEventListener(\"error\", onError);\n    this.player.removeEventListener(\"enterpictureinpicture\", onEnablePIP);\n    this.player.removeEventListener(\"leavepictureinpicture\", this.onDisablePIP);\n  }\n  onDisablePIP = (e) => {\n    const { onDisablePIP, playing } = this.props;\n    onDisablePIP(e);\n    if (playing) {\n      this.play();\n    }\n  };\n  onSeek = (e) => {\n    this.props.onSeek(e.target.currentTime);\n  };\n  shouldUseAudio(props) {\n    if (props.config.file.forceVideo) {\n      return false;\n    }\n    if (props.config.file.attributes.poster) {\n      return false; // Use <video> so that poster is shown\n    }\n    return AUDIO_EXTENSIONS.test(props.url) || props.config.file.forceAudio;\n  }\n  shouldUseHLS(url) {\n    return (\n      (HLS_EXTENSIONS.test(url) && !IOS) || this.props.config.file.forceHLS\n    );\n  }\n  shouldUseDASH(url) {\n    return DASH_EXTENSIONS.test(url) || this.props.config.file.forceDASH;\n  }\n  load(url) {\n    const { hlsVersion, dashVersion } = this.props.config.file;\n    if (this.shouldUseHLS(url)) {\n      getSDK(HLS_SDK_URL.replace(\"VERSION\", hlsVersion), HLS_GLOBAL).then(\n        (Hls) => {\n          this.hls = new Hls(this.props.config.file.hlsOptions);\n          this.hls.on(Hls.Events.ERROR, (e, data) => {\n            this.props.onError(e, data, this.hls, Hls);\n          });\n          this.hls.loadSource(url);\n          this.hls.attachMedia(this.player);\n        }\n      );\n    }\n    if (this.shouldUseDASH(url)) {\n      getSDK(DASH_SDK_URL.replace(\"VERSION\", dashVersion), DASH_GLOBAL).then(\n        (dashjs) => {\n          this.dash = dashjs.MediaPlayer().create();\n          this.dash.initialize(this.player, url, this.props.playing);\n          this.dash.getDebug().setLogToBrowserConsole(false);\n        }\n      );\n    }\n\n    if (url instanceof Array) {\n      // When setting new urls (<source>) on an already loaded video,\n      // HTMLMediaElement.load() is needed to reset the media element\n      // and restart the media resource. Just replacing children source\n      // dom nodes is not enough\n      this.player.load();\n    } else if (isMediaStream(url)) {\n      try {\n        this.player.srcObject = url;\n      } catch (e) {\n        this.player.src = window.URL.createObjectURL(url);\n      }\n    }\n  }\n  play() {\n    const promise = this.player.play();\n    if (promise) {\n      promise\n        .then(\n          (success) => {\n            console.log(\"FilePlayer -> play -> success\", success);\n          },\n          (err) => {\n            console.log(\"FilePlayer -> play -> err\", err);\n            //this.props.onError;\n          }\n        )\n        .catch(this.props.onError);\n    }\n  }\n  pause() {\n    this.player.pause();\n  }\n  stop() {\n    this.player.removeAttribute(\"src\");\n    if (this.hls) {\n      this.hls.destroy();\n    }\n    if (this.dash) {\n      this.dash.reset();\n    }\n  }\n  seekTo(seconds) {\n    this.player.currentTime = seconds;\n  }\n  setVolume(fraction) {\n    this.player.volume = fraction;\n  }\n  mute = () => {\n    this.player.muted = true;\n  };\n  unmute = () => {\n    this.player.muted = false;\n  };\n  enablePIP() {\n    if (\n      this.player.requestPictureInPicture &&\n      document.pictureInPictureElement !== this.player\n    ) {\n      this.player.requestPictureInPicture();\n    }\n  }\n  disablePIP() {\n    if (\n      document.exitPictureInPicture &&\n      document.pictureInPictureElement === this.player\n    ) {\n      document.exitPictureInPicture();\n    }\n  }\n  setPlaybackRate(rate) {\n    this.player.playbackRate = rate;\n  }\n  getDuration() {\n    if (!this.player) return null;\n    const { duration, seekable } = this.player;\n    // on iOS, live streams return Infinity for the duration\n    // so instead we use the end of the seekable timerange\n    if (duration === Infinity && seekable.length > 0) {\n      return seekable.end(seekable.length - 1);\n    }\n    return duration;\n  }\n  getCurrentTime() {\n    if (!this.player) return null;\n    return this.player.currentTime;\n  }\n  getSecondsLoaded() {\n    if (!this.player) return null;\n    const { buffered } = this.player;\n    if (buffered.length === 0) {\n      return 0;\n    }\n    const end = buffered.end(buffered.length - 1);\n    const duration = this.getDuration();\n    if (end > duration) {\n      return duration;\n    }\n    return end;\n  }\n  getSource(url) {\n    const useHLS = this.shouldUseHLS(url);\n    const useDASH = this.shouldUseDASH(url);\n    if (url instanceof Array || isMediaStream(url) || useHLS || useDASH) {\n      return undefined;\n    }\n    if (MATCH_DROPBOX_URL.test(url)) {\n      return url.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\");\n    }\n    return url;\n  }\n  renderSourceElement = (source, index) => {\n    if (typeof source === \"string\") {\n      return <source key={index} src={source} />;\n    }\n    return <source key={index} {...source} />;\n  };\n  renderTrack = (track, index) => {\n    return <track key={index} {...track} />;\n  };\n  ref = (player) => {\n    this.player = player;\n  };\n  render() {\n    const {\n      url,\n      playing,\n      loop,\n      controls,\n      muted,\n      config,\n      width,\n      height,\n    } = this.props;\n    const useAudio = this.shouldUseAudio(this.props);\n    const Element = useAudio ? \"audio\" : \"video\";\n    const style = {\n      width: width === \"auto\" ? width : \"100%\",\n      height: height === \"auto\" ? height : \"100%\",\n    };\n    return (\n      <Element\n        ref={this.ref}\n        src={this.getSource(url)}\n        style={style}\n        preload=\"auto\"\n        autoPlay={playing || undefined}\n        controls={controls}\n        muted={muted}\n        loop={loop}\n        {...config.file.attributes}\n      >\n        {url instanceof Array && url.map(this.renderSourceElement)}\n        {config.file.tracks.map(this.renderTrack)}\n      </Element>\n    );\n  }\n}\n\nexport default createSinglePlayer(FilePlayer);\n"]},"metadata":{},"sourceType":"module"}