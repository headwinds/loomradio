{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/braflow/loomradio/src/players/Mixcloud.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { callPlayer, getSDK, queryString } from '../utils';\nimport createSinglePlayer from '../singlePlayer';\nvar SDK_URL = '//widget.mixcloud.com/media/js/widgetApi.js';\nvar SDK_GLOBAL = 'Mixcloud';\nvar MATCH_URL = /mixcloud\\.com\\/([^/]+\\/[^/]+)/;\nexport var Mixcloud = /*#__PURE__*/function (_Component) {\n  _inherits(Mixcloud, _Component);\n\n  var _super = _createSuper(Mixcloud);\n\n  function Mixcloud() {\n    var _this;\n\n    _classCallCheck(this, Mixcloud);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"callPlayer\", callPlayer);\n\n    _defineProperty(_assertThisInitialized(_this), \"duration\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentTime\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"secondsLoaded\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"mute\", function () {// No volume support\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unmute\", function () {// No volume support\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", function (iframe) {\n      _this.iframe = iframe;\n    });\n\n    return _this;\n  }\n\n  _createClass(Mixcloud, [{\n    key: \"load\",\n    value: function load(url) {\n      var _this2 = this;\n\n      getSDK(SDK_URL, SDK_GLOBAL).then(function (Mixcloud) {\n        _this2.player = Mixcloud.PlayerWidget(_this2.iframe);\n\n        _this2.player.ready.then(function () {\n          _this2.player.events.play.on(_this2.props.onPlay);\n\n          _this2.player.events.pause.on(_this2.props.onPause);\n\n          _this2.player.events.ended.on(_this2.props.onEnded);\n\n          _this2.player.events.error.on(_this2.props.error);\n\n          _this2.player.events.progress.on(function (seconds, duration) {\n            _this2.currentTime = seconds;\n            _this2.duration = duration;\n          });\n\n          _this2.props.onReady();\n        });\n      }, this.props.onError);\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.callPlayer('play');\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.callPlayer('pause');\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {// Nothing to do\n    }\n  }, {\n    key: \"seekTo\",\n    value: function seekTo(seconds) {\n      this.callPlayer('seek', seconds);\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(fraction) {// No volume support\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.duration;\n    }\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.currentTime;\n    }\n  }, {\n    key: \"getSecondsLoaded\",\n    value: function getSecondsLoaded() {\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          url = _this$props.url,\n          config = _this$props.config;\n      var id = url.match(MATCH_URL)[1];\n      var style = {\n        width: '100%',\n        height: '100%'\n      };\n      var query = queryString(_objectSpread(_objectSpread({}, config.mixcloud.options), {}, {\n        feed: \"/\".concat(id, \"/\")\n      })); // We have to give the iframe a key here to prevent a\n      // weird dialog appearing when loading a new track\n\n      return __jsx(\"iframe\", {\n        key: id,\n        ref: this.ref,\n        style: style,\n        src: \"https://www.mixcloud.com/widget/iframe/?\".concat(query),\n        frameBorder: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Mixcloud;\n}(Component);\n\n_defineProperty(Mixcloud, \"displayName\", 'Mixcloud');\n\n_defineProperty(Mixcloud, \"canPlay\", function (url) {\n  return MATCH_URL.test(url);\n});\n\n_defineProperty(Mixcloud, \"loopOnEnded\", true);\n\nexport default _c = createSinglePlayer(Mixcloud);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/braflow/loomradio/src/players/Mixcloud.js"],"names":["React","Component","callPlayer","getSDK","queryString","createSinglePlayer","SDK_URL","SDK_GLOBAL","MATCH_URL","Mixcloud","iframe","url","then","player","PlayerWidget","ready","events","play","on","props","onPlay","pause","onPause","ended","onEnded","error","progress","seconds","duration","currentTime","onReady","onError","fraction","config","id","match","style","width","height","query","mixcloud","options","feed","ref","test"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK, queryString } from '../utils'\nimport createSinglePlayer from '../singlePlayer'\n\nconst SDK_URL = '//widget.mixcloud.com/media/js/widgetApi.js'\nconst SDK_GLOBAL = 'Mixcloud'\nconst MATCH_URL = /mixcloud\\.com\\/([^/]+\\/[^/]+)/\n\nexport class Mixcloud extends Component {\n  static displayName = 'Mixcloud'\n  static canPlay = url => MATCH_URL.test(url)\n  static loopOnEnded = true\n\n  callPlayer = callPlayer\n  duration = null\n  currentTime = null\n  secondsLoaded = null\n  load (url) {\n    getSDK(SDK_URL, SDK_GLOBAL).then(Mixcloud => {\n      this.player = Mixcloud.PlayerWidget(this.iframe)\n      this.player.ready.then(() => {\n        this.player.events.play.on(this.props.onPlay)\n        this.player.events.pause.on(this.props.onPause)\n        this.player.events.ended.on(this.props.onEnded)\n        this.player.events.error.on(this.props.error)\n        this.player.events.progress.on((seconds, duration) => {\n          this.currentTime = seconds\n          this.duration = duration\n        })\n        this.props.onReady()\n      })\n    }, this.props.onError)\n  }\n  play () {\n    this.callPlayer('play')\n  }\n  pause () {\n    this.callPlayer('pause')\n  }\n  stop () {\n    // Nothing to do\n  }\n  seekTo (seconds) {\n    this.callPlayer('seek', seconds)\n  }\n  setVolume (fraction) {\n    // No volume support\n  }\n  mute = () => {\n    // No volume support\n  }\n  unmute = () => {\n    // No volume support\n  }\n  getDuration () {\n    return this.duration\n  }\n  getCurrentTime () {\n    return this.currentTime\n  }\n  getSecondsLoaded () {\n    return null\n  }\n  ref = iframe => {\n    this.iframe = iframe\n  }\n  render () {\n    const { url, config } = this.props\n    const id = url.match(MATCH_URL)[1]\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n    const query = queryString({\n      ...config.mixcloud.options,\n      feed: `/${id}/`\n    })\n    // We have to give the iframe a key here to prevent a\n    // weird dialog appearing when loading a new track\n    return (\n      <iframe\n        key={id}\n        ref={this.ref}\n        style={style}\n        src={`https://www.mixcloud.com/widget/iframe/?${query}`}\n        frameBorder='0'\n      />\n    )\n  }\n}\n\nexport default createSinglePlayer(Mixcloud)\n"]},"metadata":{},"sourceType":"module"}