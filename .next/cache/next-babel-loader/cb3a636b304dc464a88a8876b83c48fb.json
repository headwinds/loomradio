{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/channel/DanceFloor.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { //Logo,\nColumn //CheckboxLabel,\n//RadioGroup,\n//Button,\n//Row,\n//SubHeadline,\n//Headline,\n, Paragraph //Wolf\n} from \"cross-country\";\nimport Dancer from \"./Dancer\";\nimport Pusher from \"pusher-js\"; // Enable pusher logging - don't include this in production\n\nPusher.logToConsole = true;\nvar pusher = new Pusher(\"af0cc5fe0ac96ae0af44\", {\n  cluster: \"us2\",\n  forceTLS: true\n});\nconst vipList = [{\n  id: 0,\n  name: \"Brando\"\n}];\nexport default function DanceFloor() {\n  const channel = pusher.subscribe(\"nationalpark\");\n  channel.bind(\"new-dancer\", function (data) {\n    //alert(JSON.stringify(data));\n    const dancers = JSON.stringify(data);\n    console.log(\"Channel data: \", data);\n    console.log(\"Channel dancers: \", dancers);\n  });\n\n  const handleClick = e => {\n    console.log(\"handleClick -> e\", e); //e.preventDefault();\n\n    const name = `brando ${new Date().toString()}`;\n    const dancer = {\n      name,\n      height: '6.2',\n      weight: '175',\n      gender: 'male',\n      musicLikes: 'house, techno, drumandbass, classical, punk, folk'\n    };\n    channel.trigger(\"client-new-dancer\", {\n      dancer\n    });\n  };\n\n  const dancers = vipList.map(vip => __jsx(\"div\", {\n    key: vip.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(Dancer, {\n    vip: vip,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })));\n  return __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }, dancers);\n}","map":{"version":3,"sources":["/Users/braflow/loomradio/src/channel/DanceFloor.js"],"names":["React","Column","Paragraph","Dancer","Pusher","logToConsole","pusher","cluster","forceTLS","vipList","id","name","DanceFloor","channel","subscribe","bind","data","dancers","JSON","stringify","console","log","handleClick","e","Date","toString","dancer","height","weight","gender","musicLikes","trigger","map","vip"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACE;AACAC,MAFF,CAGE;AACA;AACA;AACA;AACA;AACA;AARF,EASEC,SATF,CAUE;AAVF,OAWO,eAXP;AAYA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACAA,MAAM,CAACC,YAAP,GAAsB,IAAtB;AAEA,IAAIC,MAAM,GAAG,IAAIF,MAAJ,CAAW,sBAAX,EAAmC;AAC9CG,EAAAA,OAAO,EAAE,KADqC;AAE9CC,EAAAA,QAAQ,EAAE;AAFoC,CAAnC,CAAb;AAKA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAAD,CAAhB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAEnC,QAAMC,OAAO,GAAGP,MAAM,CAACQ,SAAP,CAAiB,cAAjB,CAAhB;AAEAD,EAAAA,OAAO,CAACE,IAAR,CAAa,YAAb,EAA2B,UAASC,IAAT,EAAe;AACxC;AACA,UAAMC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAhB;AACCI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,IAA9B;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,OAAjC;AACD,GALD;;AAOA,QAAMK,WAAW,GAAIC,CAAD,IAAO;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,CAAhC,EADyB,CAEzB;;AACA,UAAMZ,IAAI,GAAI,UAAS,IAAIa,IAAJ,GAAWC,QAAX,EAAsB,EAA7C;AAEA,UAAMC,MAAM,GAAG;AACPf,MAAAA,IADO;AAEPgB,MAAAA,MAAM,EAAE,KAFD;AAGPC,MAAAA,MAAM,EAAE,KAHD;AAIPC,MAAAA,MAAM,EAAE,MAJD;AAKPC,MAAAA,UAAU,EAAE;AALL,KAAf;AAQAjB,IAAAA,OAAO,CAACkB,OAAR,CAAgB,mBAAhB,EAAqC;AAAEL,MAAAA;AAAF,KAArC;AACD,GAdD;;AAgBA,QAAMT,OAAO,GAAGR,OAAO,CAACuB,GAAR,CAAYC,GAAG,IAC7B;AAAK,IAAA,GAAG,EAAEA,GAAG,CAACvB,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEuB,GAAb;AAAkB,IAAA,WAAW,EAAEX,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADc,CAAhB;AAMA,SAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASL,OAAT,CAAP;AACD","sourcesContent":["import React from \"react\";\nimport {\n  //Logo,\n  Column,\n  //CheckboxLabel,\n  //RadioGroup,\n  //Button,\n  //Row,\n  //SubHeadline,\n  //Headline,\n  Paragraph\n  //Wolf\n} from \"cross-country\";\nimport Dancer from \"./Dancer\";\nimport Pusher from \"pusher-js\";\n\n// Enable pusher logging - don't include this in production\nPusher.logToConsole = true;\n\nvar pusher = new Pusher(\"af0cc5fe0ac96ae0af44\", {\n  cluster: \"us2\",\n  forceTLS: true\n});\n\nconst vipList = [{ id: 0, name: \"Brando\" }];\n\nexport default function DanceFloor() {\n\n  const channel = pusher.subscribe(\"nationalpark\");\n\n  channel.bind(\"new-dancer\", function(data) {\n    //alert(JSON.stringify(data));\n    const dancers = JSON.stringify(data);\n     console.log(\"Channel data: \", data);\n    console.log(\"Channel dancers: \", dancers);\n  });\n\n  const handleClick = (e) => {\n    console.log(\"handleClick -> e\", e)\n    //e.preventDefault();\n    const name = `brando ${new Date().toString()}`;\n\n    const dancer = {\n            name,\n            height: '6.2',\n            weight: '175',\n            gender: 'male',\n            musicLikes: 'house, techno, drumandbass, classical, punk, folk',\n        }\n\n    channel.trigger(\"client-new-dancer\", { dancer });\n  };\n\n  const dancers = vipList.map(vip => (\n    <div key={vip.id}>\n      <Dancer vip={vip} handleClick={handleClick} />\n    </div>\n  ));\n\n  return <Column>{dancers}</Column>;\n}\n"]},"metadata":{},"sourceType":"module"}