{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/players/Wistia.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { callPlayer, getSDK } from '../utils';\nimport createSinglePlayer from '../singlePlayer';\nconst SDK_URL = '//fast.wistia.com/assets/external/E-v1.js';\nconst SDK_GLOBAL = 'Wistia';\nconst MATCH_URL = /(?:wistia\\.com|wi\\.st)\\/(?:medias|embed)\\/(.*)$/;\nexport class Wistia extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"callPlayer\", callPlayer);\n\n    _defineProperty(this, \"mute\", () => {\n      this.callPlayer('mute');\n    });\n\n    _defineProperty(this, \"unmute\", () => {\n      this.callPlayer('unmute');\n    });\n  }\n\n  getID(url) {\n    return url && url.match(MATCH_URL)[1];\n  }\n\n  load(url) {\n    const {\n      playing,\n      muted,\n      controls,\n      onReady,\n      onPlay,\n      onPause,\n      onSeek,\n      onEnded,\n      config,\n      onError\n    } = this.props;\n    getSDK(SDK_URL, SDK_GLOBAL).then(() => {\n      window._wq = window._wq || [];\n\n      window._wq.push({\n        id: this.getID(url),\n        options: _objectSpread({\n          autoPlay: playing,\n          silentAutoPlay: 'allow',\n          muted: muted,\n          controlsVisibleOnLoad: controls\n        }, config.wistia.options),\n        onReady: player => {\n          this.player = player;\n          this.unbind();\n          this.player.bind('play', onPlay);\n          this.player.bind('pause', onPause);\n          this.player.bind('seek', onSeek);\n          this.player.bind('end', onEnded);\n          onReady();\n        }\n      });\n    }, onError);\n  }\n\n  play() {\n    this.callPlayer('play');\n  }\n\n  pause() {\n    this.callPlayer('pause');\n  }\n\n  unbind() {\n    const {\n      onPlay,\n      onPause,\n      onSeek,\n      onEnded\n    } = this.props;\n    this.player.unbind('play', onPlay);\n    this.player.unbind('pause', onPause);\n    this.player.unbind('seek', onSeek);\n    this.player.unbind('end', onEnded);\n  }\n\n  stop() {\n    this.unbind();\n    this.callPlayer('remove');\n  }\n\n  seekTo(seconds) {\n    this.callPlayer('time', seconds);\n  }\n\n  setVolume(fraction) {\n    this.callPlayer('volume', fraction);\n  }\n\n  setPlaybackRate(rate) {\n    this.callPlayer('playbackRate', rate);\n  }\n\n  getDuration() {\n    return this.callPlayer('duration');\n  }\n\n  getCurrentTime() {\n    return this.callPlayer('time');\n  }\n\n  getSecondsLoaded() {\n    return null;\n  }\n\n  render() {\n    const id = this.getID(this.props.url);\n    const className = `wistia_embed wistia_async_${id}`;\n    const style = {\n      width: '100%',\n      height: '100%'\n    };\n    return __jsx(\"div\", {\n      key: id,\n      className: className,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\n_defineProperty(Wistia, \"displayName\", 'Wistia');\n\n_defineProperty(Wistia, \"canPlay\", url => MATCH_URL.test(url));\n\n_defineProperty(Wistia, \"loopOnEnded\", true);\n\nexport default createSinglePlayer(Wistia);","map":{"version":3,"sources":["/Users/braflow/loomradio/src/players/Wistia.js"],"names":["React","Component","callPlayer","getSDK","createSinglePlayer","SDK_URL","SDK_GLOBAL","MATCH_URL","Wistia","getID","url","match","load","playing","muted","controls","onReady","onPlay","onPause","onSeek","onEnded","config","onError","props","then","window","_wq","push","id","options","autoPlay","silentAutoPlay","controlsVisibleOnLoad","wistia","player","unbind","bind","play","pause","stop","seekTo","seconds","setVolume","fraction","setPlaybackRate","rate","getDuration","getCurrentTime","getSecondsLoaded","render","className","style","width","height","test"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK } from '../utils'\nimport createSinglePlayer from '../singlePlayer'\n\nconst SDK_URL = '//fast.wistia.com/assets/external/E-v1.js'\nconst SDK_GLOBAL = 'Wistia'\nconst MATCH_URL = /(?:wistia\\.com|wi\\.st)\\/(?:medias|embed)\\/(.*)$/\n\nexport class Wistia extends Component {\n  static displayName = 'Wistia'\n  static canPlay = url => MATCH_URL.test(url)\n  static loopOnEnded = true\n\n  callPlayer = callPlayer\n  getID (url) {\n    return url && url.match(MATCH_URL)[1]\n  }\n  load (url) {\n    const { playing, muted, controls, onReady, onPlay, onPause, onSeek, onEnded, config, onError } = this.props\n    getSDK(SDK_URL, SDK_GLOBAL).then(() => {\n      window._wq = window._wq || []\n      window._wq.push({\n        id: this.getID(url),\n        options: {\n          autoPlay: playing,\n          silentAutoPlay: 'allow',\n          muted: muted,\n          controlsVisibleOnLoad: controls,\n          ...config.wistia.options\n        },\n        onReady: player => {\n          this.player = player\n          this.unbind()\n          this.player.bind('play', onPlay)\n          this.player.bind('pause', onPause)\n          this.player.bind('seek', onSeek)\n          this.player.bind('end', onEnded)\n          onReady()\n        }\n      })\n    }, onError)\n  }\n  play () {\n    this.callPlayer('play')\n  }\n  pause () {\n    this.callPlayer('pause')\n  }\n  unbind () {\n    const { onPlay, onPause, onSeek, onEnded } = this.props\n    this.player.unbind('play', onPlay)\n    this.player.unbind('pause', onPause)\n    this.player.unbind('seek', onSeek)\n    this.player.unbind('end', onEnded)\n  }\n  stop () {\n    this.unbind()\n    this.callPlayer('remove')\n  }\n  seekTo (seconds) {\n    this.callPlayer('time', seconds)\n  }\n  setVolume (fraction) {\n    this.callPlayer('volume', fraction)\n  }\n  mute = () => {\n    this.callPlayer('mute')\n  }\n  unmute = () => {\n    this.callPlayer('unmute')\n  }\n  setPlaybackRate (rate) {\n    this.callPlayer('playbackRate', rate)\n  }\n  getDuration () {\n    return this.callPlayer('duration')\n  }\n  getCurrentTime () {\n    return this.callPlayer('time')\n  }\n  getSecondsLoaded () {\n    return null\n  }\n  render () {\n    const id = this.getID(this.props.url)\n    const className = `wistia_embed wistia_async_${id}`\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n    return (\n      <div key={id} className={className} style={style} />\n    )\n  }\n}\n\nexport default createSinglePlayer(Wistia)\n"]},"metadata":{},"sourceType":"module"}