{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/ReactPlayer.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { propTypes, defaultProps, DEPRECATED_CONFIG_PROPS } from \"./props\";\nimport { getConfig, omit, isEqual } from \"./utils\";\nimport players from \"./players\";\nimport Player from \"./Player\";\nimport Preview from \"./Preview\";\nimport { FilePlayer } from \"./players/FilePlayer\";\nimport renderPreloadPlayers from \"./preload\";\nconst SUPPORTED_PROPS = Object.keys(propTypes);\nlet customPlayers = [];\nexport default class ReactPlayer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"config\", getConfig(this.props, defaultProps, true));\n\n    _defineProperty(this, \"state\", {\n      showPreview: !!this.props.light\n    });\n\n    _defineProperty(this, \"onClickPreview\", () => {\n      this.setState({\n        showPreview: false\n      });\n    });\n\n    _defineProperty(this, \"getDuration\", () => {\n      if (!this.player) return null;\n      return this.player.getDuration();\n    });\n\n    _defineProperty(this, \"getCurrentTime\", () => {\n      if (!this.player) return null;\n      return this.player.getCurrentTime();\n    });\n\n    _defineProperty(this, \"getSecondsLoaded\", () => {\n      if (!this.player) return null;\n      return this.player.getSecondsLoaded();\n    });\n\n    _defineProperty(this, \"getInternalPlayer\", (key = \"player\") => {\n      if (!this.player) return null;\n      return this.player.getInternalPlayer(key);\n    });\n\n    _defineProperty(this, \"seekTo\", (fraction, type) => {\n      if (!this.player) return null;\n      this.player.seekTo(fraction, type);\n    });\n\n    _defineProperty(this, \"onReady\", () => {\n      this.props.onReady(this);\n    });\n\n    _defineProperty(this, \"wrapperRef\", wrapper => {\n      this.wrapper = wrapper;\n    });\n\n    _defineProperty(this, \"activePlayerRef\", player => {\n      this.player = player;\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.progressFrequency) {\n      const message = \"ReactPlayer: %cprogressFrequency%c is deprecated, please use %cprogressInterval%c instead\";\n      console.warn(message, \"font-weight: bold\", \"\", \"font-weight: bold\", \"\");\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isEqual(this.props, nextProps) || !isEqual(this.state, nextState);\n  }\n\n  componentWillUpdate(nextProps) {\n    this.config = getConfig(nextProps, defaultProps);\n\n    if (!this.props.light && nextProps.light) {\n      this.setState({\n        showPreview: true\n      });\n    }\n  }\n\n  getActivePlayer(url) {\n    for (let Player of [...customPlayers, ...players]) {\n      if (Player.canPlay(url)) {\n        return Player;\n      }\n    } // Fall back to FilePlayer if nothing else can play the URL\n\n\n    return FilePlayer;\n  }\n\n  renderActivePlayer(url, activePlayer) {\n    if (!url) return null;\n    return __jsx(Player, _extends({}, this.props, {\n      key: activePlayer.displayName,\n      ref: this.activePlayerRef,\n      config: this.config,\n      activePlayer: activePlayer,\n      onReady: this.onReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  sortPlayers(a, b) {\n    // Retain player order to prevent weird iframe behaviour when switching players\n    if (a && b) {\n      return a.key < b.key ? -1 : 1;\n    }\n\n    return 0;\n  }\n\n  render() {\n    const {\n      url,\n      controls,\n      style,\n      width,\n      height,\n      light,\n      wrapper: Wrapper\n    } = this.props;\n    const showPreview = this.state.showPreview && url;\n    const otherProps = omit(this.props, SUPPORTED_PROPS, DEPRECATED_CONFIG_PROPS);\n    const activePlayer = this.getActivePlayer(url);\n    const renderedActivePlayer = this.renderActivePlayer(url, activePlayer);\n    const preloadPlayers = renderPreloadPlayers(url, controls, this.config);\n    const players = [renderedActivePlayer, ...preloadPlayers].sort(this.sortPlayers);\n\n    const preview = __jsx(Preview, {\n      url: url,\n      light: light,\n      onClick: this.onClickPreview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    });\n\n    return __jsx(Wrapper, _extends({\n      ref: this.wrapperRef,\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        width,\n        height\n      })\n    }, otherProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }), showPreview ? preview : players);\n  }\n\n}\n\n_defineProperty(ReactPlayer, \"addCustomPlayer\", player => {\n  customPlayers.push(player);\n});\n\n_defineProperty(ReactPlayer, \"removeCustomPlayers\", () => {\n  customPlayers = [];\n});\n\n_defineProperty(ReactPlayer, \"displayName\", \"ReactPlayer\");\n\n_defineProperty(ReactPlayer, \"propTypes\", propTypes);\n\n_defineProperty(ReactPlayer, \"defaultProps\", defaultProps);\n\n_defineProperty(ReactPlayer, \"canPlay\", url => {\n  for (let Player of [...customPlayers, ...players]) {\n    if (Player.canPlay(url)) {\n      return true;\n    }\n  }\n\n  return false;\n});\n\n_defineProperty(ReactPlayer, \"canEnablePIP\", url => {\n  for (let Player of [...customPlayers, ...players]) {\n    if (Player.canEnablePIP && Player.canEnablePIP(url)) {\n      return true;\n    }\n  }\n\n  return false;\n});\n\nexport { default as YouTube } from \"./players/YouTube\";\nexport { default as SoundCloud } from \"./players/SoundCloud\";\nexport { default as Vimeo } from \"./players/Vimeo\";\nexport { default as Facebook } from \"./players/Facebook\";\nexport { default as Streamable } from \"./players/Streamable\";\nexport { default as Wistia } from \"./players/Wistia\";\nexport { default as Twitch } from \"./players/Twitch\";\nexport { default as DailyMotion } from \"./players/DailyMotion\";\nexport { default as Mixcloud } from \"./players/Mixcloud\";\nexport { default as FilePlayer } from \"./players/FilePlayer\";","map":{"version":3,"sources":["/Users/braflow/loomradio/src/ReactPlayer.js"],"names":["React","Component","propTypes","defaultProps","DEPRECATED_CONFIG_PROPS","getConfig","omit","isEqual","players","Player","Preview","FilePlayer","renderPreloadPlayers","SUPPORTED_PROPS","Object","keys","customPlayers","ReactPlayer","props","showPreview","light","setState","player","getDuration","getCurrentTime","getSecondsLoaded","key","getInternalPlayer","fraction","type","seekTo","onReady","wrapper","componentDidMount","progressFrequency","message","console","warn","shouldComponentUpdate","nextProps","nextState","state","componentWillUpdate","config","getActivePlayer","url","canPlay","renderActivePlayer","activePlayer","displayName","activePlayerRef","sortPlayers","a","b","render","controls","style","width","height","Wrapper","otherProps","renderedActivePlayer","preloadPlayers","sort","preview","onClickPreview","wrapperRef","push","canEnablePIP","default","YouTube","SoundCloud","Vimeo","Facebook","Streamable","Wistia","Twitch","DailyMotion","Mixcloud"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { propTypes, defaultProps, DEPRECATED_CONFIG_PROPS } from \"./props\";\nimport { getConfig, omit, isEqual } from \"./utils\";\nimport players from \"./players\";\nimport Player from \"./Player\";\nimport Preview from \"./Preview\";\nimport { FilePlayer } from \"./players/FilePlayer\";\nimport renderPreloadPlayers from \"./preload\";\n\nconst SUPPORTED_PROPS = Object.keys(propTypes);\n\nlet customPlayers = [];\n\nexport default class ReactPlayer extends Component {\n  static addCustomPlayer = (player) => {\n    customPlayers.push(player);\n  };\n  static removeCustomPlayers = () => {\n    customPlayers = [];\n  };\n  static displayName = \"ReactPlayer\";\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n  static canPlay = (url) => {\n    for (let Player of [...customPlayers, ...players]) {\n      if (Player.canPlay(url)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  static canEnablePIP = (url) => {\n    for (let Player of [...customPlayers, ...players]) {\n      if (Player.canEnablePIP && Player.canEnablePIP(url)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  config = getConfig(this.props, defaultProps, true);\n  state = {\n    showPreview: !!this.props.light,\n  };\n  componentDidMount() {\n    if (this.props.progressFrequency) {\n      const message =\n        \"ReactPlayer: %cprogressFrequency%c is deprecated, please use %cprogressInterval%c instead\";\n      console.warn(message, \"font-weight: bold\", \"\", \"font-weight: bold\", \"\");\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isEqual(this.props, nextProps) || !isEqual(this.state, nextState);\n  }\n  componentWillUpdate(nextProps) {\n    this.config = getConfig(nextProps, defaultProps);\n    if (!this.props.light && nextProps.light) {\n      this.setState({ showPreview: true });\n    }\n  }\n  onClickPreview = () => {\n    this.setState({ showPreview: false });\n  };\n  getDuration = () => {\n    if (!this.player) return null;\n    return this.player.getDuration();\n  };\n  getCurrentTime = () => {\n    if (!this.player) return null;\n    return this.player.getCurrentTime();\n  };\n  getSecondsLoaded = () => {\n    if (!this.player) return null;\n    return this.player.getSecondsLoaded();\n  };\n  getInternalPlayer = (key = \"player\") => {\n    if (!this.player) return null;\n    return this.player.getInternalPlayer(key);\n  };\n  seekTo = (fraction, type) => {\n    if (!this.player) return null;\n    this.player.seekTo(fraction, type);\n  };\n  onReady = () => {\n    this.props.onReady(this);\n  };\n  getActivePlayer(url) {\n    for (let Player of [...customPlayers, ...players]) {\n      if (Player.canPlay(url)) {\n        return Player;\n      }\n    }\n    // Fall back to FilePlayer if nothing else can play the URL\n    return FilePlayer;\n  }\n  wrapperRef = (wrapper) => {\n    this.wrapper = wrapper;\n  };\n  activePlayerRef = (player) => {\n    this.player = player;\n  };\n  renderActivePlayer(url, activePlayer) {\n    if (!url) return null;\n    return (\n      <Player\n        {...this.props}\n        key={activePlayer.displayName}\n        ref={this.activePlayerRef}\n        config={this.config}\n        activePlayer={activePlayer}\n        onReady={this.onReady}\n      />\n    );\n  }\n  sortPlayers(a, b) {\n    // Retain player order to prevent weird iframe behaviour when switching players\n    if (a && b) {\n      return a.key < b.key ? -1 : 1;\n    }\n    return 0;\n  }\n  render() {\n    const {\n      url,\n      controls,\n      style,\n      width,\n      height,\n      light,\n      wrapper: Wrapper,\n    } = this.props;\n    const showPreview = this.state.showPreview && url;\n    const otherProps = omit(\n      this.props,\n      SUPPORTED_PROPS,\n      DEPRECATED_CONFIG_PROPS\n    );\n    const activePlayer = this.getActivePlayer(url);\n    const renderedActivePlayer = this.renderActivePlayer(url, activePlayer);\n    const preloadPlayers = renderPreloadPlayers(url, controls, this.config);\n    const players = [renderedActivePlayer, ...preloadPlayers].sort(\n      this.sortPlayers\n    );\n    const preview = (\n      <Preview url={url} light={light} onClick={this.onClickPreview} />\n    );\n    return (\n      <Wrapper\n        ref={this.wrapperRef}\n        style={{ ...style, width, height }}\n        {...otherProps}\n      >\n        {showPreview ? preview : players}\n      </Wrapper>\n    );\n  }\n}\n\nexport { default as YouTube } from \"./players/YouTube\";\nexport { default as SoundCloud } from \"./players/SoundCloud\";\nexport { default as Vimeo } from \"./players/Vimeo\";\nexport { default as Facebook } from \"./players/Facebook\";\nexport { default as Streamable } from \"./players/Streamable\";\nexport { default as Wistia } from \"./players/Wistia\";\nexport { default as Twitch } from \"./players/Twitch\";\nexport { default as DailyMotion } from \"./players/DailyMotion\";\nexport { default as Mixcloud } from \"./players/Mixcloud\";\nexport { default as FilePlayer } from \"./players/FilePlayer\";\n"]},"metadata":{},"sourceType":"module"}