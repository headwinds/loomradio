{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/braflow/loomradio/src/players/SoundCloud.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { callPlayer, getSDK } from '../utils';\nimport createSinglePlayer from '../singlePlayer';\nvar SDK_URL = 'https://w.soundcloud.com/player/api.js';\nvar SDK_GLOBAL = 'SC';\nvar MATCH_URL = /(soundcloud\\.com|snd\\.sc)\\/.+$/;\nexport var SoundCloud = /*#__PURE__*/function (_Component) {\n  _inherits(SoundCloud, _Component);\n\n  var _super = _createSuper(SoundCloud);\n\n  function SoundCloud() {\n    var _this;\n\n    _classCallCheck(this, SoundCloud);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"callPlayer\", callPlayer);\n\n    _defineProperty(_assertThisInitialized(_this), \"duration\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentTime\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"fractionLoaded\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"mute\", function () {\n      _this.setVolume(0);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unmute\", function () {\n      if (_this.props.volume !== null) {\n        _this.setVolume(_this.props.volume);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", function (iframe) {\n      _this.iframe = iframe;\n    });\n\n    return _this;\n  }\n\n  _createClass(SoundCloud, [{\n    key: \"load\",\n    value: function load(url, isReady) {\n      var _this2 = this;\n\n      getSDK(SDK_URL, SDK_GLOBAL).then(function (SC) {\n        if (!_this2.iframe) return;\n        var _SC$Widget$Events = SC.Widget.Events,\n            PLAY = _SC$Widget$Events.PLAY,\n            PLAY_PROGRESS = _SC$Widget$Events.PLAY_PROGRESS,\n            PAUSE = _SC$Widget$Events.PAUSE,\n            FINISH = _SC$Widget$Events.FINISH,\n            ERROR = _SC$Widget$Events.ERROR;\n\n        if (!isReady) {\n          _this2.player = SC.Widget(_this2.iframe);\n\n          _this2.player.bind(PLAY, _this2.props.onPlay);\n\n          _this2.player.bind(PAUSE, _this2.props.onPause);\n\n          _this2.player.bind(PLAY_PROGRESS, function (e) {\n            _this2.currentTime = e.currentPosition / 1000;\n            _this2.fractionLoaded = e.loadedProgress;\n          });\n\n          _this2.player.bind(FINISH, function () {\n            return _this2.props.onEnded();\n          });\n\n          _this2.player.bind(ERROR, function (e) {\n            return _this2.props.onError(e);\n          });\n        }\n\n        _this2.player.load(url, _objectSpread(_objectSpread({}, _this2.props.config.soundcloud.options), {}, {\n          callback: function callback() {\n            _this2.player.getDuration(function (duration) {\n              _this2.duration = duration / 1000;\n\n              _this2.props.onReady();\n            });\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.callPlayer('play');\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.callPlayer('pause');\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {// Nothing to do\n    }\n  }, {\n    key: \"seekTo\",\n    value: function seekTo(seconds) {\n      this.callPlayer('seekTo', seconds * 1000);\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(fraction) {\n      this.callPlayer('setVolume', fraction * 100);\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.duration;\n    }\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.currentTime;\n    }\n  }, {\n    key: \"getSecondsLoaded\",\n    value: function getSecondsLoaded() {\n      return this.fractionLoaded * this.duration;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = _objectSpread({\n        width: '100%',\n        height: '100%'\n      }, this.props.style);\n\n      return __jsx(\"iframe\", {\n        ref: this.ref,\n        src: \"https://w.soundcloud.com/player/?url=\".concat(encodeURIComponent(this.props.url)),\n        style: style,\n        frameBorder: 0,\n        allow: \"autoplay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return SoundCloud;\n}(Component);\n\n_defineProperty(SoundCloud, \"displayName\", 'SoundCloud');\n\n_defineProperty(SoundCloud, \"canPlay\", function (url) {\n  return MATCH_URL.test(url);\n});\n\n_defineProperty(SoundCloud, \"loopOnEnded\", true);\n\nexport default _c = createSinglePlayer(SoundCloud);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/braflow/loomradio/src/players/SoundCloud.js"],"names":["React","Component","callPlayer","getSDK","createSinglePlayer","SDK_URL","SDK_GLOBAL","MATCH_URL","SoundCloud","setVolume","props","volume","iframe","url","isReady","then","SC","Widget","Events","PLAY","PLAY_PROGRESS","PAUSE","FINISH","ERROR","player","bind","onPlay","onPause","e","currentTime","currentPosition","fractionLoaded","loadedProgress","onEnded","onError","load","config","soundcloud","options","callback","getDuration","duration","onReady","seconds","fraction","style","width","height","ref","encodeURIComponent","test"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK } from '../utils'\nimport createSinglePlayer from '../singlePlayer'\n\nconst SDK_URL = 'https://w.soundcloud.com/player/api.js'\nconst SDK_GLOBAL = 'SC'\nconst MATCH_URL = /(soundcloud\\.com|snd\\.sc)\\/.+$/\n\nexport class SoundCloud extends Component {\n  static displayName = 'SoundCloud'\n  static canPlay = url => MATCH_URL.test(url)\n  static loopOnEnded = true\n\n  callPlayer = callPlayer\n  duration = null\n  currentTime = null\n  fractionLoaded = null\n  load (url, isReady) {\n    getSDK(SDK_URL, SDK_GLOBAL).then(SC => {\n      if (!this.iframe) return\n      const { PLAY, PLAY_PROGRESS, PAUSE, FINISH, ERROR } = SC.Widget.Events\n      if (!isReady) {\n        this.player = SC.Widget(this.iframe)\n        this.player.bind(PLAY, this.props.onPlay)\n        this.player.bind(PAUSE, this.props.onPause)\n        this.player.bind(PLAY_PROGRESS, e => {\n          this.currentTime = e.currentPosition / 1000\n          this.fractionLoaded = e.loadedProgress\n        })\n        this.player.bind(FINISH, () => this.props.onEnded())\n        this.player.bind(ERROR, e => this.props.onError(e))\n      }\n      this.player.load(url, {\n        ...this.props.config.soundcloud.options,\n        callback: () => {\n          this.player.getDuration(duration => {\n            this.duration = duration / 1000\n            this.props.onReady()\n          })\n        }\n      })\n    })\n  }\n  play () {\n    this.callPlayer('play')\n  }\n  pause () {\n    this.callPlayer('pause')\n  }\n  stop () {\n    // Nothing to do\n  }\n  seekTo (seconds) {\n    this.callPlayer('seekTo', seconds * 1000)\n  }\n  setVolume (fraction) {\n    this.callPlayer('setVolume', fraction * 100)\n  }\n  mute = () => {\n    this.setVolume(0)\n  }\n  unmute = () => {\n    if (this.props.volume !== null) {\n      this.setVolume(this.props.volume)\n    }\n  }\n  getDuration () {\n    return this.duration\n  }\n  getCurrentTime () {\n    return this.currentTime\n  }\n  getSecondsLoaded () {\n    return this.fractionLoaded * this.duration\n  }\n  ref = iframe => {\n    this.iframe = iframe\n  }\n  render () {\n    const style = {\n      width: '100%',\n      height: '100%',\n      ...this.props.style\n    }\n    return (\n      <iframe\n        ref={this.ref}\n        src={`https://w.soundcloud.com/player/?url=${encodeURIComponent(this.props.url)}`}\n        style={style}\n        frameBorder={0}\n        allow='autoplay'\n      />\n    )\n  }\n}\n\nexport default createSinglePlayer(SoundCloud)\n"]},"metadata":{},"sourceType":"module"}