{"ast":null,"code":"var _jsxFileName = \"/Users/braflow/loomradio/src/players/SoundCloud.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { callPlayer, getSDK } from '../utils';\nimport createSinglePlayer from '../singlePlayer';\nconst SDK_URL = 'https://w.soundcloud.com/player/api.js';\nconst SDK_GLOBAL = 'SC';\nconst MATCH_URL = /(soundcloud\\.com|snd\\.sc)\\/.+$/;\nexport class SoundCloud extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"callPlayer\", callPlayer);\n\n    _defineProperty(this, \"duration\", null);\n\n    _defineProperty(this, \"currentTime\", null);\n\n    _defineProperty(this, \"fractionLoaded\", null);\n\n    _defineProperty(this, \"mute\", () => {\n      this.setVolume(0);\n    });\n\n    _defineProperty(this, \"unmute\", () => {\n      if (this.props.volume !== null) {\n        this.setVolume(this.props.volume);\n      }\n    });\n\n    _defineProperty(this, \"ref\", iframe => {\n      this.iframe = iframe;\n    });\n  }\n\n  load(url, isReady) {\n    getSDK(SDK_URL, SDK_GLOBAL).then(SC => {\n      if (!this.iframe) return;\n      const {\n        PLAY,\n        PLAY_PROGRESS,\n        PAUSE,\n        FINISH,\n        ERROR\n      } = SC.Widget.Events;\n\n      if (!isReady) {\n        this.player = SC.Widget(this.iframe);\n        this.player.bind(PLAY, this.props.onPlay);\n        this.player.bind(PAUSE, this.props.onPause);\n        this.player.bind(PLAY_PROGRESS, e => {\n          this.currentTime = e.currentPosition / 1000;\n          this.fractionLoaded = e.loadedProgress;\n        });\n        this.player.bind(FINISH, () => this.props.onEnded());\n        this.player.bind(ERROR, e => this.props.onError(e));\n      }\n\n      this.player.load(url, _objectSpread(_objectSpread({}, this.props.config.soundcloud.options), {}, {\n        callback: () => {\n          this.player.getDuration(duration => {\n            this.duration = duration / 1000;\n            this.props.onReady();\n          });\n        }\n      }));\n    });\n  }\n\n  play() {\n    this.callPlayer('play');\n  }\n\n  pause() {\n    this.callPlayer('pause');\n  }\n\n  stop() {// Nothing to do\n  }\n\n  seekTo(seconds) {\n    this.callPlayer('seekTo', seconds * 1000);\n  }\n\n  setVolume(fraction) {\n    this.callPlayer('setVolume', fraction * 100);\n  }\n\n  getDuration() {\n    return this.duration;\n  }\n\n  getCurrentTime() {\n    return this.currentTime;\n  }\n\n  getSecondsLoaded() {\n    return this.fractionLoaded * this.duration;\n  }\n\n  render() {\n    const style = _objectSpread({\n      width: '100%',\n      height: '100%'\n    }, this.props.style);\n\n    return __jsx(\"iframe\", {\n      ref: this.ref,\n      src: `https://w.soundcloud.com/player/?url=${encodeURIComponent(this.props.url)}`,\n      style: style,\n      frameBorder: 0,\n      allow: \"autoplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\n_defineProperty(SoundCloud, \"displayName\", 'SoundCloud');\n\n_defineProperty(SoundCloud, \"canPlay\", url => MATCH_URL.test(url));\n\n_defineProperty(SoundCloud, \"loopOnEnded\", true);\n\nexport default createSinglePlayer(SoundCloud);","map":{"version":3,"sources":["/Users/braflow/loomradio/src/players/SoundCloud.js"],"names":["React","Component","callPlayer","getSDK","createSinglePlayer","SDK_URL","SDK_GLOBAL","MATCH_URL","SoundCloud","setVolume","props","volume","iframe","load","url","isReady","then","SC","PLAY","PLAY_PROGRESS","PAUSE","FINISH","ERROR","Widget","Events","player","bind","onPlay","onPause","e","currentTime","currentPosition","fractionLoaded","loadedProgress","onEnded","onError","config","soundcloud","options","callback","getDuration","duration","onReady","play","pause","stop","seekTo","seconds","fraction","getCurrentTime","getSecondsLoaded","render","style","width","height","ref","encodeURIComponent","test"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK } from '../utils'\nimport createSinglePlayer from '../singlePlayer'\n\nconst SDK_URL = 'https://w.soundcloud.com/player/api.js'\nconst SDK_GLOBAL = 'SC'\nconst MATCH_URL = /(soundcloud\\.com|snd\\.sc)\\/.+$/\n\nexport class SoundCloud extends Component {\n  static displayName = 'SoundCloud'\n  static canPlay = url => MATCH_URL.test(url)\n  static loopOnEnded = true\n\n  callPlayer = callPlayer\n  duration = null\n  currentTime = null\n  fractionLoaded = null\n  load (url, isReady) {\n    getSDK(SDK_URL, SDK_GLOBAL).then(SC => {\n      if (!this.iframe) return\n      const { PLAY, PLAY_PROGRESS, PAUSE, FINISH, ERROR } = SC.Widget.Events\n      if (!isReady) {\n        this.player = SC.Widget(this.iframe)\n        this.player.bind(PLAY, this.props.onPlay)\n        this.player.bind(PAUSE, this.props.onPause)\n        this.player.bind(PLAY_PROGRESS, e => {\n          this.currentTime = e.currentPosition / 1000\n          this.fractionLoaded = e.loadedProgress\n        })\n        this.player.bind(FINISH, () => this.props.onEnded())\n        this.player.bind(ERROR, e => this.props.onError(e))\n      }\n      this.player.load(url, {\n        ...this.props.config.soundcloud.options,\n        callback: () => {\n          this.player.getDuration(duration => {\n            this.duration = duration / 1000\n            this.props.onReady()\n          })\n        }\n      })\n    })\n  }\n  play () {\n    this.callPlayer('play')\n  }\n  pause () {\n    this.callPlayer('pause')\n  }\n  stop () {\n    // Nothing to do\n  }\n  seekTo (seconds) {\n    this.callPlayer('seekTo', seconds * 1000)\n  }\n  setVolume (fraction) {\n    this.callPlayer('setVolume', fraction * 100)\n  }\n  mute = () => {\n    this.setVolume(0)\n  }\n  unmute = () => {\n    if (this.props.volume !== null) {\n      this.setVolume(this.props.volume)\n    }\n  }\n  getDuration () {\n    return this.duration\n  }\n  getCurrentTime () {\n    return this.currentTime\n  }\n  getSecondsLoaded () {\n    return this.fractionLoaded * this.duration\n  }\n  ref = iframe => {\n    this.iframe = iframe\n  }\n  render () {\n    const style = {\n      width: '100%',\n      height: '100%',\n      ...this.props.style\n    }\n    return (\n      <iframe\n        ref={this.ref}\n        src={`https://w.soundcloud.com/player/?url=${encodeURIComponent(this.props.url)}`}\n        style={style}\n        frameBorder={0}\n        allow='autoplay'\n      />\n    )\n  }\n}\n\nexport default createSinglePlayer(SoundCloud)\n"]},"metadata":{},"sourceType":"module"}