{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/braflow/loomradio/src/ReactPlayer.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { propTypes, defaultProps, DEPRECATED_CONFIG_PROPS } from \"./props\";\nimport { getConfig, omit, isEqual } from \"./utils\";\nimport players from \"./players\";\nimport Player from \"./Player\";\nimport Preview from \"./Preview\";\nimport { FilePlayer } from \"./players/FilePlayer\";\nimport renderPreloadPlayers from \"./preload\";\nvar SUPPORTED_PROPS = Object.keys(propTypes);\nvar customPlayers = [];\n\nvar ReactPlayer = /*#__PURE__*/function (_Component) {\n  _inherits(ReactPlayer, _Component);\n\n  var _super = _createSuper(ReactPlayer);\n\n  function ReactPlayer() {\n    var _this;\n\n    _classCallCheck(this, ReactPlayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"config\", getConfig(_this.props, defaultProps, true));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showPreview: !!_this.props.light\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickPreview\", function () {\n      _this.setState({\n        showPreview: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDuration\", function () {\n      if (!_this.player) return null;\n      return _this.player.getDuration();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCurrentTime\", function () {\n      if (!_this.player) return null;\n      return _this.player.getCurrentTime();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSecondsLoaded\", function () {\n      if (!_this.player) return null;\n      return _this.player.getSecondsLoaded();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInternalPlayer\", function () {\n      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"player\";\n      if (!_this.player) return null;\n      return _this.player.getInternalPlayer(key);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"seekTo\", function (fraction, type) {\n      if (!_this.player) return null;\n\n      _this.player.seekTo(fraction, type);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onReady\", function () {\n      _this.props.onReady(_assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"wrapperRef\", function (wrapper) {\n      _this.wrapper = wrapper;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"activePlayerRef\", function (player) {\n      _this.player = player;\n    });\n\n    return _this;\n  }\n\n  _createClass(ReactPlayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.progressFrequency) {\n        var message = \"ReactPlayer: %cprogressFrequency%c is deprecated, please use %cprogressInterval%c instead\";\n        console.warn(message, \"font-weight: bold\", \"\", \"font-weight: bold\", \"\");\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !isEqual(this.props, nextProps) || !isEqual(this.state, nextState);\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps) {\n      this.config = getConfig(nextProps, defaultProps);\n\n      if (!this.props.light && nextProps.light) {\n        this.setState({\n          showPreview: true\n        });\n      }\n    }\n  }, {\n    key: \"getActivePlayer\",\n    value: function getActivePlayer(url) {\n      for (var _i = 0, _arr = [].concat(_toConsumableArray(customPlayers), _toConsumableArray(players)); _i < _arr.length; _i++) {\n        var _Player = _arr[_i];\n\n        if (_Player.canPlay(url)) {\n          return _Player;\n        }\n      }\n\n      console.log(\"yep\"); // Fall back to FilePlayer if nothing else can play the URL\n\n      return FilePlayer;\n    }\n  }, {\n    key: \"renderActivePlayer\",\n    value: function renderActivePlayer(url, activePlayer) {\n      if (!url) return null;\n      return __jsx(Player, _extends({}, this.props, {\n        key: activePlayer.displayName,\n        ref: this.activePlayerRef,\n        config: this.config,\n        activePlayer: activePlayer,\n        onReady: this.onReady,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"sortPlayers\",\n    value: function sortPlayers(a, b) {\n      // Retain player order to prevent weird iframe behaviour when switching players\n      if (a && b) {\n        return a.key < b.key ? -1 : 1;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          url = _this$props.url,\n          controls = _this$props.controls,\n          style = _this$props.style,\n          width = _this$props.width,\n          height = _this$props.height,\n          light = _this$props.light,\n          Wrapper = _this$props.wrapper;\n      var showPreview = this.state.showPreview && url;\n      var otherProps = omit(this.props, SUPPORTED_PROPS, DEPRECATED_CONFIG_PROPS);\n      var activePlayer = this.getActivePlayer(url);\n      var renderedActivePlayer = this.renderActivePlayer(url, activePlayer);\n      var preloadPlayers = renderPreloadPlayers(url, controls, this.config);\n      var players = [renderedActivePlayer].concat(_toConsumableArray(preloadPlayers)).sort(this.sortPlayers);\n\n      var preview = __jsx(Preview, {\n        url: url,\n        light: light,\n        onClick: this.onClickPreview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      });\n\n      return __jsx(Wrapper, _extends({\n        ref: this.wrapperRef,\n        style: _objectSpread(_objectSpread({}, style), {}, {\n          width: width,\n          height: height\n        })\n      }, otherProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }), showPreview ? preview : players);\n    }\n  }]);\n\n  return ReactPlayer;\n}(Component);\n\n_defineProperty(ReactPlayer, \"addCustomPlayer\", function (player) {\n  customPlayers.push(player);\n});\n\n_defineProperty(ReactPlayer, \"removeCustomPlayers\", function () {\n  customPlayers = [];\n});\n\n_defineProperty(ReactPlayer, \"displayName\", \"ReactPlayer\");\n\n_defineProperty(ReactPlayer, \"propTypes\", propTypes);\n\n_defineProperty(ReactPlayer, \"defaultProps\", defaultProps);\n\n_defineProperty(ReactPlayer, \"canPlay\", function (url) {\n  for (var _i2 = 0, _arr2 = [].concat(_toConsumableArray(customPlayers), _toConsumableArray(players)); _i2 < _arr2.length; _i2++) {\n    var _Player2 = _arr2[_i2];\n\n    if (_Player2.canPlay(url)) {\n      return true;\n    }\n  }\n\n  return false;\n});\n\n_defineProperty(ReactPlayer, \"canEnablePIP\", function (url) {\n  for (var _i3 = 0, _arr3 = [].concat(_toConsumableArray(customPlayers), _toConsumableArray(players)); _i3 < _arr3.length; _i3++) {\n    var _Player3 = _arr3[_i3];\n\n    if (_Player3.canEnablePIP && _Player3.canEnablePIP(url)) {\n      return true;\n    }\n  }\n\n  return false;\n});\n\nexport { ReactPlayer as default };\nexport { default as YouTube } from \"./players/YouTube\";\nexport { default as SoundCloud } from \"./players/SoundCloud\";\nexport { default as Vimeo } from \"./players/Vimeo\";\nexport { default as Facebook } from \"./players/Facebook\";\nexport { default as Streamable } from \"./players/Streamable\";\nexport { default as Wistia } from \"./players/Wistia\";\nexport { default as Twitch } from \"./players/Twitch\";\nexport { default as DailyMotion } from \"./players/DailyMotion\";\nexport { default as Mixcloud } from \"./players/Mixcloud\";\nexport { default as FilePlayer } from \"./players/FilePlayer\";","map":{"version":3,"sources":["/Users/braflow/loomradio/src/ReactPlayer.js"],"names":["React","Component","propTypes","defaultProps","DEPRECATED_CONFIG_PROPS","getConfig","omit","isEqual","players","Player","Preview","FilePlayer","renderPreloadPlayers","SUPPORTED_PROPS","Object","keys","customPlayers","ReactPlayer","props","showPreview","light","setState","player","getDuration","getCurrentTime","getSecondsLoaded","key","getInternalPlayer","fraction","type","seekTo","onReady","wrapper","progressFrequency","message","console","warn","nextProps","nextState","state","config","url","canPlay","log","activePlayer","displayName","activePlayerRef","a","b","controls","style","width","height","Wrapper","otherProps","getActivePlayer","renderedActivePlayer","renderActivePlayer","preloadPlayers","sort","sortPlayers","preview","onClickPreview","wrapperRef","push","canEnablePIP","default","YouTube","SoundCloud","Vimeo","Facebook","Streamable","Wistia","Twitch","DailyMotion","Mixcloud"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,uBAAlC,QAAiE,SAAjE;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,QAAyC,SAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,oBAAP,MAAiC,WAAjC;AAEA,IAAMC,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYb,SAAZ,CAAxB;AAEA,IAAIc,aAAa,GAAG,EAApB;;IAEqBC,W;;;;;;;;;;;;;;;;6DA0BVZ,SAAS,CAAC,MAAKa,KAAN,EAAaf,YAAb,EAA2B,IAA3B,C;;4DACV;AACNgB,MAAAA,WAAW,EAAE,CAAC,CAAC,MAAKD,KAAL,CAAWE;AADpB,K;;qEAmBS,YAAM;AACrB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,K;;kEACa,YAAM;AAClB,UAAI,CAAC,MAAKG,MAAV,EAAkB,OAAO,IAAP;AAClB,aAAO,MAAKA,MAAL,CAAYC,WAAZ,EAAP;AACD,K;;qEACgB,YAAM;AACrB,UAAI,CAAC,MAAKD,MAAV,EAAkB,OAAO,IAAP;AAClB,aAAO,MAAKA,MAAL,CAAYE,cAAZ,EAAP;AACD,K;;uEACkB,YAAM;AACvB,UAAI,CAAC,MAAKF,MAAV,EAAkB,OAAO,IAAP;AAClB,aAAO,MAAKA,MAAL,CAAYG,gBAAZ,EAAP;AACD,K;;wEACmB,YAAoB;AAAA,UAAnBC,GAAmB,uEAAb,QAAa;AACtC,UAAI,CAAC,MAAKJ,MAAV,EAAkB,OAAO,IAAP;AAClB,aAAO,MAAKA,MAAL,CAAYK,iBAAZ,CAA8BD,GAA9B,CAAP;AACD,K;;6DACQ,UAACE,QAAD,EAAWC,IAAX,EAAoB;AAC3B,UAAI,CAAC,MAAKP,MAAV,EAAkB,OAAO,IAAP;;AAClB,YAAKA,MAAL,CAAYQ,MAAZ,CAAmBF,QAAnB,EAA6BC,IAA7B;AACD,K;;8DACS,YAAM;AACd,YAAKX,KAAL,CAAWa,OAAX;AACD,K;;iEAWY,UAACC,OAAD,EAAa;AACxB,YAAKA,OAAL,GAAeA,OAAf;AACD,K;;sEACiB,UAACV,MAAD,EAAY;AAC5B,YAAKA,MAAL,GAAcA,MAAd;AACD,K;;;;;;;wCAzDmB;AAClB,UAAI,KAAKJ,KAAL,CAAWe,iBAAf,EAAkC;AAChC,YAAMC,OAAO,GACX,2FADF;AAEAC,QAAAA,OAAO,CAACC,IAAR,CAAaF,OAAb,EAAsB,mBAAtB,EAA2C,EAA3C,EAA+C,mBAA/C,EAAoE,EAApE;AACD;AACF;;;0CACqBG,S,EAAWC,S,EAAW;AAC1C,aAAO,CAAC/B,OAAO,CAAC,KAAKW,KAAN,EAAamB,SAAb,CAAR,IAAmC,CAAC9B,OAAO,CAAC,KAAKgC,KAAN,EAAaD,SAAb,CAAlD;AACD;;;wCACmBD,S,EAAW;AAC7B,WAAKG,MAAL,GAAcnC,SAAS,CAACgC,SAAD,EAAYlC,YAAZ,CAAvB;;AACA,UAAI,CAAC,KAAKe,KAAL,CAAWE,KAAZ,IAAqBiB,SAAS,CAACjB,KAAnC,EAA0C;AACxC,aAAKC,QAAL,CAAc;AAAEF,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD;AACF;;;oCA2BesB,G,EAAK;AACnB,2DAAuBzB,aAAvB,sBAAyCR,OAAzC,4BAAmD;AAA9C,YAAIC,OAAM,WAAV;;AACH,YAAIA,OAAM,CAACiC,OAAP,CAAeD,GAAf,CAAJ,EAAyB;AACvB,iBAAOhC,OAAP;AACD;AACF;;AACD0B,MAAAA,OAAO,CAACQ,GAAR,CAAY,KAAZ,EANmB,CAOnB;;AACA,aAAOhC,UAAP;AACD;;;uCAOkB8B,G,EAAKG,Y,EAAc;AACpC,UAAI,CAACH,GAAL,EAAU,OAAO,IAAP;AACV,aACE,MAAC,MAAD,eACM,KAAKvB,KADX;AAEE,QAAA,GAAG,EAAE0B,YAAY,CAACC,WAFpB;AAGE,QAAA,GAAG,EAAE,KAAKC,eAHZ;AAIE,QAAA,MAAM,EAAE,KAAKN,MAJf;AAKE,QAAA,YAAY,EAAEI,YALhB;AAME,QAAA,OAAO,EAAE,KAAKb,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAUD;;;gCACWgB,C,EAAGC,C,EAAG;AAChB;AACA,UAAID,CAAC,IAAIC,CAAT,EAAY;AACV,eAAOD,CAAC,CAACrB,GAAF,GAAQsB,CAAC,CAACtB,GAAV,GAAgB,CAAC,CAAjB,GAAqB,CAA5B;AACD;;AACD,aAAO,CAAP;AACD;;;6BACQ;AAAA,wBASH,KAAKR,KATF;AAAA,UAELuB,GAFK,eAELA,GAFK;AAAA,UAGLQ,QAHK,eAGLA,QAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,KALK,eAKLA,KALK;AAAA,UAMLC,MANK,eAMLA,MANK;AAAA,UAOLhC,KAPK,eAOLA,KAPK;AAAA,UAQIiC,OARJ,eAQLrB,OARK;AAUP,UAAMb,WAAW,GAAG,KAAKoB,KAAL,CAAWpB,WAAX,IAA0BsB,GAA9C;AACA,UAAMa,UAAU,GAAGhD,IAAI,CACrB,KAAKY,KADgB,EAErBL,eAFqB,EAGrBT,uBAHqB,CAAvB;AAKA,UAAMwC,YAAY,GAAG,KAAKW,eAAL,CAAqBd,GAArB,CAArB;AACA,UAAMe,oBAAoB,GAAG,KAAKC,kBAAL,CAAwBhB,GAAxB,EAA6BG,YAA7B,CAA7B;AACA,UAAMc,cAAc,GAAG9C,oBAAoB,CAAC6B,GAAD,EAAMQ,QAAN,EAAgB,KAAKT,MAArB,CAA3C;AACA,UAAMhC,OAAO,GAAG,CAACgD,oBAAD,4BAA0BE,cAA1B,GAA0CC,IAA1C,CACd,KAAKC,WADS,CAAhB;;AAGA,UAAMC,OAAO,GACX,MAAC,OAAD;AAAS,QAAA,GAAG,EAAEpB,GAAd;AAAmB,QAAA,KAAK,EAAErB,KAA1B;AAAiC,QAAA,OAAO,EAAE,KAAK0C,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAGA,aACE,MAAC,OAAD;AACE,QAAA,GAAG,EAAE,KAAKC,UADZ;AAEE,QAAA,KAAK,kCAAOb,KAAP;AAAcC,UAAAA,KAAK,EAALA,KAAd;AAAqBC,UAAAA,MAAM,EAANA;AAArB;AAFP,SAGME,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKGnC,WAAW,GAAG0C,OAAH,GAAarD,OAL3B,CADF;AASD;;;;EA9IsCP,S;;gBAApBgB,W,qBACM,UAACK,MAAD,EAAY;AACnCN,EAAAA,aAAa,CAACgD,IAAd,CAAmB1C,MAAnB;AACD,C;;gBAHkBL,W,yBAIU,YAAM;AACjCD,EAAAA,aAAa,GAAG,EAAhB;AACD,C;;gBANkBC,W,iBAOE,a;;gBAPFA,W,eAQAf,S;;gBARAe,W,kBASGd,Y;;gBATHc,W,aAUF,UAACwB,GAAD,EAAS;AACxB,yDAAuBzB,aAAvB,sBAAyCR,OAAzC,+BAAmD;AAA9C,QAAIC,QAAM,aAAV;;AACH,QAAIA,QAAM,CAACiC,OAAP,CAAeD,GAAf,CAAJ,EAAyB;AACvB,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD,C;;gBAjBkBxB,W,kBAkBG,UAACwB,GAAD,EAAS;AAC7B,yDAAuBzB,aAAvB,sBAAyCR,OAAzC,+BAAmD;AAA9C,QAAIC,QAAM,aAAV;;AACH,QAAIA,QAAM,CAACwD,YAAP,IAAuBxD,QAAM,CAACwD,YAAP,CAAoBxB,GAApB,CAA3B,EAAqD;AACnD,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD,C;;SAzBkBxB,W;AAiJrB,SAASiD,OAAO,IAAIC,OAApB,QAAmC,mBAAnC;AACA,SAASD,OAAO,IAAIE,UAApB,QAAsC,sBAAtC;AACA,SAASF,OAAO,IAAIG,KAApB,QAAiC,iBAAjC;AACA,SAASH,OAAO,IAAII,QAApB,QAAoC,oBAApC;AACA,SAASJ,OAAO,IAAIK,UAApB,QAAsC,sBAAtC;AACA,SAASL,OAAO,IAAIM,MAApB,QAAkC,kBAAlC;AACA,SAASN,OAAO,IAAIO,MAApB,QAAkC,kBAAlC;AACA,SAASP,OAAO,IAAIQ,WAApB,QAAuC,uBAAvC;AACA,SAASR,OAAO,IAAIS,QAApB,QAAoC,oBAApC;AACA,SAAST,OAAO,IAAIvD,UAApB,QAAsC,sBAAtC","sourcesContent":["import React, { Component } from \"react\";\n\nimport { propTypes, defaultProps, DEPRECATED_CONFIG_PROPS } from \"./props\";\nimport { getConfig, omit, isEqual } from \"./utils\";\nimport players from \"./players\";\nimport Player from \"./Player\";\nimport Preview from \"./Preview\";\nimport { FilePlayer } from \"./players/FilePlayer\";\nimport renderPreloadPlayers from \"./preload\";\n\nconst SUPPORTED_PROPS = Object.keys(propTypes);\n\nlet customPlayers = [];\n\nexport default class ReactPlayer extends Component {\n  static addCustomPlayer = (player) => {\n    customPlayers.push(player);\n  };\n  static removeCustomPlayers = () => {\n    customPlayers = [];\n  };\n  static displayName = \"ReactPlayer\";\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n  static canPlay = (url) => {\n    for (let Player of [...customPlayers, ...players]) {\n      if (Player.canPlay(url)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  static canEnablePIP = (url) => {\n    for (let Player of [...customPlayers, ...players]) {\n      if (Player.canEnablePIP && Player.canEnablePIP(url)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  config = getConfig(this.props, defaultProps, true);\n  state = {\n    showPreview: !!this.props.light,\n  };\n  componentDidMount() {\n    if (this.props.progressFrequency) {\n      const message =\n        \"ReactPlayer: %cprogressFrequency%c is deprecated, please use %cprogressInterval%c instead\";\n      console.warn(message, \"font-weight: bold\", \"\", \"font-weight: bold\", \"\");\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isEqual(this.props, nextProps) || !isEqual(this.state, nextState);\n  }\n  componentWillUpdate(nextProps) {\n    this.config = getConfig(nextProps, defaultProps);\n    if (!this.props.light && nextProps.light) {\n      this.setState({ showPreview: true });\n    }\n  }\n  onClickPreview = () => {\n    this.setState({ showPreview: false });\n  };\n  getDuration = () => {\n    if (!this.player) return null;\n    return this.player.getDuration();\n  };\n  getCurrentTime = () => {\n    if (!this.player) return null;\n    return this.player.getCurrentTime();\n  };\n  getSecondsLoaded = () => {\n    if (!this.player) return null;\n    return this.player.getSecondsLoaded();\n  };\n  getInternalPlayer = (key = \"player\") => {\n    if (!this.player) return null;\n    return this.player.getInternalPlayer(key);\n  };\n  seekTo = (fraction, type) => {\n    if (!this.player) return null;\n    this.player.seekTo(fraction, type);\n  };\n  onReady = () => {\n    this.props.onReady(this);\n  };\n  getActivePlayer(url) {\n    for (let Player of [...customPlayers, ...players]) {\n      if (Player.canPlay(url)) {\n        return Player;\n      }\n    }\n    console.log(\"yep\");\n    // Fall back to FilePlayer if nothing else can play the URL\n    return FilePlayer;\n  }\n  wrapperRef = (wrapper) => {\n    this.wrapper = wrapper;\n  };\n  activePlayerRef = (player) => {\n    this.player = player;\n  };\n  renderActivePlayer(url, activePlayer) {\n    if (!url) return null;\n    return (\n      <Player\n        {...this.props}\n        key={activePlayer.displayName}\n        ref={this.activePlayerRef}\n        config={this.config}\n        activePlayer={activePlayer}\n        onReady={this.onReady}\n      />\n    );\n  }\n  sortPlayers(a, b) {\n    // Retain player order to prevent weird iframe behaviour when switching players\n    if (a && b) {\n      return a.key < b.key ? -1 : 1;\n    }\n    return 0;\n  }\n  render() {\n    const {\n      url,\n      controls,\n      style,\n      width,\n      height,\n      light,\n      wrapper: Wrapper,\n    } = this.props;\n    const showPreview = this.state.showPreview && url;\n    const otherProps = omit(\n      this.props,\n      SUPPORTED_PROPS,\n      DEPRECATED_CONFIG_PROPS\n    );\n    const activePlayer = this.getActivePlayer(url);\n    const renderedActivePlayer = this.renderActivePlayer(url, activePlayer);\n    const preloadPlayers = renderPreloadPlayers(url, controls, this.config);\n    const players = [renderedActivePlayer, ...preloadPlayers].sort(\n      this.sortPlayers\n    );\n    const preview = (\n      <Preview url={url} light={light} onClick={this.onClickPreview} />\n    );\n    return (\n      <Wrapper\n        ref={this.wrapperRef}\n        style={{ ...style, width, height }}\n        {...otherProps}\n      >\n        {showPreview ? preview : players}\n      </Wrapper>\n    );\n  }\n}\n\nexport { default as YouTube } from \"./players/YouTube\";\nexport { default as SoundCloud } from \"./players/SoundCloud\";\nexport { default as Vimeo } from \"./players/Vimeo\";\nexport { default as Facebook } from \"./players/Facebook\";\nexport { default as Streamable } from \"./players/Streamable\";\nexport { default as Wistia } from \"./players/Wistia\";\nexport { default as Twitch } from \"./players/Twitch\";\nexport { default as DailyMotion } from \"./players/DailyMotion\";\nexport { default as Mixcloud } from \"./players/Mixcloud\";\nexport { default as FilePlayer } from \"./players/FilePlayer\";\n"]},"metadata":{},"sourceType":"module"}