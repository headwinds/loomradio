{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/braflow/loomradio/src/players/Facebook.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { callPlayer, getSDK, randomString } from '../utils';\nimport createSinglePlayer from '../singlePlayer';\nvar SDK_URL = '//connect.facebook.net/en_US/sdk.js';\nvar SDK_GLOBAL = 'FB';\nvar SDK_GLOBAL_READY = 'fbAsyncInit';\nvar MATCH_URL = /facebook\\.com\\/([^/?].+\\/)?video(s|\\.php)[/?].*$/;\nvar PLAYER_ID_PREFIX = 'facebook-player-';\nexport var Facebook = /*#__PURE__*/function (_Component) {\n  _inherits(Facebook, _Component);\n\n  var _super = _createSuper(Facebook);\n\n  function Facebook() {\n    var _this;\n\n    _classCallCheck(this, Facebook);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"callPlayer\", callPlayer);\n\n    _defineProperty(_assertThisInitialized(_this), \"playerID\", PLAYER_ID_PREFIX + randomString());\n\n    _defineProperty(_assertThisInitialized(_this), \"mute\", function () {\n      _this.callPlayer('mute');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unmute\", function () {\n      _this.callPlayer('unmute');\n    });\n\n    return _this;\n  }\n\n  _createClass(Facebook, [{\n    key: \"load\",\n    value: function load(url, isReady) {\n      var _this2 = this;\n\n      if (isReady) {\n        getSDK(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function (FB) {\n          return FB.XFBML.parse();\n        });\n        return;\n      }\n\n      getSDK(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function (FB) {\n        FB.init({\n          appId: _this2.props.config.facebook.appId,\n          xfbml: true,\n          version: 'v2.5'\n        });\n        FB.Event.subscribe('xfbml.render', function (msg) {\n          // Here we know the SDK has loaded, even if onReady/onPlay\n          // is not called due to a video that cannot be embedded\n          _this2.props.onLoaded();\n        });\n        FB.Event.subscribe('xfbml.ready', function (msg) {\n          if (msg.type === 'video' && msg.id === _this2.playerID) {\n            _this2.player = msg.instance;\n\n            _this2.player.subscribe('startedPlaying', _this2.props.onPlay);\n\n            _this2.player.subscribe('paused', _this2.props.onPause);\n\n            _this2.player.subscribe('finishedPlaying', _this2.props.onEnded);\n\n            _this2.player.subscribe('startedBuffering', _this2.props.onBuffer);\n\n            _this2.player.subscribe('finishedBuffering', _this2.props.onBufferEnd);\n\n            _this2.player.subscribe('error', _this2.props.onError);\n\n            if (!_this2.props.muted) {\n              // Player is muted by default\n              _this2.callPlayer('unmute');\n            }\n\n            _this2.props.onReady(); // For some reason Facebook have added `visibility: hidden`\n            // to the iframe when autoplay fails, so here we set it back\n\n\n            document.getElementById(_this2.playerID).querySelector('iframe').style.visibility = 'visible';\n          }\n        });\n      });\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.callPlayer('play');\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.callPlayer('pause');\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {// Nothing to do\n    }\n  }, {\n    key: \"seekTo\",\n    value: function seekTo(seconds) {\n      this.callPlayer('seek', seconds);\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(fraction) {\n      this.callPlayer('setVolume', fraction);\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.callPlayer('getDuration');\n    }\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.callPlayer('getCurrentPosition');\n    }\n  }, {\n    key: \"getSecondsLoaded\",\n    value: function getSecondsLoaded() {\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'black'\n      };\n      return __jsx(\"div\", {\n        style: style,\n        id: this.playerID,\n        className: \"fb-video\",\n        \"data-href\": this.props.url,\n        \"data-autoplay\": this.props.playing ? 'true' : 'false',\n        \"data-allowfullscreen\": \"true\",\n        \"data-controls\": this.props.controls ? 'true' : 'false',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Facebook;\n}(Component);\n\n_defineProperty(Facebook, \"displayName\", 'Facebook');\n\n_defineProperty(Facebook, \"canPlay\", function (url) {\n  return MATCH_URL.test(url);\n});\n\n_defineProperty(Facebook, \"loopOnEnded\", true);\n\nexport default _c = createSinglePlayer(Facebook);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/braflow/loomradio/src/players/Facebook.js"],"names":["React","Component","callPlayer","getSDK","randomString","createSinglePlayer","SDK_URL","SDK_GLOBAL","SDK_GLOBAL_READY","MATCH_URL","PLAYER_ID_PREFIX","Facebook","url","isReady","then","FB","XFBML","parse","init","appId","props","config","facebook","xfbml","version","Event","subscribe","msg","onLoaded","type","id","playerID","player","instance","onPlay","onPause","onEnded","onBuffer","onBufferEnd","onError","muted","onReady","document","getElementById","querySelector","style","visibility","seconds","fraction","width","height","backgroundColor","playing","controls","test"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK, randomString } from '../utils'\nimport createSinglePlayer from '../singlePlayer'\n\nconst SDK_URL = '//connect.facebook.net/en_US/sdk.js'\nconst SDK_GLOBAL = 'FB'\nconst SDK_GLOBAL_READY = 'fbAsyncInit'\nconst MATCH_URL = /facebook\\.com\\/([^/?].+\\/)?video(s|\\.php)[/?].*$/\nconst PLAYER_ID_PREFIX = 'facebook-player-'\n\nexport class Facebook extends Component {\n  static displayName = 'Facebook'\n  static canPlay = url => MATCH_URL.test(url)\n  static loopOnEnded = true\n\n  callPlayer = callPlayer\n  playerID = PLAYER_ID_PREFIX + randomString()\n  load (url, isReady) {\n    if (isReady) {\n      getSDK(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(FB => FB.XFBML.parse())\n      return\n    }\n    getSDK(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(FB => {\n      FB.init({\n        appId: this.props.config.facebook.appId,\n        xfbml: true,\n        version: 'v2.5'\n      })\n      FB.Event.subscribe('xfbml.render', msg => {\n        // Here we know the SDK has loaded, even if onReady/onPlay\n        // is not called due to a video that cannot be embedded\n        this.props.onLoaded()\n      })\n      FB.Event.subscribe('xfbml.ready', msg => {\n        if (msg.type === 'video' && msg.id === this.playerID) {\n          this.player = msg.instance\n          this.player.subscribe('startedPlaying', this.props.onPlay)\n          this.player.subscribe('paused', this.props.onPause)\n          this.player.subscribe('finishedPlaying', this.props.onEnded)\n          this.player.subscribe('startedBuffering', this.props.onBuffer)\n          this.player.subscribe('finishedBuffering', this.props.onBufferEnd)\n          this.player.subscribe('error', this.props.onError)\n          if (!this.props.muted) {\n            // Player is muted by default\n            this.callPlayer('unmute')\n          }\n          this.props.onReady()\n\n          // For some reason Facebook have added `visibility: hidden`\n          // to the iframe when autoplay fails, so here we set it back\n          document.getElementById(this.playerID).querySelector('iframe').style.visibility = 'visible'\n        }\n      })\n    })\n  }\n  play () {\n    this.callPlayer('play')\n  }\n  pause () {\n    this.callPlayer('pause')\n  }\n  stop () {\n    // Nothing to do\n  }\n  seekTo (seconds) {\n    this.callPlayer('seek', seconds)\n  }\n  setVolume (fraction) {\n    this.callPlayer('setVolume', fraction)\n  }\n  mute = () => {\n    this.callPlayer('mute')\n  }\n  unmute = () => {\n    this.callPlayer('unmute')\n  }\n  getDuration () {\n    return this.callPlayer('getDuration')\n  }\n  getCurrentTime () {\n    return this.callPlayer('getCurrentPosition')\n  }\n  getSecondsLoaded () {\n    return null\n  }\n  render () {\n    const style = {\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'black'\n    }\n    return (\n      <div\n        style={style}\n        id={this.playerID}\n        className='fb-video'\n        data-href={this.props.url}\n        data-autoplay={this.props.playing ? 'true' : 'false'}\n        data-allowfullscreen='true'\n        data-controls={this.props.controls ? 'true' : 'false'}\n      />\n    )\n  }\n}\n\nexport default createSinglePlayer(Facebook)\n"]},"metadata":{},"sourceType":"module"}